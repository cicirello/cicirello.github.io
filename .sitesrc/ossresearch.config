TITLE
Open Source Research Software - Vincent A. Cicirello - Professor of Computer Science

DESCRIPTION
Open source software from the research of Vincent A. Cicirello, including Java libraries for evolutionary
computation and other metaheuristics, and code to reproduce experimental results from published papers.

CONTENT
<article id="top" itemprop="mainContentOfPage" itemscope itemtype="https://schema.org/WebPageElement">
<h2>Open Source Research Software</h2>
<p>On this page, you will find information about my open source research software. This includes software
implemented as part of my research on evolutionary computation, artificial intelligence, machine learning, 
and algorithms, including Java libraries for evolutionary computation and other metaheuristics, and code 
to reproduce experimental results from my published papers. It is organized into the following sections:</p>
<ul>
<li><a href="#libraries">Research Software Libraries</a></li>
<li><a href="#reproducible">Reproducible Research Results</a></li>
</ul>
<p>You can find my research software at the following sites:</p>
<ul>
<li><a href="https://github.com/cicirello"><img alt="GitHub Profile" src="/images/mark-github-16.svg" width="20" height="20"> GitHub</a></li>
<li><a href="https://central.sonatype.com/namespace/org.cicirello"><img alt="Maven Central" src="/images/maven.svg" width="20" height="20"> Maven Central Repository</a></li>
</ul>

<section id="libraries">
<h3>Research Software Libraries</h3>
<p>The following is a list of my research software that I have released
in the form of libraries and frameworks to enable ease of reuse by others.</p>
<ul>
<li><strong>Chips-n-Salsa - A Java library of customizable, 
hybridizable, iterative, parallel, stochastic, and self-adaptive 
local search algorithms</strong>: The library includes 
implementations of several stochastic local search algorithms, 
including simulated annealing, hill climbers, as well as 
constructive search algorithms such as stochastic sampling. 
The library most extensively supports simulated annealing. It 
includes several classes for representing solutions to a variety 
of optimization problems. For example, the library includes a 
BitVector class that implements vectors of bits, as well as 
classes for representing solutions to problems where we are 
searching for an optimal vector of integers or reals. For each 
of the built-in representations, the library provides the most 
common mutation operators for generating random neighbors of 
candidate solutions. Additionally, the library provides extensive 
support for permutation optimization problems, including 
implementations of many different mutation operators for 
permutations, and utilizing the efficiently implemented 
Permutation class of the JavaPermutationTools (JPT) library.
<ul>
<li><a href ="https://chips-n-salsa.cicirello.org/">Project page</a>, including API documentation.</li>
<li>Source code: <a href="https://github.com/cicirello/Chips-n-Salsa">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/chips-n-salsa/"><img src="https://img.shields.io/maven-central/v/org.cicirello/chips-n-salsa.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Repository of <a href="https://github.com/cicirello/chips-n-salsa-examples">example programs</a> illustrating usage of the library.</li>
<li>Language: Java</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>JavaPermutationTools: A Java library for 
computation on permutations and sequences</strong>: The JavaPermutationTools 
(JPT) library provides Java classes that enable representing and generating 
permutations and sequences, as well as performing computation on permutations 
and sequences, such as implementations of a variety of permutation distance 
metrics as well as distance metrics on sequences (i.e., Strings, arrays, 
and other ordered data types).
<ul>
<li><a href ="https://jpt.cicirello.org/">Project page</a>, including API documentation.</li>
<li>Source code: <a href="https://github.com/cicirello/JavaPermutationTools">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/jpt/"><img src="https://img.shields.io/maven-central/v/org.cicirello/jpt.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Repository of <a href="https://github.com/cicirello/jpt-examples">example programs</a> illustrating usage of the library.</li>
<li>Language: Java</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>&rho;&mu;: A Java library of Randomization enHancements and Other Math Utilities</strong>:
&rho;&mu; includes implementations of various algorithms for efficiently randomly sampling 
combinations of indexes into arrays and other sequential structures. It also includes efficient 
implementations of random number generation from distributions other than uniform, such as Gaussian, 
Cauchy, etc. Additionally, it includes implementations of other math functions that are either needed 
by the randomization utilities, or which are needed by some of our other projects.
<ul>
<li><a href ="https://rho-mu.cicirello.org/">Project page</a>, including API documentation.</li>
<li>Source code: <a href="https://github.com/cicirello/rho-mu">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/rho-mu/"><img src="https://img.shields.io/maven-central/v/org.cicirello/rho-mu.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Language: Java</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>org.cicirello.core: A Java library of utilities and data structures</strong>: This 
library provides some of the core utilities and data structures used in several of our other libraries and
projects, including but not limited to <a href="https://chips-n-salsa.cicirello.org/">Chips-n-Salsa</a> 
and <a href="https://jpt.cicirello.org/">JavaPermutationTools</a>, as well as various projects
that use those libraries.
<ul>
<li><a href ="https://core.cicirello.org/">Project page</a>, including API documentation.</li>
<li>Source code: <a href="https://github.com/cicirello/core">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/core/"><img src="https://img.shields.io/maven-central/v/org.cicirello/core.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Language: Java</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>Ziggurat Gaussian</strong>: Java implementation of the 
Ziggurat algorithm for generating Gaussian distributed random numbers.
<ul>
<li>Source code: <a href="https://github.com/cicirello/ZigguratGaussian">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/ziggurat/"><img src="https://img.shields.io/maven-central/v/org.cicirello/ziggurat.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Language: Java</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>Performance Tests for Small Clusters</strong>: Code developed to 
test the performance of a small 8 node cluster of raspberry pis. Implementations 
of a few simple parallel algorithms for testing the performance of a small 
cluster. Uses Java RMI for communication between master node and the worker 
nodes. Also includes useful bash scripts such as for starting the RMI 
servers on the worker nodes, shutting down and rebooting worker nodes 
from the master node, etc.
<ul>
<li>Source code: <a href="https://github.com/cicirello/ClusterPerformanceTests">GitHub Repository</a></li>
<li><a href ="/software/ClusterPerformanceTests.zip">Zip of Java source.</a></li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

</ul>
<p><a href="#top"><em>Top of the page</em></a></p>
</section>


<section id="reproducible">
<h3>Reproducible Research Results</h3>
<p>The following is a list of software that can be used to reproduce the experimental results
from some of my published journal articles and conference papers.</p>
<ul>
<li><strong>permutation-crossover-landscape-analysis</strong>: Experiments comparing the performance of many crossover operators for permutations on fitness landscapes that isolate different permutation features, exploring the different problem characteristics that impact when different crossover operators are expected to perform well.
<ul>
<li>Code to reproduce the experiments of: <a href="https://doi.org/10.5220/0012204900003595"><img src="/images/doi-ecta-2023.svg" alt="IJCCI - ECTA: 10.5220/0012204900003595" height="20" width="200"></a></li>
<li>Source code: <a href="https://github.com/cicirello/permutation-crossover-landscape-analysis">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/permutation-crossover-landscape-analysis/"><img src="https://img.shields.io/maven-central/v/org.cicirello/permutation-crossover-landscape-analysis.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Languages: Java (experiments) and Python (analysis of results)</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>btpe-iterations</strong>: Experiments exploring the acceptance-rejection sampling behavior of the binomial random variate generation algorithm implemented in the <a href="https://rho-mu.cicirello.org/">&rho;&mu; library</a>.
<ul>
<li>Code to reproduce the experiments of: <a href="https://doi.org/10.3390/ASEC2023-15349"><img src="/images/doi-asec-2023.svg" alt="Eng. Proc.: 10.3390/ASEC2023-15349" height="20" width="200"></a></li>
<li>Source code: <a href="https://github.com/cicirello/btpe-iterations">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/btpe-iterations/"><img src="https://img.shields.io/maven-central/v/org.cicirello/btpe-iterations.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Languages: Java (experiments) and Python (analysis of results)</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>mone-article-experiments</strong>: Experiments related to permutation metrics, permutation mutation operators, and fitness landscape analysis for permutation optimization.
<ul>
<li>Code to reproduce the experiments of: <a href="https://doi.org/10.1007/s11036-022-02060-z"><img src="/images/doi-mone-2022.svg" alt="MONE: 10.1007/s11036-022-02060-z" height="20" width="222"></a> and <a href="https://doi.org/10.1007/978-3-030-24202-2_7"><img src="/images/doi-bict-2019.svg" alt="BICT 2019: 10.1007/978-3-030-24202-2_7" height="20" width="222"></a>.</li>
<li>Source code: <a href="https://github.com/cicirello/MONE2022-experiments">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/mone-article-experiments/"><img src="https://img.shields.io/maven-central/v/org.cicirello/mone-article-experiments.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Languages: Java (experiments) and Python (analysis of results)</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>cycle-mutation-experiments</strong>: Experiments with the new cycle mutation operator.
<ul>
<li>Code to reproduce the experiments of: <a href="https://doi.org/10.3390/app12115506"><img src="/images/doi-app-2022.svg" alt="Appl. Sci.: 10.3390/app12115506" height="20" width="200"></a>.</li>
<li>Source code: <a href="https://github.com/cicirello/cycle-mutation-experiments">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/cycle-mutation-experiments/"><img src="https://img.shields.io/maven-central/v/org.cicirello/cycle-mutation-experiments.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Languages: Java (experiments) and Python (analysis of results)</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>self-tuning-lam-experiments</strong>: Experiments with simulated annealing 
using the Self-Tuning Lam annealing schedule, comparing its behavior and performance with 
that of the Modified Lam annealing schedule.
<ul>
<li>Code to reproduce the experiments of: <a href="https://doi.org/10.3390/app11219828"><img src="/images/doi-app-2021.svg" alt="Appl. Sci.: 10.3390/app11219828" height="20" width="200"></a>.</li>
<li>Source code: <a href="https://github.com/cicirello/self-tuning-lam-experiments">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/self-tuning-lam-experiments/"><img src="https://img.shields.io/maven-central/v/org.cicirello/self-tuning-lam-experiments.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Languages: Java (experiments) and Python (analysis of results)</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

<li><strong>modified-lam-experiments</strong>: Experiments with 
simulated annealing and an optimized version of the modified 
lam adaptive annealing schedule.
<ul>
<li>Code to reproduce the experiments of: <a href="https://doi.org/10.4108/eai.16-12-2020.167653"><img src="/images/doi-inis-2021.svg" alt="EAI INIS: 10.4108/eai.16-12-2020.167653" height="20" width="250"></a>.</li>
<li>Source code: <a href="https://github.com/cicirello/modified-lam-experiments">GitHub Repository</a></li>
<li>Latest release: <a href="https://central.sonatype.com/artifact/org.cicirello/modified-lam-experiments/"><img src="https://img.shields.io/maven-central/v/org.cicirello/modified-lam-experiments.svg?label=Maven%20Central&logo=apachemaven" alt="Maven Central" height="20"></a></li>
<li>Languages: Java (experiments) and Python (analysis of results)</li>
<li>License: <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License Version 3 (GPLv3)</a>.</li>
</ul></li>

</ul>
<p><a href="#top"><em>Top of the page</em></a></p>
</section>

</article>
