var search_index = {"pages": [
	{"title": "Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Vincent A. Cicirello, Ph.D. Professional Bio: Dr. Vincent A. Cicirello is a Professor of Computer Science at Stockton University, where he is also currently the Chair of Computer Science. He has been at Stockton University since 2005. He is among the founding faculty of Stockton University's Behavioral Neuroscience program, an interdisciplinary undergraduate minor first offered in 2010; and he is also affiliated with Stockton University's Data Science and Strategic Analytics Masters program. His research interests include artificial intelligence, evolutionary computation, swarm intelligence, and computational intelligence. He was elevated to IEEE Senior Member in 2021, designated an ACM Senior Member in 2011, received the 2005 AAAI Outstanding Paper award, and was nominated for the 2006 GECCO Best Genetic Algorithm Track award. He received a U.S. Patent in 2010, and has published over 60 journal and conference publications. He is a member of AAAI (Life Member), ACM (Senior Member), ACM SIGCSE, ACM SIGAI, ACM SIGEVO, CCSC, EAI (Distinguished Member), IEEE (Senior Member), IEEE Computer Society, IEEE Computational Intelligence Society, and SIAM. Prior to joining the Stockton University faculty, Dr. Cicirello worked as a Research Scientist for Drexel University (2003-2005) at Drexel's Applied Communications and Information Networking (ACIN) Center in Camden, NJ as part of an interdisciplinary team from Drexel's Computer Science Department and Electrical Engineering Department developing the Secure Wireless Agent Testbed. During a 2012 sabbatical from Stockton University, Dr. Cicirello collaborated with Drexel's Geometric and Intelligent Computing Laboratory (GICL), as a Visiting Associate Professor, on research related to digital engineering data management. He earned a Ph.D. in Robotics from Carnegie Mellon University in 2003. While a Ph.D. student in CMU's Robotics Institute from 1999 to 2003, Vince's research included applications of swarm intelligence, research in applying machine learning to the control of metaheuristics, as well as multi-agent/multi-robot coordination. Vince's dissertation research was applied to industrial scheduling problems as well as robotic space exploration. One outcome of his dissertation research is a paper published and presented at the 2005 National Conference on Artificial Intelligence for which Vincent Cicirello, and his co-author and dissertation adviser Steve Smith, were awarded the 2005 AAAI Outstanding Paper Award. As part of a dual M.S./B.S. program, he earned a M.S. in Computer Science, a B.S. in Computer Science, and a B.S. in Mathematics from Drexel University in 1999. From 1998 to 1999, Vincent worked as a Research Assistant in Drexel University's Department of Computer Science and Mathematics in the GICL, where he participated in research related to managing large digital libraries of engineering data, such as his 1999 Masters Thesis where he developed algorithms for retrieving CAD/CAM data based on the design similarity of solid models. This research was later refined as well as expanded to retrieval based on manufacturing similarity, ultimately leading to a 2003 patent application, with U.S. patent granted in 2010. Current Affiliations: Stockton University Computer Science Behavioral Neuroscience Data Science and Strategic Analytics Awards and Honors: Elevated to IEEE Senior Member in 2021 Designated an ACM Senior Member in 2011 Awarded the 2005 AAAI Outstanding Paper Award Nominated for the 2006 GECCO Best Genetic Algorithm Track award Awarded EAI Distinguished Member in 2021. Publications: In addition to my Publications page, you can find additional information on my research, including full-text of articles and bibliographic data from a variety of sources, including: My Google Scholar profile My ACM Digital Library author profile My ORCID IEEE Xplore My ResearchGate profile The DBLP Computer Science Bibliography Preprints of some of my articles are available at the arXiv Professional Society Memberships: AAAI Lifetime Member ACM Senior Member ACM SIGAI ACM SIGCSE ACM SIGEVO CCSC Member of the CCSC Eastern Region Steering Committee since 2012 EAI Distinguished Member IEEE Senior Member IEEE Computer Society IEEE Computational Intelligence Society SIAM Past Affiliations Drexel University Department of Computer Science Department of Mathematics Applied Communications and Information Networking (ACIN) Center Secure Wireless Agent Testbed (SWAT) Geometric and Intelligent Computing Laboratory Carnegie Mellon University: Robotics Institute Intelligent Coordination and Logistics Laboratory Center for Integrated Manufacturing Decision Systems Federation of Intelligent Robotic Explorers Project School of Computer Science MediaStream, a Knight Ridder Company Automatic Data Processing, Inc.", "url": "https://www.cicirello.org/"},
	{"title": "Datasets - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Datasets This page contains datasets from my research, which spans a variety of applications of artificial intelligence, machine learning, evolutionary computation, and swarm intelligence. You can also explore my datasets archived in the Harvard Dataverse: Vincent A. Cicirello Dataverse. I will be adding more datasets here in the near future: A Benchmark Set of Instances for Weighted Tardiness Scheduling with Sequence-Dependent Setups, which is an NP-Hard single machine scheduling problem. The problem instances in this benchmark set have varying levels of duedate tightness, duedate range, and setup time severity.", "url": "https://www.cicirello.org/datasets/"},
	{"title": "Blog - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Blog My intention is to create a more general blog here on my personal website covering whatever topics I feel like blogging about. For now, I have been writing blog posts on DEV, a community-focused platform for software development. Check out my profile on DEV for a full list of my posts. My posts on DEV cover various open source tools that I've authored and maintain, including functionality, and example usage. This includes posts about GitHub Actions I've implemented. GitHub Actions is GitHub's CI/CD framework. Other posts concern my research software libraries (well, I plan to write such posts). In other cases, I've posted tips and tricks related to using various open source tools, etc. Selection of Posts in Chronological Order Here is a selection of my posts on DEV in reverse chronological order, along with very brief summaries of the post contents and topic. Hacktoberfest 2023 Update from Maintainer of the user-statistician GitHub Action, posted on DEV on October 9, 2023. A progress update on introducing additional locales for increased International support. Hacktoberfest 2023 Contributors Wanted: Additional Translations for the user-statistician GitHub Action, posted on DEV on September 30, 2023. An invitation to potential Hacktoberfest 2023 contributors for the addition of more language translations, as well as an explanation of how to add a new locale to the GitHub Action. Celebrating over 2 million pulls of pyaction from the GitHub Container Registry, posted on DEV on September 2, 2023. A post celebrating a milestone of 2 million downloads of pyaction from the GitHub Container Registry. JaCoCo Coverage Badges for Multi-Module Projects in GitHub Actions, posted on DEV on May 25, 2023. This post is a tutorial on usage of the jacoco-badge-generator for multi-module projects, including both within GitHub Actions as well as with the CLI utility. gnu-on-alpine and alpine-plus-plus: Two Lightweight Containers for Implementing GitHub Container Actions with Shell Scripting, posted on DEV on February 21, 2023. This post covers the motivation, purpose, and functionality of gnu-on-alpine and alpine-plus-plus, which are two Docker containers built atop Alpine Linux, and include a variety of shell scripting tools. pyaction: Over 1 million pulls from the GitHub Container Registry, posted on DEV on February 16, 2023. A post celebrating a milestone of 1 million downloads of pyaction from the GitHub Container Registry. Who likes stickers more? Software developers/computing professionals or five-year-olds? And why?, posted on DEV on February 2, 2023. Random musings are developers obsession with laptop stickers. About the #showdev tag from one of the #showdev moderators, posted on DEV on January 24, 2023. This post explains DEV's showdev tag, including its purpose, as well as links to a few good example posts. Automate Updating Major Release Tag on New Releases of a GitHub Action, posted on DEV on January 11, 2023. This is a short tutorial post on maintaining major release tags for GitHub Actions. pyaction: A Docker container with Python, git, and the GitHub CLI, posted on DEV on December 28, 2022. This post provides an overview of the pyaction Docker container, designed to simplify implementing GitHub Actions with Python, but also more generally applicable wherever you need Python and the GitHub CLI within a Docker container. How to Write to Workflow Job Summary from a GitHub Action, posted on DEV on December 21, 2022. This is a brief tutorial on writing to a GitHub workflow job summary from a GitHub Action implemented in Python, as well as how to do so from any step of a workflow. Bonus Tip: How to Use GitHub Actions to Test a GitHub Action Whose Output Must be Visually Inspected, posted on DEV on December 14, 2022. This post explains how to use workflow artifacts to extend my previous testing procedure to handle the case where you are testing a GitHub Action whose output requires visual inspection for complete validation. How to Test a GitHub Action with GitHub Actions, posted on DEV on December 7, 2022. This post details how to test a GitHub Action using the GitHub Actions framework itself, including unit testing and integration testing, along with using your workflow as a required pull request check. The examples assume that you are testing an Action implemented in Python, but approach can be easily adapted to other languages. Deploy a Documentation Website for a Java Library Using GitHub Actions, posted on DEV on November 30, 2022. This post explains how to use GitHub Actions to automate deployment of a documentation website for a Java library whenever a new release is available. This workflow builds the javadocs of the library, post-processes them to insert things like a referrer policy, the website's favicon, etc, updates an XML sitemap, and finally deploys to GitHub Pages. Generate an XML Sitemap for a Static Website in GitHub Actions, posted on DEV on November 23, 2022. This post explains the functionality and usage of the generate-sitemap GitHub Action that I've developed and maintain, and which is used to generate an XML sitemap for GitHub Pages sites entirely within GitHub Actions. Post-Process Javadoc-Generated Documentation in GitHub Actions Before Deploying to the Web, posted on DEV on November 16, 2022. This post introduces how to use javadoc-cleanup, a GitHub Action that post-processes javadoc-generated documentation to improve it in various ways prior to deployment. Using GitHub Actions to Build a Java Project With Pull Request Coverage Commenting and Coverage Badges, posted on DEV on November 9, 2022. This post is a tutorial on how to use GitHub Actions for a CI/CD pipeline to build a Java project, validate tests during pull requests, generate a coverage report, including commenting coverage on pull requests and generating coverage badges. Deploying Java Artifacts to Multiple Maven Repositories with GitHub Actions, posted on DEV on November 2, 2022. This post is a tutorial on how to use GitHub Actions and GitHub Releases to automate deploying Java artifacts to multiple Maven repositories. How to Patch the Deprecated set-output in GitHub Workflows and in Container Actions, posted on DEV on October 26, 2022. There is a new way for GitHub Container Actions, as well as workflow steps to produce outputs. This post explains how to patch container actions, including example Python functions, while maintaining backwards compatibility for non-upgraded self-hosted runners. Post also explains the new approach to workflow step outputs, using a workflow for a Java library deployment as an example. How to Use Maven Profiles to Selectively Activate Plugins and Other Configuration from the Command Line, posted on DEV on October 19, 2022. This post is part of a series covering various tips and tricks for using Apache Maven. This post specifically deals with how to use Maven profiles. Hacktoberfest Progress Update: Translation Contributions Still Welcome, posted on DEV on October 12, 2022. This is an update on Hacktoberfest 2022 progress on adding more language translations to the user-statistician GitHub Action. How to Use the Maven Shade Plugin if Your Project Uses Java Platform Module System, posted on DEV on October 5, 2022. This post is a tutorial on using the Maven Shade Plugin for Java projects that use the Java Platform Module System. Hacktoberfest Language Translation Contributors Wanted for the user-statistician GitHub Action, posted on DEV on September 30, 2022. Post seeking Hacktoberfest 2022 contributors for language translations for the user-statistician GitHub Action. Halloween Themes for the user-statistician GitHub Action, posted on DEV on September 28, 2022. This post introduces new Halloween themes available for the user-statistician GitHub Action. Add Metadata to a PDF Using pdfLaTeX, posted on DEV on September 21, 2022. This post explains a trick that uses pdfLaTeX to add metadata to a pdf, or to change the existing metadata in the pdf, regardless of how the original pdf was created. Combine Multiple PDF Files Into One Using pdfLaTeX, posted on DEV on September 14, 2022. This post explains a trick that uses pdfLaTeX to combine multiple pdfs into a single pdf, regardless of how the individual pdfs were originally created. How Programming and Classic Television are Alike, posted on DEV on September 7, 2022. What does programming have to do with Mr T, Cheers, the Golden Girls, the Brady Bunch, Full House, Quantum Leap, Gilligan's Island, Oscar the Grouch, Family Matters, Home Improvement, and Night Court? Probably nothing. But none-the-less this post connects programming to classic American television shows, personalities, and characters. Configuring GitHub's Linguist to Improve Repository Language Reporting, posted on DEV on August 31, 2022. This blog post is a how to for configuring GitHub's Linguist in a GitHub repository, such as for the purpose of correcting errors in the detected languages, or directing Linguist to report languages that are excluded by default, within the context of tools such as the user-statistician GitHub Action that I developed and maintain, which generates a chart summarizing the language usage in all of your public repositories, as well as for the language charts built into every GitHub repository. The user-statistician GitHub Action mentioned in Awesome-README, posted on DEV on August 25, 2022. In this blog post, I provide an update on the user-statistician GitHub Action's functionality that I maintain, which was recently mentioned in Awesome README (an Awesome List), along with detailed steps for configuring a GitHub workflow within your own GitHub profile repository. On JitPack's use of git repository name as Maven artifactId, posted on DEV on August 18, 2022. In this blog post, I continue my series of tips and tricks on JitPack usage, explaining a limitation of JitPack related to JitPack defining the artifactId of a library to be its git repository name. I use one of my libraries, JavaPermutationTools, as an example of this limitation. And offer a tip that may help overcome the limitation in some cases. Ahead-of-time JitPack Builds with Custom GroupId via GitHub Actions, posted on DEV on August 11, 2022. In this blog post, I provide detailed examples utilizing one of my libraries, Chips-n-Salsa, of: (a) how to configure JitPack with your reverse domain as the groupId, rather than JitPack's git repository based groupId; and (b) how to automated ahead-of-time JitPack builds with such a customized groupId. Post includes example GitHub Action workflows for integrating the technique into CI/CD workflows. How to Configure JitPack for Recent JDK Versions, posted on DEV on August 4, 2022. In this blog post, I discuss how and why to publish Java library artifacts via JitPack, even if you already release libraries via Maven Central. I provide detailed examples utilizing one of my libraries, Chips-n-Salsa, of how to use JitPack to import SNAPSHOTs of dependencies via commit hash, tag, and pull-request number. Additionally, I provide detailed examples of how to configure JitPack to build with more recent versions of the Java JDK, such as 17. How to Enable DEV Post Embeds for Pages From Your Website, posted on DEV on July 29, 2022. Detailed examples on how to use Open Graph tags on pages to enable embedding pages from personal websites and project websites within posts on DEV.to. The post uses examples from my project pages. Your Citation Metrics in an SVG for Your Website, posted on DEV on July 22, 2022. This blog post introduced an open source command-line tool that I authored, bibliometrics, which enables a researcher to generate an SVG summarizing bibliometrics for their research articles, and which is installable from PyPI. For embeds, does DEV use Open Graph tags? And what is the minimum set of OG tags required by DEV for an embed to work?, posted on DEV on July 22, 2022. A simple request to the DEV community for information on a DEV.to feature. Badges - TL;DR for your repository's README, posted on DEV on July 15, 2022. This post discusses the purpose of dynamic status badges in the README files of open source repositories, along with services that provide them, and tips for how to use them well. Post comment explaining difference among GitHub repositories with no license, MIT license, and Apache license, posted on DEV on July 15, 2022. This one is a comment (rather than a post) that was awarded the Beloved Comment badge based on reactions from the DEV.to community. It was a comment on someone else's post in response to a question they posed to the DEV community. My comment explained the difference among GitHub repositories with no license, MIT license, and Apache license. The jacoco-badge-generator GitHub Action is now also available as a CLI tool from PyPI, posted on DEV on July 8, 2022. This post introduces an update to the jacoco-badge-generator that includes the ability to use as a command line tool, rather than strictly as a GitHub Action. Several examples of how to use the new functionality is covered, including how to install from PyPI. JaCoCo coverage badges, PR coverage checks, and PR coverage comments, from GitHub Actions, posted on DEV on November 29, 2021. This post introduces an update to the jacoco-badge-generator, which includes pull-request coverage checks. Additionally, it provides an example workflow demonstrating how to use it in combination with the GitHub CLI to automate commenting on pull requests with the test coverage. This workflow was a submission to the DEV/GitHub Actions Hackathon. Progress and Lessons Learned Internationalizing the user-statistician GitHub Action, posted on DEV on October 13, 2021. This post serves a dual purpose: (a) providing a midway progress report on Hacktoberfest 2021, and (b) providing insights learned related to the internationalization effort for the user-statistician GitHub Action. Hacktoberfest Participants Help Us Internationalize the user-statistician GitHub Action, posted on DEV on September 29, 2021. I decided to participate in Hacktoberfest as a project maintainer for October 2021. I used Hacktoberfest as an opportunity to Internationalize the user-statistician GitHub Action, with Hacktoberfest contributors providing translations to various languages. Generate a GitHub stats SVG for your GitHub Profile README in GitHub Actions, posted on DEV on July 29, 2021. This post introduced a GitHub Action that I implemented, called the user-statistician, which is designed to query the GitHub GraphQL API and generate an SVG image summarizing your activity on GitHub.", "url": "https://www.cicirello.org/dev/"},
	{"title": "Professional Activities - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Professional Activities I regularly contribute to the professional community in a variety of ways, including serving on editorial boards, as well as on conference and professional society committees. This page includes a sampling of some of my professional activities. Advisory Boards and Committees Advisory Board (2017-present), Atlantic Cape Community College, Computer Information Systems and Office Systems Technology Advisory Council Eastern Region Steering Committee (2012-present), Consortium for Computing Sciences in Colleges: The Steering Committee provides guidance and oversight for eastern regional activities, including the annual regional conference Journal Editorial Boards Current Editorial Boards: Associate Editor (1/2024-present), IEEE Transactions on Evolutionary Computation Special Issue Editor (8/2021-present), Applied Sciences, Special Issue on Evolutionary Computation: Theories, Techniques, and Applications Section Editor (6/2021-present), Applied Sciences, Section on Computing and Artificial Intelligence Past Editorial Boards: Co-Editor-in-Chief (6/2020-12/2023), EAI Transactions on Mobile Communications and Applications Area Editor (3/2020-12/2023), Scalable Information Systems Topic Editor, Machine and Deep Learning (6/2021-5/2023): I served as one of three Topic Editors for the Topic Machine and Deep Learning, spanning the journals (1) Applied Sciences, (2) Big Data and Cognitive Computing, (3) Mathematics, (4) Electronics, and (5) Entropy. Co-Editor-in-Chief (5/2020-8/2021), EAI Transactions on Cognitive Communications Conference Chair or Chair of Conference Committees I served as the chair of the following conference and conference committees: Workshops, Tutorials, Panels Chair, 2018 Eastern Conference of the Consortium for Computing Sciences in Colleges Workshops, Tutorials, Panels Chair, 2017 Eastern Conference of the Consortium for Computing Sciences in Colleges Speakers Chair, 2016 Eastern Conference of the Consortium for Computing Sciences in Colleges Conference Chair, 2015 Eastern Conference of the Consortium for Computing Sciences in Colleges, hosted at Stockton University Special Tracks Chair, 2015 9th EAI International Conference on Bio-inspired Information and Communications Technologies Program Committee Vice Chair, 2015 9th EAI International Conference on Bio-inspired Information and Communications Technologies Track Co-Chair, 2015 EAI International Conference on Bio-inspired Information and Communications Technologies, Special Track on Combinatorial Optimization Poster Chair, 2014 Eastern Conference of the Consortium for Computing Sciences in Colleges Conference Chair, 2012 Eastern Conference of the Consortium for Computing Sciences in Colleges, which would have been held at Stockton University, but was canceled at the last minute due to Hurricane Sandy. The conference proceedings was still published, and most conference presentations rescheduled as part of the following year's conference. Local Arrangements Chair, 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, held at Drexel University. Local Arrangements Chair, 2004 IEEE First Symposium on Multi-Agent Security and Survivability, held at Drexel University. Conference Program Committees I serve (or have served) as a member of the program committees of many conferences, including the following: International Conference of the Florida Artificial Intelligence Research Society (FLAIRS): every year since 2011 through 2024 AAAI Symposium on Educational Advances in Artificial Intelligence: EAAI 2024, EAAI 2023, EAAI 2022, EAAI 2021 ACM Technical Symposium on Computer Science Education: every year since 2009 through 2024 2024 ACM/IEEE International Conference on Automation of Software Test (AST) International Conference on Evolutionary Computation Theory and Applications: ECTA 2023, ECTA 2022, ECTA 2021 International Electronic Conference on Applied Sciences (ASEC): ASEC 2023 AAAI Conference on Artificial Intelligence: AAAI 2022, AAAI 2021, AAAI 2011, AAAI 2005 EAI International Conference on Intelligent Transport Systems: INTSYS 2022, INTSYS 2021 EAI International Conference on Bio-inspired Information and Communications Technologies: BICT 2019, BICT 2017 IEEE Symposium on Computational Intelligence in Scheduling (CISched) in 2015, 2013, 2011, 2009, 2007 (this conference was held every two years) 11th IEEE International Conference on Open Source Systems and Technologies (IEEE ICOSST) in 2017 2016 IEEE Symposium on Computational Intelligence in Scheduling and Network Design (IEEE CISND) 2016 IEEE CISND Special Session: Metaheuristics and Hybrid Methods for Combinatorial Optimization Problems International Conference on Complex Distributed Systems: CODS 2011, CODS 2010, CODS 2009, CODS 2008, CODS 2007 Genetic and Evolutionary Computation Conference: GECCO 2007, GECCO 2006, GECCO 2005 2006 European Conference on Complex Systems Workshop on Multi-Agents for Modeling Complex Systems (MA4CS '06). International Joint Conference on Autonomous Agents and Multi-Agent Systems: AAMAS 2005, AAMAS 2004 2005 IEEE Second Symposium on Multi-Agent Security and Survivability AAMAS Workshop on Engineering Self-Organizing Applications: ESOA 2006, ESOA 2005. ICAPS 2005 Workshop on Constraint Programming for Planning and Scheduling (CPPS-05). IJCAI 2001 Workshop on Artificial Intelligence and Manufacturing. Reviewer for Journals and Conferences Reviewer for several IEEE journals and magazines, including: IEEE Computer IEEE Intelligent Systems IEEE Transactions on Evolutionary Computation IEEE Transactions on Knowledge and Data Engineering IEEE Transactions on Parallel and Distributed Systems Reviewer for the journal: ACM Transactions on Autonomous and Adaptive Systems. Reviewer for many other journals, including: Adaptive Behavior AI Communications AIEDAM AI for Engineering Design, Analysis and Manufacturing Annals of Combinatorics Annals of Operations Research Applied Soft Computing Autonomous Agents and Multi-Agent Systems Computer-Aided Design EAI Transactions on Cloud Systems EAI Transactions on Energy Web EAI Transactions on Industrial Networks and Intelligent Systems EAI Transactions on Pervasive Health and Technology Entropy European Journal of Operational Research Foundations of Data Science Information Sciences Journal of Computer and Information Science in Engineering Journal of Heuristics Journal of Intelligent Manufacturing Journal of Machine Learning Research Journal of Parallel and Distributed Computing Journal of Scheduling Journal of Supercomputing Machine Learning Journal Mathematics and Computers in Simulation Pattern Analysis and Applications Results in Engineering SoftwareX SpringerPlus Symmetry Reviewer for the following conferences: 2014 IEEE Symposium Series on Computational Intelligence (IEEE SSCI) ACM's annual conference on Innovation and Technology in Computer Science Education: ITiCSE 2014, ITiCSE 2013, ITiCSE 2012, ITiCSE 2011, ITiCSE 2010 Eastern Conference of the Consortium for Computing Sciences in Colleges: 2013, 2010, 2008, 2007 Northeastern Conference of the Consortium for Computing Sciences in Colleges: 2009 International Joint Conference on Artificial Intelligence: IJCAI 2007, IJCAI 2005 2008 International Conference on Intelligent Computing (ICIC) 1999 ASME 4th Design for Manufacturing Conference (ASME DFM-99)", "url": "https://www.cicirello.org/professional/"},
	{"title": "Publications - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Publications Vincent A. Cicirello has published over 60 refereed journal and conference papers on topics including artificial intelligence, genetic algorithms, evolutionary computation, swarm intelligence, computer-aided engineering, and computer science education. My bibliometrics Browse publications by year 2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998. Link label legend Link Links To Title Abstract/information page Full-text pdf file BibTeX file Persistent link to publisher's version Publisher's version Preprint on arXiv.org Source code repository, such as to reproduce experimental results, etc. 2024 (Top of the page) Algorithms for Generating Small Random Samples. Vincent A. Cicirello. Software: Practice and Experience, Early view: 1-9, September 2024. doi:10.1002/spe.3379 Fast Gaussian Distributed Pseudorandom Number Generation in Java via the Ziggurat Algorithm. Vincent A. Cicirello. Technical Report ALG-24-009, Cicirello.org, May 2024. Evolutionary Computation: Theories, Techniques, and Applications. Vincent A. Cicirello. Applied Sciences, 14(6), Article 2542, March 2024. doi:10.3390/app14062542 On the Average Runtime of an Open Source Binomial Random Variate Generation Algorithm. Vincent A. Cicirello. Technical Report ALG-24-007, Cicirello.org, March 2024. 2023 (Top of the page) A Survey and Analysis of Evolutionary Operators for Permutations. Vincent A. Cicirello. In Proceedings of the 15th International Joint Conference on Computational Intelligence, pages 288-299. November 2023. doi:10.5220/0012204900003595 An Analysis of an Open Source Binomial Random Variate Generation Algorithm. Vincent A. Cicirello. Engineering Proceedings, 56(1), Article 86, October 2023. doi:10.3390/ASEC2023-15349 Data Supplement to an Analysis of an Open Source Binomial Random Variate Generation Algorithm. Vincent A. Cicirello. Technical Report ALG-23-006, Cicirello.org, October 2023. On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection. Vincent A. Cicirello. Mobile Networks and Applications, 28(2): 507-517, April 2023. doi:10.1007/s11036-022-02060-z Machine and Deep Learning . Andrea Prati, Luis Javier García Villalba, and Vincent A. Cicirello (Editors). Applied Sciences, Big Data and Cognitive Computing, Mathematics, Electronics, Entropy, 2023. Special topic spanned these five journals from June 2021 through May 2023. 2022 (Top of the page) ρμ: A Java library of randomization enhancements and other math utilities. Vincent A. Cicirello. Journal of Open Source Software, 7(76), Article 4663, August 2022. doi:10.21105/joss.04663 Cycle Mutation: Evolving Permutations via Cycle Induction. Vincent A. Cicirello. Applied Sciences, 12(11), Article 5506, June 2022. doi:10.3390/app12115506 Interactive Bin Packing: A Java Application for Learning Constructive Heuristics for Combinatorial Optimization. Vincent A. Cicirello. Journal of Open Source Education, 5(49), Article 140, March 2022. doi:10.21105/jose.00140 2021 (Top of the page) Self-Tuning Lam Annealing: Learning Hyperparameters While Problem Solving. Vincent A. Cicirello. Applied Sciences, 11(21), Article 9828, November 2021. doi:10.3390/app11219828 Software Articles and Open Source Research Software: The Why, the What, and the How. Vincent A. Cicirello. EAI Endorsed Transactions on Cognitive Communications, January 2021. doi:10.4108/eai.28-1-2021.168507 Editorial from Co-Editor-in-Chief. Online First. 2020 (Top of the page) Optimizing the Modified Lam Annealing Schedule. Vincent A. Cicirello. Industrial Networks and Intelligent Systems, 7(25), Article e1, December 2020. doi:10.4108/eai.16-12-2020.167653 Chips-n-Salsa: A Java Library of Customizable, Hybridizable, Iterative, Parallel, Stochastic, and Self-Adaptive Local Search Algorithms. Vincent A. Cicirello. Journal of Open Source Software, 5(52), Article 2448, August 2020. doi:10.21105/joss.02448 Kendall Tau Sequence Distance: Extending Kendall Tau from Ranks to Sequences. Vincent A. Cicirello. Industrial Networks and Intelligent Systems, 7(23), Article e1, April 2020. doi:10.4108/eai.13-7-2018.163925 2019 (Top of the page) Classification of Permutation Distance Metrics for Fitness Landscape Analysis. Vincent A. Cicirello. In Proceedings of the 11th International Conference on Bio-inspired Information and Communication Technologies, pages 81-97. Springer Nature, March 2019. doi:10.1007/978-3-030-24202-2_7 2018 (Top of the page) JavaPermutationTools: A Java Library of Permutation Distance Metrics. Vincent A. Cicirello. Journal of Open Source Software, 3(31), Article 950, November 2018. doi:10.21105/joss.00950 Impact of Random Number Generation on Parallel Genetic Algorithms. Vincent A. Cicirello. In Proceedings of the Thirty-First International Florida Artificial Intelligence Research Society Conference, pages 2-7. AAAI Press, May 2018. 2017 (Top of the page) Design, Configuration, Implementation, and Performance of a Simple 32 Core Raspberry Pi Cluster. Vincent A. Cicirello. Technical Report DIST-17-004, Cicirello.org, August 2017. Variable Annealing Length and Parallelism in Simulated Annealing. Vincent A. Cicirello. In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 2-10. AAAI Press, June 2017. doi:10.1609/socs.v8i1.18424 Searching for a Permutation in a Haystack. Vincent A. Cicirello. In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 177. AAAI Press, June 2017. Previously Published Papers Track. Student Developed Computer Science Educational Tools as Software Engineering Course Projects. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 32(3): 55-61, January 2017. 2016 (Top of the page) The Permutation in a Haystack Problem and the Calculus of Search Landscapes. Vincent A. Cicirello. IEEE Transactions on Evolutionary Computation, 20(3): 434-446, June 2016. doi:10.1109/TEVC.2015.2477284 Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library. Vincent A. Cicirello. Harvard Dataverse, doi:10.7910/DVN/VHA0VQ, June 2016. Welcome to CCSC Eastern 2015. Vincent Cicirello and Aakash Taneja. Journal of Computing Sciences in Colleges, 31(3): 1-2, January 2016. 2015 (Top of the page) Genetic Algorithm Parameter Control: Application to Scheduling with Sequence-Dependent Setups. Vincent A. Cicirello. In Proceedings of the 9th International Conference on Bio-inspired Information and Communications Technologies, pages 136-143. EAI, December 2015. 2014 (Top of the page) On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators. Vincent A. Cicirello. In Proceedings of the 8th International Conference on Bio-inspired Information and Communications Technologies, pages 28-35. EAI, December 2014. 2013 (Top of the page) A Flexible and Extensible Approach to Automated CAD/CAM Format Classification. Vincent A. Cicirello and William C. Regli. Computers & Graphics, 37(5): 484-495, August 2013. doi:10.1016/j.cag.2013.03.007 Special Section on 3D Object Retrieval. A CS Unplugged Activity for the Online Classroom. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 28(6): 162-168, June 2013. Experiences with a Real Projects for Real Clients Course on Software Engineering at a Liberal Arts Institution. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 28(6): 50-56, June 2013. Profiling the Distance Characteristics of Mutation Operators for Permutation-Based Genetic Algorithms. Vincent A. Cicirello and Robert Cernera. In Proceedings of the Twenty-Sixth International Florida Artificial Intelligence Research Society Conference, pages 46-51. AAAI Press, May 2013. Welcome to CCSC Eastern 2012. Vincent Cicirello and Aakash Taneja. Journal of Computing Sciences in Colleges, 28(3): 1-2, January 2013. 2010 (Top of the page) Method for Comparing Solid Models. William C. Regli and Vincent A. Cicirello. U.S. Patent #7,761,265 B2, July 2010. Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm. Vincent A. Cicirello. In Proceedings of the Twenty-Third International Florida Artificial Intelligence Research Society Conference, FLAIRS-23, pages 14-19. AAAI Press, May 2010. 2009 (Top of the page) Collective Bin Packing: An Active Learning Exercise. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 24(6): 117-123, June 2009. On Self-Selected Pairing in CS1: Who Pairs with Whom?. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 24(6): 43-49, June 2009. On the Role and Effectiveness of Pop Quizzes in CS1. Vincent A. Cicirello. In Proceedings of the 40th ACM Technical Symposium on Computer Science Education, SIGCSE'09, pages 286-290. ACM Press, March 2009. doi:10.1145/1539024.1508971 Also published in ACM SIGCSE Inroads, 41(1):286-290, March 2009. Multi-heuristic Stochastic Sampling Search: Extreme Value Theory and the Max K-Armed Bandit. Vincent A. Cicirello. Technical Report AI-09-003, Cicirello.org, March 2009. Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Problem for Soft Computing. Vincent A. Cicirello. In Applications of Soft Computing: Updating the State of the Art, volume 52 of Advances in Soft Computing, pages 189-198. Springer, 2009. doi:10.1007/978-3-540-88079-0_19 2008 (Top of the page) Using Game Theory to Analyze a Biologically-Inspired Agent Coordination Mechanism. Vincent A. Cicirello. Technical Report AGENTS-08-002, Cicirello.org, October 2008. Statistical Models of Multistart Randomized Heuristic Search Performance. Vincent A. Cicirello. Technical Report AI-08-001, Cicirello.org, May 2008. Presented at the 40th Symposium on the Interface: Computing Science and Statistics (conference without proceedings), in Durham, NC, sponsored by the National Institute of Statistical Sciences. Full paper here as Technical Report. A Study of Wireless Security Privacy and Forensics. Demetrios Roubos, Shawn Casler, James Hedigan, Ryan Shaw, Suvineetha Herath, David Costantino, Vincent Cicirello, Robert Kachur, and Ajantha Herath. CCSC:SC Student Paper E-Journal, 1, April 2008. An Interdisciplinary Course on Artificial Intelligence Designed for a Liberal Arts Curriculum. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 23(3): 120-127, January 2008. 2007 (Top of the page) On the Design of an Adaptive Simulated Annealing Algorithm. Vincent A. Cicirello. In Proceedings of the International Conference on Principles and Practice of Constraint Programming First Workshop on Autonomous Search. AAAI Press, September 2007. The Challenge of Sequence-Dependent Setups: Proposal for a Scheduling Competition Track on One Machine Sequencing Problems. Vincent A. Cicirello. In Proceedings of the International Conference on Automated Planning and Scheduling (ICAPS) Workshop on Scheduling a Scheduling Competition. AAAI Press, September 2007. 2006 (Top of the page) Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position. Vincent A. Cicirello. In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO'06), volume 2, pages 1125-1131. ACM Press, July 2006. doi:10.1145/1143997.1144177 Nominated for the Genetic Algorithms Track Best Paper Award. 2005 (Top of the page) Service-Based Computing on MANETs: Enabling Dynamic Interoperability of First Responders. Joseph Kopena, Evan Sultanik, Gaurav Naik, Iris Howley, Maxim Peysakhov, Vincent A. Cicirello, Moshe Kam, and William Regli. IEEE Intelligent Systems, 20(5): 17-25, September/October 2005. doi:10.1109/MIS.2005.94 Special Issue on Artificial Intelligence for Homeland Security. Designing Decentralized Software for a Wireless Network Environment: Evaluating Patterns of Mobility for a Mobile Agent Swarm. Vincent A. Cicirello, Andrew Mroczkowski, and William Regli. In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 49-57. August 2005. doi:10.1109/MASSUR.2005.1507047 Agent Survivability Through Power Awareness. Maxim Peysakhov, Andrew Mroczkowski, Leonardo Urbano, Jacob Warren, Vincent A. Cicirello, William Regli, and Moshe Kam. In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 31-38. August 2005. doi:10.1109/MASSUR.2005.1507045 The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection. Vincent A. Cicirello and Stephen F. Smith. In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 3, pages 1355-1361. AAAI Press, July 2005. Winner of the AAAI 2005 Outstanding Paper Award. The AI Technologies of the Philadelphia Area Urban Wireless Network Testbed. Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Chris Dugan, Iris Howley, Moshe Kam, Joseph Kopena, Rob Lass, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, Brian Pyles, William Regli, Evan Sultanik, James Thiel, Kyle Usbeck, Dan Venutolo, and Marc Winners. In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 4, pages 1674-1675. AAAI Press, July 2005. Network Awareness and the Philadelphia Area Urban Wireless Network Testbed. Joseph B. Kopena, Vincent A. Cicirello, Maxim Peysakhov, Kris Malfettone, Andrew Mroczkowski, Gaurav Naik, Evan Sultanik, Moshe Kam, and William C. Regli. In AI Technologies for Homeland Security: Papers from the 2005 AAAI Spring Symposium, pages 70-75. AAAI Press, March 2005. Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics. Vincent A. Cicirello and Stephen F. Smith. Journal of Heuristics, 11(1): 5-34, January 2005. doi:10.1007/s10732-005-6997-8 2004 (Top of the page) Designing Dependable Agent Systems for Mobile Wireless Networks. Vincent A. Cicirello, Max Peysakhov, Gustave Anderson, Gaurav Naik, Kenneth Tsang, William C. Regli, and Moshe Kam. IEEE Intelligent Systems, 19(5): 39-45, September/October 2004. doi:10.1109/MIS.2004.41 Special Issue on Dependable Agent Systems. Heuristic Selection for Stochastic Search Optimization: Modeling Solution Quality by Extreme Value Theory. Vincent A. Cicirello and Stephen F. Smith. In Principles and Practice of Constraint Programming - CP 2004: 10th International Conference, Proceedings, volume LNCS 3258 of Lecture Notes in Computer Science, pages 197-211. Springer-Verlag, September/October 2004. doi:10.1007/978-3-540-30201-8_17 Engineering Multi-Agent Systems. Donovan Artz, Vincent A. Cicirello, William Regli, and Moshe Kam. In Proceedings of the 2004 IEEE First Symposium on Multi-Agent Security and Survivability, pages 100-107. August 2004. doi:10.1109/MASSUR.2004.1368423 Demonstration of the Secure Wireless Agent Testbed (SWAT). Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren. In Proceedings of the Third International Joint Conference on Autonomous Agents and Multi-Agent Systems (AAMAS-2004), volume 3, pages 1214-1215. IEEE Computer Society, July 2004. doi:10.1109/AAMAS.2004.10265 Intelligent Systems Demonstration: The Secure Wireless Agent Testbed (SWAT). Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren. In Proceedings of the Nineteenth National Conference on Artificial Intelligence and the Sixteenth Innovative Applications of Artificial Intelligence Conference, pages 1004-1005. AAAI Press, July 2004. Demonstration of the Secure Wireless Agent Testbed (SWAT). Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren. In The 14th International Conference on Automated Planning and Scheduling. June 2004. Wasp-like Agents for Distributed Factory Coordination. Vincent A. Cicirello and Stephen F. Smith. Autonomous Agents and Multi-Agent Systems, 8(3): 237-266, May 2004. doi:10.1023/B:AGNT.0000018807.12771.60 Ecology Based Decentralized Agent Management System. Maxim D. Peysakhov, Vincent A. Cicirello, and William C. Regli. In Formal Approaches to Agent-Based Systems: Third International Workshop, FAABS 2004, Revised Selected Papers, volume LNCS 3228 of Lecture Notes in Computer Science, pages 1-11. Springer-Verlag, April 2004. doi:10.1007/978-3-540-30960-4_1 The Secure Wireless Agent Testbed. Vincent Cicirello, Moshe Kam, William Regli, Rafael Alonso, and Jeffrey Bloom. In The DARPA Proposers Day Workshop: Defense Against Cyber Attacks on Mobile Ad Hoc Networks. February 2004. Invited Presentation. 2003 (Top of the page) Task Allocation Using a Distributed Market-Based Planning Mechanism. Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz. In Proceedings of the Second International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS-2003), pages 996-997. ACM Press, July 2003. doi:10.1145/860575.860763 Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance. Vincent A. Cicirello. PhD thesis, The Robotics Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, July 2003. Market-Based Multi-Robot Planning in a Distributed Layered Architecture. Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz. In Multi-Robot Systems: From Swarms to Intelligent Automata: Proceedings of the 2003 International Workshop on Multi-Robot Systems, volume 2, pages 27-38. Kluwer Academic Publishers, March 2003. Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library. Vincent A. Cicirello. Technical Report, Intelligent Coordination and Logistics Laboratory, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, February 2003. 2002 (Top of the page) An Approach to a Feature-based Comparison of Solid Models of Machined Parts. Vincent A. Cicirello and William C. Regli. Artificial Intelligence for Engineering Design, Analysis and Manufacturing, 16(5): 385-399, November 2002. doi:10.1017/S0890060402165048 A Distributed Layered Architecture for Mobile Robot Coordination: Application to Space Exploration. Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, Trey Smith, and Anthony Stentz. In The 3rd International NASA Workshop on Planning and Scheduling for Space. October 2002. Amplification of Search Performance through Randomization of Heuristics. Vincent A. Cicirello and Stephen F. Smith. In Principles and Practice of Constraint Programming - CP 2002: 8th International Conference, Proceedings, volume LNCS 2470 of Lecture Notes in Computer Science, pages 124-138. Springer-Verlag, September 2002. doi:10.1007/3-540-46135-3_9 WHISTLING: Wasp Behavior Inspired Stochastic Sampling. Vincent A. Cicirello and Stephen F. Smith. In The 2002 SIAM Annual Meeting and SIAM 50th Anniversary, Final Program and Abstracts, pages 228. SIAM, July 2002. Distributed Coordination of Resources via Wasp-like Agents. Vincent A. Cicirello and Stephen F. Smith. In Innovative Concepts for Agent-Based Systems: First International Workshop on Radical Agent Concepts, WRAC-2002, volume LNAI 2564 of Lecture Notes in Artificial Intelligence, pages 71-80. Springer-Verlag, January 2002. doi:10.1007/978-3-540-45173-0_5 2001 (Top of the page) Wasp-like Agents for Distributed Factory Coordination. Vincent A. Cicirello and Stephen F. Smith. Technical Report CMU-RI-TR-01-39, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, December 2001. Randomizing Dispatch Scheduling Policies. Vincent A. Cicirello and Stephen F. Smith. In Using Uncertainty Within Computation: Papers from the 2001 AAAI Fall Symposium, pages 30-37. AAAI Press, November 2001. A Game-Theoretic Analysis of Multi-Agent Systems for Shop Floor Routing. Vincent A. Cicirello. Technical Report CMU-RI-TR-01-28, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, September 2001. Improved Routing Wasps for Distributed Factory Control. Vincent A. Cicirello and Stephen F. Smith. In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 26-32. August 2001. Insect Societies and Manufacturing. Vincent A. Cicirello and Stephen F. Smith. In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 33-38. August 2001. Wasp Nests for Self-Configurable Factories. Vincent A. Cicirello and Stephen F. Smith. In Proceedings of the Fifth International Conference on Autonomous Agents, pages 473-480. ACM Press, May/June 2001. doi:10.1145/375735.376420 Machining Feature-Based Comparison of Mechanical Parts. Vincent A. Cicirello and William C. Regli. In Proceedings of the International Conference on Shape Modeling and Applications, pages 176-185. IEEE Computer Society Press, May 2001. doi:10.1109/SMA.2001.923388 Ant Colony Control for Autonomous Decentralized Shop Floor Routing. Vincent A. Cicirello and Stephen F. Smith. In ISADS-2001: Proceedings of the Fifth International Symposium on Autonomous Decentralized Systems, pages 383-390. IEEE Computer Society Press, March 2001. doi:10.1109/ISADS.2001.917443 2000 (Top of the page) Modeling GA Performance for Control Parameter Optimization. Vincent A. Cicirello and Stephen F. Smith. In GECCO-2000: Proceedings of the Genetic and Evolutionary Computation Conference, pages 235-242. Morgan Kaufmann Publishers, July 2000. Managing Digital Libraries for Computer-Aided Design. William C. Regli and Vincent A. Cicirello. Computer-Aided Design, 32(2): 119-132, February 2000. doi:10.1016/S0010-4485(99)00095-0 The Engineering Design Repositories Project. William C. Regli, Lisa Anthony, Vincent Cicirello, Jon John, Xiaoli Qin, Yuriy Shapirshteyn, and Vera Zaychik. In National Science Foundation Design and Manufacturing Grantees Meeting. January 2000. 1999 (Top of the page) Resolving Non-Uniqueness in Design Feature Histories. Vincent A. Cicirello and William C. Regli. In Proceedings of the Fifth ACM/SIGGRAPH Symposium on Solid Modeling and Applications, pages 76-84. ACM Press, June 1999. doi:10.1145/304012.304020 Intelligent Retrieval of Solid Models. Vincent A. Cicirello. Master's thesis, Department of Mathematics and Computer Science, Drexel University, Philadelphia, PA, June 1999. Intelligent Retrieval of CAD Models. Vincent A. Cicirello. In The Eleventh Annual Sigma Xi Research Symposium, pages 125. Drexel University and MCP Hahnemann University, May 1999. Abstract and Poster Presentation. Survey of Graph Matching Algorithms. Vincent A. Cicirello. Technical Report, Geometric and Intelligent Computing Laboratory, Drexel University, Philadelphia, PA, March 1999. 1998 (Top of the page) Representations and Algorithms for CAD/CAM Digital Libraries. William C. Regli and Vincent A. Cicirello. In SIAM Workshop on Mathematical Foundations for Features in Computer-Aided Design and Manufacturing, pages 34. October 1998.", "url": "https://www.cicirello.org/publications/"},
	{"title": "Representations and Algorithms for CAD/CAM Digital Libraries - SIAM Workshop on Mathematical Foundations for Features in Computer-Aided Design and Manufacturing - 1998", "tags": "", "type": "html", "text": "Representations and Algorithms for CAD/CAM Digital Libraries William C. Regli and Vincent A. Cicirello In SIAM Workshop on Mathematical Foundations for Features in Computer-Aided Design and Manufacturing, pages 34. October 1998. Abstract This presentation describes our initial effort to deploy a digital library to support engineering design and manufacturing. This experimental testbed, The Engineering Design Repository, is an effort to collect and archive public domain engineering data for use by researchers and engineering professionals. CAD knowledge-bases are vital to engineers, who search through vast amounts of corporate legacy data and navigate on-line catalogs to retrieve precisely the right components for assembly into new products. For example, it is conservatively estimated that more than 75% of design activity involves the reuse of previous designs. Our research begins to address the critical need for improved computational methods for reasoning about complex geometric, feature, and engineering information. In particular, we focus on archival and reuse of design and manufacturing data for mechatronic systems. We describe the research problems, give an overview of the initial architecture of testbed, and introduce some of our current results. We expect this work to help to further the mathematical foundation and algorithmic tools to support content-based retrieval from large engineering knowledge-bases.", "url": "https://www.cicirello.org/publications/cicirello1998siam.html"},
	{"title": "Representations and Algorithms for CAD/CAM Digital Libraries - SIAM Workshop on Mathematical Foundations for Features in Computer-Aided Design and Manufacturing - 1998", "tags": "drexel laboratory science geometric mathematics university computing computer street department chestnut intelligent extended", "type": "pdf", "text": "Representations and Algorithms for CAD/CAM Digital Libraries William C. Regli and Vincent A. Cicirello In SIAM Workshop on Mathematical Foundations for Features in Computer-Aided Design and Manufacturing, pages 34. October 1998. Abstract This presentation describes our initial effort to deploy a digital library to support engineering design and manufacturing. This experimental testbed, The Engineering Design Repository, is an effort to collect and archive public domain engineering data for use by researchers and engineering professionals. CAD knowledge-bases are vital to engineers, who search through vast amounts of corporate legacy data and navigate on-line catalogs to retrieve precisely the right components for assembly into new products. For example, it is conservatively estimated that more than 75% of design activity involves the reuse of previous designs. Our research begins to address the critical need for improved computational methods for reasoning about complex geometric, feature, and engineering information. In particular, we focus on archival and reuse of design and manufacturing data for mechatronic systems. We describe the research problems, give an overview of the initial architecture of testbed, and introduce some of our current results. We expect this work to help to further the mathematical foundation and algorithmic tools to support content-based retrieval from large engineering knowledge-bases.", "url": "https://www.cicirello.org/publications/SIAM-98-ekb.pdf"},
	{"title": "Survey of Graph Matching Algorithms - Geometric and Intelligent Computing Laboratory, Drexel University - 1999", "tags": "", "type": "html", "text": "Survey of Graph Matching Algorithms Vincent A. Cicirello Technical Report, Geometric and Intelligent Computing Laboratory, Drexel University, Philadelphia, PA, March 1999. Abstract Graph matching problems of varying types are important in a wide array of application areas. A graph matching problem is a problem involving some form of comparison between graphs. Some of the many application areas of such problems include information retrieval, sub-circuit identification, chemical structure classification, and networks. Problems of efficient graph matching arise in any field that may be modeled with graphs. For example, any problem that can be modeled with binary relations between entities in the domain is such a problem. The individual entities in the problem domain become nodes in the graph. And each binary relation becomes an edge between the appropriate nodes. Although it is possible to formulate such a large array of problems as graph matching problems, it is not necessarily a good idea to do so. Graph matching is a very difficult problem. The graph isomorphism problem is to determine if there exists a one-to-one mapping from the nodes of one graph to the nodes of a second graph that preserves adjacency. Similarly, the subgraph isomorphism problem is to determine if there exists a one-to-one mapping from the nodes of a given graph to the nodes of a subgraph of a second graph that preserves adjacency. The largest common subgraph problem is to find the largest subgraphs of two given graphs such that the subgraphs are isomorphic. The digraph D-morphism problem is to determine if there exists a one-to-one mapping from the nodes of one directed graph to the nodes of a second directed graph that preserves adjacency if you disregard the directions of the arcs. The closely related problems of subgraph isomorphism, largest common subgraph, and digraph D-morphism are known to be NP-complete. Whether or not the graph isomorphism problem is in the class of NP-complete problems is an open question. Although there do exist special cases of each of these problems that can be solved in polynomial time, there do not exist known algorithms of polynomial complexity to solve these problems in the general case. Therefore, the search for more efficient solutions to these problems is of great importance.", "url": "https://www.cicirello.org/publications/cicirello1999drexel.html"},
	{"title": "Survey of Graph Matching Algorithms - Geometric and Intelligent Computing Laboratory, Drexel University - 1999", "tags": "algorithm node matrix number decision model tree isomorphic distance authors linear state generation described path partition list time simple length function invariants degree parallel matrices knowledge representation condition defined equal case network characteristic procedure nodal programming mapped descendents represents input method first journal weighted transactions strongly integer solution ancestors technique machines represented found structures describe ieee massively still exact regular space match representing represent enumeration partitions finite bound subset property proceedings reduce testing works complete upon canonical conventional backtracking refinement element permutations describes vertex bounded longer generating pair type circuits computer initial consistent exponential point value equivalent functions messmer shortest solid planar july compared sets column almohamad generated adding valence applied smaller changing attempt resulting asks reached semantic institut machine orderings lists termed design make permutation rows formally determinant morphisms undirected conference vertices bericht another association connected approximate neighbors unrestricted generate query worst away memory brute every consistency attempts reduced invariant force theory methods isomorphisms structural iteration edges pruning hopcroft retrieval definitions thus analysis extend size greatly compare ordering pnpl originating result linked minimize descent fast backtrack compute incorporated check take preserving unger decomposition symposium previously chine detected automata referred assign entire schmidt pairwise order shorter similar researchers propose removing system siam larger circuit plication tions hungarian question defining removed constraint complement different international less transforming present technischer simplex transform similarly adjacent exactly partitioning upper generalized annual edit refine labels concepts extended diversity attribute necessary gradient heuristic optimum single associated numbers pairs features collection develop checks measure neighborhood sequential symmetric arrive yang tested reasoning proof guide examples refined requires specifies pattern triangle runs minimum section shows berztiss otherwise runtime comparing sequence solvable classify duffuaa values partitioned operations cost terminal references reductions allowed branch building offer trim diverse neglect preprocessing ancestor ceedings flexible finer applicability assigned formed least arcs scribed example sixth communications heuristics garey spanning poses paired computers cency aaai ming neighbor transition june maximum fifth incorporates notes generates decomposing hold later swapping druffel complements making commonly test typically onto inconsistently tests sparse relatively monomorphism identifying additional states perhaps practical tures improvement presents practice improves dependency index classified reachable traditional even fundamentals successor turned iterates operates save relabeling composed satisfies viewed composing minimizes attributed discussed change positive computation names equals descendent xcim stored nischer report attributes outputs subject eliminating harmful points faster earlier fine sufficient implemented modified guarantees alter constructing xrim guaranteed sort real chosen relevant task attached retrieve plenum university appears storage pairings phism times occupied direction attempting prentice performing satisfying morphism formulated probe junctive properties formulates moderately depend sized nontrivial defines builds equivalence miller generalization unique conditions starting subsets access deterministic guarantee eliminate executed seen increases current apriori taken lecture takes iterate expression makes nected closed gorithm iteratively operation algo sion arriving incorporate research drawback advantageous widely laboratory name systematically fixed parameters support changed allow classes changes description recursively minimal similarity definition breaks resolving start mappings artificial mial pairing relational reducing modeling prefix quickly tester refines none program april selects inexact terms connection dependent hardware ullmann tion goal relabelled matcher unification dependencies addison completely phisms corneil ways decomposes feature concatenating initialized place sentation minimizing simplest suffers quadratic uniquely freeman depth elements ation randomly compact existence unary major shown propagate associative combination fixing particular history branches techniques note solving line determines database september paper kitano greatest costs process constructed handful limited groups instead parka performance various menlo determining cheng reduction simply", "type": "pdf", "text": "Survey of Graph Matching Algorithms Vincent A. Cicirello Technical Report, Geometric and Intelligent Computing Laboratory, Drexel University, Philadelphia, PA, March 1999. Abstract Graph matching problems of varying types are important in a wide array of application areas. A graph matching problem is a problem involving some form of comparison between graphs. Some of the many application areas of such problems include information retrieval, sub-circuit identification, chemical structure classification, and networks. Problems of efficient graph matching arise in any field that may be modeled with graphs. For example, any problem that can be modeled with binary relations between entities in the domain is such a problem. The individual entities in the problem domain become nodes in the graph. And each binary relation becomes an edge between the appropriate nodes. Although it is possible to formulate such a large array of problems as graph matching problems, it is not necessarily a good idea to do so. Graph matching is a very difficult problem. The graph isomorphism problem is to determine if there exists a one-to-one mapping from the nodes of one graph to the nodes of a second graph that preserves adjacency. Similarly, the subgraph isomorphism problem is to determine if there exists a one-to-one mapping from the nodes of a given graph to the nodes of a subgraph of a second graph that preserves adjacency. The largest common subgraph problem is to find the largest subgraphs of two given graphs such that the subgraphs are isomorphic. The digraph D-morphism problem is to determine if there exists a one-to-one mapping from the nodes of one directed graph to the nodes of a second directed graph that preserves adjacency if you disregard the directions of the arcs. The closely related problems of subgraph isomorphism, largest common subgraph, and digraph D-morphism are known to be NP-complete. Whether or not the graph isomorphism problem is in the class of NP-complete problems is an open question. Although there do exist special cases of each of these problems that can be solved in polynomial time, there do not exist known algorithms of polynomial complexity to solve these problems in the general case. Therefore, the search for more efficient solutions to these problems is of great importance.", "url": "https://www.cicirello.org/publications/survey-1999.pdf"},
	{"title": "Intelligent Retrieval of CAD Models - Sigma Xi Research Symposium - 1999", "tags": "", "type": "html", "text": "Intelligent Retrieval of CAD Models Vincent A. Cicirello In The Eleventh Annual Sigma Xi Research Symposium, pages 125. Drexel University and MCP Hahnemann University, May 1999. Abstract and Poster Presentation. Abstract Nearly all major commercial computer-aided design systems have adopted a feature-based design approach to solid modeling. Models are created via a sequence of operations which apply design features to incremental versions of a design model. Even surfacing, free-form surface shaping, and deformation operations are internally represented in modeling systems as features in a \"history tree\" that generates the final design. Much in the same manner that Constructive Solid Geometry (CSG) trees for an individual model can be non-unique, these design feature histories for solid models might be ordered in a number of ways and still result in the same final geometry and topology. We formulate this problem symbolically and present geometric reasoning techniques to generate a canonical form for certain classes of design feature histories. We define this representation as a Model Dependency Graph (MDG) and show how it can be used as a basis for developing techniques for managing databases of solid models. Using the MDG, we introduce algorithms that can assess the similarity of solid models based on design features. One of these algorithms computes an approximation to the subgraph isomorphism and graph isomorphism problems using a random restart gradient descent approach. Another of these algorithms uses the search method known as A* to detect subgraph isomorphism. We believe these techniques can be used to build intelligent CAD knowledge-bases and to identify meaningful part families from large sets of designs. Lastly, we describe experimental results and performance metrics for our approach.", "url": "https://www.cicirello.org/publications/cicirello1999sigxi.html"},
	{"title": "Resolving Non-Uniqueness in Design Feature Histories - ACM/SIGGRAPH Symposium on Solid Modeling Applications - 1999", "tags": "", "type": "html", "text": "Resolving Non-Uniqueness in Design Feature Histories Vincent A. Cicirello and William C. Regli In Proceedings of the Fifth ACM/SIGGRAPH Symposium on Solid Modeling and Applications, pages 76-84. ACM Press, June 1999. doi:10.1145/304012.304020 Abstract Nearly all major commercial computer-aided design systems have adopted a feature-based design approach to solid modeling. Models are created via a sequence of operations which apply design features to incremental versions of a design model. Even surfacing, free-form surface shaping, and deformation operations are internally represented in modeling systems as features in a \"history tree\" that generates the final design. Much in the same manner that Constructive Solid Geometry (CSG) trees for an individual model can be non-unique, these design feature histories for solid models might be ordered in a number of ways and still result in the same final geometry and topology. We formulate this problem symbolically and present geometric reasoning techniques to generate a canonical form for certain classes of design feature histories. We define this representation as a Model Dependency Graph (MDG) and show how it can be used as a basis for developing techniques for managing databases of solid models. Using the MDG, we introduce algorithms that can assess the similarity of solid models based on design features. We believe these techniques can be used to build intelligent CAD knowledge-bases and to identify meaningful part families from large sets of designs. Lastly, we describe experimental results and performance metrics for our approach.", "url": "https://www.cicirello.org/publications/cicirello1999sm.html"},
	{"title": "Resolving Non-Uniqueness in Design Feature Histories - ACM/SIGGRAPH Symposium on Solid Modeling Applications - 1999", "tags": "query history figure recognition node tree hole different parts data faces engineering information generated nodes side graphs definition defined manufacturing random edges algorithm possible represent several pairings ture technique performed added edge subgraph block order similar function boundary another shown described primitive phase work value boolean object computers found research section evaluation domain national additional additive make regularized operation mdgs question swap convex labels difference artifact slanted shows designer ordering test rather sign orderings retrieve motor vertices holes face available create cavity example applied smaller representations stored comparison primitives automatic application team incorporate extraction methods presented database september designed addition compare scheme search michael index transactions asme steps total unique vertex frequency bestresult removal specified pictured first restarts note interacting left science returns standard converting volume choose acis moves variation volumes handle larger product removed future ultrasparc slot represents running matching taken gradient ieee machining description equal time plan case torpedo tion computer aided randomly necessarily process extracted retrieval subgraphs right little related ings alexei presents reduce known machine topological volumetric structure subtract allied slanted_face necessary many single ratio extract repository exists paper orientation match ations objects fbmach pick dealing analysis providing descent exploit returned incorporates resolve predefined assessment incorporated area finite tests searching perform marefat family called testing hypotheses hundred attributed donald rating links took less university construction department possibility performing morphism identification brooks comparisons housing subtraction structures resulted develop measure median detecting fixed shapiro libraries pair manage representable three elinson greater refined pattern indexing great subtractive ferent particular done general clear alternative interaction simply knowledge plans relative deal interior journal compared later signal typically take management grant hope thanks else context ponent steve efficiently complete dimensional second solids difficult relevant since algorithmic rangasami pointed highest components experiments variety polyhedral resentation fred store designing project ambiguity common every dana types cases step type seconds otto dependent method arise exist foundation vadim elements like histogram swaps computing motion limited groups currently references leading resemble machined nonconvexity equations understanding ternating histograms thus ploited standards aristides extensions sorted applicability institute detail independent drilled archiving heuristics garey variations aspect solaris spond address representing porates logical subtle component indices executions illustration combined tation addressing orientations decomposing making torus modeled bestswap aside materials modeler technical smallest divided provided decomposition prevent previously provides topologically tures multiple label special noted tween environment detected college career adjacency entire turns vandenbrande conjecture experiment property sary dation aags shape fjodor pressed thousands mension system integration decompositions authors integrating city ometric ternally retain restrict local valid tuple native share linear discussed produce pedo requiring constraint cessing upon bryan points ularized earlier discusses implemented abstractly read neering eral october regliy simpler reinhold tional maximal adjacent specific formalization hypothesis formally extending machinable thought ring discussion supply allowable differently formulation leveraging refine unambiguously theorem toolkit triangular creating automatically concurrent counterbore increases diversity notion varying applyswap structured attribute mechanism emerging detection occurred cess describes call automated gineering metric supported microsoft essarily separation things avenue inherent actual labeled qiang technologies converted designs experimenting nectivity distance parametric concept aspects recursively impose street ends statement supporting early enhance overview effectively kaufmann windows target alternating mappings initially nition reducing applications decide extracting nearby required generation indexed dangling rendering kansas dependencies explicit tiny completely requires implicit study joshi differences formation modern plateau acyclic embedding categories elling initial display teract freeman january organized icant hull lays tell percentage adjacencies potential soning solely refers satyandra niques limitation mathematics values generator point interactions david park cidences applying dling increase resenting differ determining parallelepiped dissimilarity depending examining devised impact engineers steven interpretation intermediate assigned agile straints vantage composition unlike matic poses paired lated enabling completion endpoints incorrect alternate procedure chestnut integrate march stage answer drastically questions developed recommendations hierarchical concave disadvantage count timization searched maryland retrieving depressions captured divide views conversion digital directed bronsvoort expands material significantly subset practice cylindrical convert output digraph easily majority spatial made hashed schemes resulting microstation reached greenway christopher snapshot curve operates scattered exploits government viewed december ability elimination defining ment exploring corporate return orienting main high solution morgan international calculated selected artifacts bearing ideas termed legacy code rected appears morphic transform interesting decreasing sively forging fench properties readily counts constraints reflect meaning ther temporal goals closely trench august dent concepts shared functional fact examine overcome eliminate global permutations extended augment partition relationship expression makes heuristic subtracted exploiting fourth numbers inside descriptions leaves variant umetric coordinate solutions degree collection look modelling laboratory solve support figures idea detect surfaces shapes lies archival previous christoph technology willem deficiency bentley location employ junghun whole relation review proof guide proach reduced pentium drexel frederik examples exact nologies theory cial specifies ating variational hoffman tools uniform fall operators federal rectangular reduces sentation restart subtrees unified ages dimensions getrandompairings leda describing plain trenchslanted_face comparing workstation junghyun monly sent core addressed proposed files partitioned distinct award ready arbitrary anticipate", "type": "pdf", "text": "Resolving Non-Uniqueness in Design Feature Histories Vincent A. Cicirello and William C. Regli In Proceedings of the Fifth ACM/SIGGRAPH Symposium on Solid Modeling and Applications, pages 76-84. ACM Press, June 1999. doi:10.1145/304012.304020 Abstract Nearly all major commercial computer-aided design systems have adopted a feature-based design approach to solid modeling. Models are created via a sequence of operations which apply design features to incremental versions of a design model. Even surfacing, free-form surface shaping, and deformation operations are internally represented in modeling systems as features in a \"history tree\" that generates the final design. Much in the same manner that Constructive Solid Geometry (CSG) trees for an individual model can be non-unique, these design feature histories for solid models might be ordered in a number of ways and still result in the same final geometry and topology. We formulate this problem symbolically and present geometric reasoning techniques to generate a canonical form for certain classes of design feature histories. We define this representation as a Model Dependency Graph (MDG) and show how it can be used as a basis for developing techniques for managing databases of solid models. Using the MDG, we introduce algorithms that can assess the similarity of solid models based on design features. We believe these techniques can be used to build intelligent CAD knowledge-bases and to identify meaningful part families from large sets of designs. Lastly, we describe experimental results and performance metrics for our approach.", "url": "https://www.cicirello.org/publications/sm99-paper.pdf"},
	{"title": "Intelligent Retrieval of Solid Models - Department of Mathematics and Computer Science, Drexel University - 1999", "tags": "", "type": "html", "text": "Intelligent Retrieval of Solid Models Vincent A. Cicirello Master's thesis, M.S. in Computer Science, Department of Mathematics and Computer Science, Drexel University, Philadelphia, PA, June 1999. Abstract Nearly all major commercial computer-aided design systems have adopted a featurebased design approach to solid modeling. Models are created via a sequence of operations that apply design features to incremental versions of a design model. Even surfacing, freeform surface shaping, and deformation operations are internally represented in modeling systems as features in a \"history tree\" that generates the final design. Much in the same manner that Constructive Solid Geometry (CSG) trees for an individual model can be nonunique, these design feature histories for solid models might be ordered in a number of ways and still result in the same final geometry and topology. Manufacturing features, easily obtained from the use of a feature recognition system, often map simply to manufacturing operations such as milling operations for some machine tool. This problem is formulated symbolically and geometric reasoning techniques are presented to generate a representation of features and feature dependencies that deals with the non-uniqueness problem encountered in design feature histories. It is shown that this representation is not limited to design features and can be used with manufacturing features as well. The representation defined is termed the Model Dependency Graph (MDG) and alternatively the Undirected Model Dependency Graph (UMDG) and is used as a basis for developing techniques for managing databases of solid models. Using the MDG, algorithms are introduced that can assess the similarity of solid models based on design or manufacturing features and can be used in the retrieval of these models. One of these algorithms computes an approximation to the subgraph isomorphism and graph isomorphism problems using a random restart gradient descent approach. Another of these algorithms uses the search method known as A* to detect subgraph isomorphism. It is believed that these techniques can be used to build intelligent CAD knowledge bases and to identify meaningful part families from large sets of designs. Lastly, experimental results and performance metrics for these approaches are described. It is shown empirically that although the worst case complexity of solutions to the subgraph isomorphism problem is exponential the described algorithms’ performance on random graphs and on the UMDG is tractable in practice.", "url": "https://www.cicirello.org/publications/cicirello1999thesis.html"},
	{"title": "Intelligent Retrieval of Solid Models - Department of Mathematics and Computer Science, Drexel University - 1999", "tags": "algorithm nodes asic node query isomorphic edge time tree matrix initialization figure density history adjacency state found different pairs generated relaxed true possible experiments decision cases data forall mapping value similar matching represent parts timing false else polynomial function return definition directed common edges smaller shows first space plots performed hole work larger technique distance make list comparison exists size chapter information represents consistency ullmann path subgraphs added test table second many degree faces applied order linear less mapped engineering measure equal generation randomly percent evaluation domain national reduce present structure umdgs system authors initial take side complete several solution orderings partition accuracy property testing successor question adjacent describe mappings efficient consistent database ordering procedure stage resulting determine vertices note condition boundary difference structures pair simple addition compare nodal rather bound form transactions refinement single vertex idea exist representing representations removed constraint attributes upon took swap slot ieee neighborhood largest values point parallel various performs length additive faster invariants motor current heuristic operation changed type restarts computing object example variations mdgs block strongly labels input incorporate research overview extraction methods interactions structural matrices designer journal related level total primitive regularized available every seconds goal exact like network cost match shortest densities incorporates incorporated finite check remove pocket variation thesis handle future ultrasparc running convex direction performing application accurate takes zerorow artifact torpedo checker september alternative plans scheme characteristic compared additional goodone digraph appears descendents checking seen holes necessary appear associated roughly repository attempts reduced regular depth isomorphisms boolean variable functions thus require returns computers neighbor fast compute weighted therefore choose previously improvement special binary attributed discussed ancestors determinant allowable varying team describes actual bounded longer machining description choice necessarily general process average prove later programming states class subset reaches attempt made index topological integer relevant volumetric conventional solve previous tested inexact terms specified elements create comparing cavity analysis science minimize returned standard enumeration partitions making modeled tests searching decomposition tures perform referred entire proceedings volumes produce stored guaranteed phism primitives similarly automatic morphism rows machines formally element expected comparisons pockets neighbors preserves classes show massively circuits tion completely requires pattern plateau section designed clear interaction extracted planar greatly numberofones right developed adding possibly typically perhaps views presents thanks william four researchers works asme defining high difficult canonical retrieve transform allows exactly backtracking unique starting association permutations extended connected calculation numbers frequency variant iterative collection types desirable degrees examples pictured swaps array optimal interacting pick definitions sorted left independent solaris pruned component converting empty area preserving smallest accomplish acis multiple moves detected family hundred institut particularly satisfaction implemented modified improve construction permutation chooses slowest morphisms theorem housing bericht taken attribute solved unrestricted inherent widely significant checks fixed away memory generating recursively brute incorporating engineer alternating three provide refined otherwise increase equivalent pruning messmer examining july assigned deal proven originating assembly column almohamad retrieving symposium plot alexei approximately practice output peaks asks reached semantic bibliography mismatched constant international steps directions technischer since pairings algorithmic properties upper allied concepts makes face iteratively ratio ambiguity figures changes lies artificial step relation proof bestresultthusfar dependent guide arise invariant force stated theory specifies uniform flat power cutting runs minimum workstation potentially partitioned iteration advantage groups branch hopcroft contributions fbmach itory calculate dealing planning recognizer least heuristics close linked halt executions illustration initialize good decomposing predefined need materials ison unger divided ascent provides peak marefat environment automata called changing schmidt pairwise deepest shorter shape forth propose reachable hypotheses circuit local denser product inconsistent requiring earlier links complement read real university simplex pursue extra define possibility specific regiondensity formalization forms expanding maintain annual refine brooks subtraction guarantee increases diversity optimum combining call relations differing develop worse technologies designs symmetric admissible shapiro arrive statement estimated manage target guidance typical yang reducing quickly elinson plan greater indexed computed differences triangle aided modern categories sult great small percentage runtime particular solely important degreesums classify duffuaa determines tend applying requirements terminal mean determining areas suffer limitations extend finer relative choosing pnpl poses completion fastest answer maximum drastically backtrack questions fore rare signal disadvantage commonly turing valence little practical grant assign tables schemes removing microstation siam snapshot longest operates world viewed modifications positive entities efficiently dimensional proceeds sufficient regardless alter solids sort lists prentice decreasing branching constraints meaning mnew closely edit pointed highest components conference examine eliminate seem outline variety polyhedral expression strategies store designing open approximate zero look modelling extract paths support allow sequential wide bestresult bentley removal reach none enable phase steep foundation fall reduces informed suggest leda describing berztiss histogram solvable solving paper orientation constructed motion arbitrary instead currently saved allowed leading objects resemble machined building setting equations successfully conjunctive histograms larity dedication acknowledgements packages standards extensions reserved institute applicability detail explorations providing ture role infinite successors drilled arcs formance plateaux garey spanning aaai queries setf subtle indices overwhelm snew thank fifth combined exploit tation discuss addressing notes saddle assessment druffel complements intersection others torus bestswap enormous onto volume slots outperformed aside sparse modeler monomorphism prevent behave engine perkovic root fails lems significance ranging noted chine ments isomorphismapproximationgradientdescent college copyright career jects named vandenbrande experiment gies aags distributed smdgs unintended integration presenting indication decompositions appearing partial fundamentals integrating city iterates save tions restrict valid iments tuple tance tial rights rithms share additions grandmother stores clustered sharp names descendent removes outputs overestimates imposed bryan harmful points ularized members discusses guarantees abstractly constructing already conducted october plenum amine combat simpler harder looked abstraction satisfying maximal requirement probe partitioning interested strategy hypothesis extending tations formulates machinable moderately thought gigabytes supply defines identification generalized differently formulation builds loretta unambiguously itive eliminates slow toolkit triangular tify deterministic concurrent ward counterbore endpoint notion applyswap structured mechanism emerging occurred automated gorithm thing supported disregard arriving microsoft view separation things advantageous imagine ultimate labeled iterations converted name detecting overall parameters experimented vided aspects minimal impose stronger ends extrusion supporting factor early enhance breaks effectively libraries start matrixm experimentally windows backtracks representable initially nition applications forming refines infeasible decide extracting program nearby remembered connectivity lence stuck hardware grows viii", "type": "pdf", "text": "Intelligent Retrieval of Solid Models Vincent A. Cicirello Master's thesis, M.S. in Computer Science, Department of Mathematics and Computer Science, Drexel University, Philadelphia, PA, June 1999. Abstract Nearly all major commercial computer-aided design systems have adopted a featurebased design approach to solid modeling. Models are created via a sequence of operations that apply design features to incremental versions of a design model. Even surfacing, freeform surface shaping, and deformation operations are internally represented in modeling systems as features in a \"history tree\" that generates the final design. Much in the same manner that Constructive Solid Geometry (CSG) trees for an individual model can be nonunique, these design feature histories for solid models might be ordered in a number of ways and still result in the same final geometry and topology. Manufacturing features, easily obtained from the use of a feature recognition system, often map simply to manufacturing operations such as milling operations for some machine tool. This problem is formulated symbolically and geometric reasoning techniques are presented to generate a representation of features and feature dependencies that deals with the non-uniqueness problem encountered in design feature histories. It is shown that this representation is not limited to design features and can be used with manufacturing features as well. The representation defined is termed the Model Dependency Graph (MDG) and alternatively the Undirected Model Dependency Graph (UMDG) and is used as a basis for developing techniques for managing databases of solid models. Using the MDG, algorithms are introduced that can assess the similarity of solid models based on design or manufacturing features and can be used in the retrieval of these models. One of these algorithms computes an approximation to the subgraph isomorphism and graph isomorphism problems using a random restart gradient descent approach. Another of these algorithms uses the search method known as A* to detect subgraph isomorphism. It is believed that these techniques can be used to build intelligent CAD knowledge bases and to identify meaningful part families from large sets of designs. Lastly, experimental results and performance metrics for these approaches are described. It is shown empirically that although the worst case complexity of solutions to the subgraph isomorphism problem is exponential the described algorithms’ performance on random graphs and on the UMDG is tractable in practice.", "url": "https://www.cicirello.org/publications/cicirello-thesis.pdf"},
	{"title": "Modeling GA Performance for Control Parameter Optimization - Genetic and Evolutionary Computation Conference - 2000", "tags": "", "type": "html", "text": "Modeling GA Performance for Control Parameter Optimization Vincent A. Cicirello and Stephen F. Smith In GECCO-2000: Proceedings of the Genetic and Evolutionary Computation Conference, pages 235-242. Morgan Kaufmann Publishers, July 2000. Abstract The optimization of the control parameters of genetic algorithms is often a time consuming and tedious task. In this work we take the meta-level genetic algorithm approach to control parameter optimization. We enhance this process by incorporating a neural network for fitness evaluation. This neural network is trained to learn the complex interactions of the genetic algorithm control parameters and is used to predict the performance of the genetic algorithm relative to values of these control parameters. To validate our approach we describe a genetic algorithm for the largest common subgraph problem that we develop using this neural network enhanced meta-level genetic algorithm. The resulting genetic algorithm significantly outperforms a hand-tuned variant and is shown to be competitive with a hill-climbing algorithm used in practical applications.", "url": "https://www.cicirello.org/publications/cicirello2000gecco.html"},
	{"title": "Modeling GA Performance for Control Parameter Optimization - Genetic and Evolutionary Computation Conference - 2000", "tags": "sets graph tness mutation population rate graphs training number accuracy crossover value section optimal nodes ieee pattern described size result transactions encoded operator results figure chromosome trol netic jong less tion primary regli evolved compare search random related allele model recognition function prediction isomorphism unique matching individuals solid cybernetics choosing representing maximum rithm test bene bits table machine international chosen rameters eter problems units tuning elitist experiments isomorphic solutions small individual comparing edges analysis selection average mization fast represent developed generated chromosomes representation plot class practice attempt output roulette four mapping chow points second solution level swap university design wheel plots strategy represented closely node increments generations pairs actual apply experimental three required inexact seconds terms case proach probability cial uniform randomly data convergence necessarily expensive evaluation knowledge institute robotics nding adaptive performs rameter bunke respect vision signi symposium perhaps just perform improvement ranging taking bramlette entire nonlinear mance experiment alleles likely intelligence system halting binary aboutabl evaluate rithms dividuals complete several edge optimize tolerance settings approximation comparison curacy mixed grefenstette application tuned accurate input wang seen examined nally necessary many gorithm fourth numbers avenue horng collection improving leaving derived ence pair massively reasoning mellon matched requires study methods carnegie means performed evolving forbes presented climbing techniques vlsi part interact swaps parallel references allowed objects messmer executing substrings tionally robot retrieval dices shoukry leles subgraphs ceedings chemical evaluating looking criterion independent scheme least intractable utility hamad formance behavior hand density aaai possible sample constrained handwritten compares predictions indices suite loosely fifth adopted tation lele standard encode controls evidence added promise good correctly assessment chinese swapping incorporated weighted predicted others programming computational train possibly identi pose learns proximate encoding timization tests relatively petrou sults identifying tant rather applied optimized provided divided perturbed prevent expanded selector hard ensuring human selecting jesj length approximately presents smaller plies tially variation improved gradually context easily judge letters mcgrath ried large phic distributed gument crossing winner larger plicates cantly tions local known strings tial generalize ance particularly linear attributed discussed forward systematic correspondences parallelized manner trial employed stands high faster automation modi discusses quite maintained calculated conducted stances positions ulation halts lists derstand present technischer since appears respective represents running rect tings times total similarly parameterized hendler ternative bischof make interesting maximal despite structure consecutive intelligent mize conduct cuting online johnson moid cation estimate optimizing state verifying execute elitism secondary stopping exchanged starting choices actions populations checking sophisticated conference bericht another executed arti permutations provement current varying taken operating scaling sitions ness dynamical analyzed makes gence describes evolve handled showed abilistic operation thing seeks ratio resulted sion speci rules contexts incorporate hanced swapped drawback segment roughly generate treated widely batch iterative engineering look suen rough hidden ranges idea motivation proximately wirelist show generating learning lationship annealing dicts similarity linux subcircuits types slight wide rulegraphs scribing experimentally earliest momentum equal superior sigmoid window classi applications criteria none program algorithmdeveloped guide generation simulated pentium drexel provide addison theory portion formulate layer elite computer feature operators labeling recall pani undergo cient computationally survive restart initial toring suggest freeman runs first goldberg date combating recognizing clearly stette shows describing percentage plex viduals development asymptotically tact tree produced outside purposes tabu niques note solving reveals cuted point lation computing array structural studies correcting tational mality built studied alternative clear allowing instead lette trade currently third favor menlo locations tting michalewicz", "type": "pdf", "text": "Modeling GA Performance for Control Parameter Optimization Vincent A. Cicirello and Stephen F. Smith In GECCO-2000: Proceedings of the Genetic and Evolutionary Computation Conference, pages 235-242. Morgan Kaufmann Publishers, July 2000. Abstract The optimization of the control parameters of genetic algorithms is often a time consuming and tedious task. In this work we take the meta-level genetic algorithm approach to control parameter optimization. We enhance this process by incorporating a neural network for fitness evaluation. This neural network is trained to learn the complex interactions of the genetic algorithm control parameters and is used to predict the performance of the genetic algorithm relative to values of these control parameters. To validate our approach we describe a genetic algorithm for the largest common subgraph problem that we develop using this neural network enhanced meta-level genetic algorithm. The resulting genetic algorithm significantly outperforms a hand-tuned variant and is shown to be competitive with a hill-climbing algorithm used in practical applications.", "url": "https://www.cicirello.org/publications/gecco2000-cicirello.pdf"},
	{"title": "Managing Digital Libraries for Computer-Aided Design - JCAD - 2000", "tags": "", "type": "html", "text": "Managing Digital Libraries for Computer-Aided Design William C. Regli and Vincent A. Cicirello Computer-Aided Design, 32(2): 119-132, February 2000. doi:10.1016/S0010-4485(99)00095-0 Abstract This paper describes our initial efforts to deploy a digital library to support computer-aided collaborative design. At present, this experimental testbed, The Engineering Design Knowledge Repository, is an effort to collect and archive public domain engineering data for use by researchers and engineering professionals. We envision this effort expanding to facilitate collaboration and process archival for distributed design and manufacturing teams. CAD knowledge-bases are vital to engineers, who search through vast amounts of corporate legacy data and navigate on-line catalogs to retrieve precisely the right components for assembly into new products. This research attempts to begin addressing the critical need for improved computational methods for reasoning about complex geometric and engineering information. In particular, we focus on archival and reuse of design and manufacturing data for mechatronic systems. This paper presents a description of the research problems, an overview of the initial architecture of the testbed and a description of some of our preliminary results on conceptual design and design retrieval.", "url": "https://www.cicirello.org/publications/cicirello2000jcad.html"},
	{"title": "Managing Digital Libraries for Computer-Aided Design - JCAD - 2000", "tags": "model query models solid feature information computer repository work features systems parts technical national science signature example product university section part random function defined hole asme node problem retrieval designers definition techniques generated system attributes matching develop modeling general relationships additive many number algorithm took specific attribute ieee shows shown database graph existing current graphs technology subgraph perform structures gupta databases image large umdg side edge different international vertices project similarity types award value edges understanding standards institute faces special mdgs future boundary slot isomorphic created history user evaluation compare represent related seeker form dependency recognition storage symbolic access holes associated missile eastman cases enable pictured analysis returns much computers representing standard users interface signatures matter comparison ultrasparc less running working department application represented found pockets might designs detailed three case aided simple described particular build active communications possible primarily management mechanical hope szykman several directly orderings total available internet previous histories drexel foundation tools exists create individual like capture frequenc computing functions graduate left ture address sets ontology area finite jain tests choose representation previously provides environment proceedings order similar mapping intelligence algorithms stored automation swap primitives construction creation team supported developing machining occupy manage equal mappings time generation pattern indexing randomly group point determining impact ordering journal developed bracket test vision maryland additional directed bronsvoort nodes grant reduce multimedia machine report topological complete high tolerance present intelligent structure equivalence starting slanted_face functional conference experiments archived thompson single ratio commercial vertex needed common software type linking cutting note swaps platform jeng machined pick dealing require community planning accessible result descent germain fifth illustration exploit datatypes applied provided behavioral voxels identify multiple label family pocket college smaller career block dation proceed testing illustrated larger representations rights electronic prototype nist associate implemented links already applicable simplified rarely coupled media arpa intended automatic slowest industrial sketch extending gigabytes isomorphism integrity comparisons creating scenario gradient abstractions extensively describe implies sharing employing matics memory distance video racz hence supporting effectively windows pair target recipient applications artifact elinson plan greater tion ships provide mellon matched sriram study reverse great butes interests protocol tree important transfer mathematics values contribute september structural park clear alternative interaction areas diverse examining average deal prototyping civil compared fastest wolfson accomplished rare relatively subcomponents little symposium hardwick views living lombeyda significantly navigation four manipulation surface made transactions operates file member ability implementing ment entities enterprises geographic elsevier textbook ideas relevant task since student pairings highly anderson online constraints assemblies unique activity examine variety tual tightly fourth operation open zero variant california generate collection throughout every artificial tagging none phase teams examples theory james range carnegie site elements runs development workstation restarts histogram addressed files operations studies groups interrogate currently pierra references year numerous leading objects scenarios itory visual flickner alphanumeric neutral acknowledgements heine version recalling laude southern yellow masters malization garey variations aspect riesenfield behavior solaris morris annotation editorial saint faced subtle indices component fast automating horowitz deploying istics returned notes assessment layers export making srirram owen clearer check volume slots aside labs exchange formats searching bills peat scholastic acis approval practicing berkeley moves service translation ments illustrates called years experiment thesis flow shape gaines foundations handle underlying thousands classifying smdgs even taxonomies integration orders facturability hash ular pictorial functionality tions instant cameras tuple hypertext native share bochenek dominant attributed alternates produce cybenko framework removed constraint environments snead honor screen employed platforms academic discusses picard bridging read domains shall touch larized adaptable kemper networked nications initiated tors represents tional times ties similarly chose direction imposing performing adjacent satisfying directing formalization undergraduates formerly maintenance formally honorable authored ship discussion johnson defines worked identification encompass ivester courtesy recognize input theorem toolkit graduated difference shots document ringo students availability facts chase worth increases senfaute varying taken graphic hampapur services call similarities automated filling relations dataset medical cohen principle presently microsystems source microsoft placing sciences school immense inherent offers actual last labeled reconstruct significant checks measure wiedmer fixed fields parker experimenting migrate color classes concept aspects show recursively augmented stark impose ally ends enhance qbic interfaces resolving configure engineer urban refer infrastructure wallrath typical initially reducing developers quickly zation extracting program required largely golden specifically hardware promising images extraction creative explicit uration style burdens schlenoff completely browse bhasin computed differences teaching enabled layer vehicle acyclic categories enables means explore efficient chair performed bore drafting january organization lays board categorizing pursuing conceptually megabytes major summa presented percentage pointing humphrey gross harrow spooner hierarchically done produced formal vectors multiprocessor niques limitation insert generator fuller necessarily interactions billion erty dimension tational amount built electric enough designer fellowship front evolutionary methodology electronics projects executing dissimilarity analyzing evolves draft past engineers july extend matchers plans dealt simultaneously looking millions competitive agile prove scheme robotics cited customize proves sixth coding term paired enabling completion outstanding advent smdg chestnut integrate june stage answer hypergraphs sdrc scalable thayer visualization tailored added quantities recommendations ances faculty prior repositories programming needs sigma count researching turing publicly elemental searched take piece exploited helps virtual visiting sources relates rather importance henderson bach santa retrieving captured human practical alexei merged specification expands sketching formalize approximately material clark straightforward illustrations practice improves tracking attempt output intricate dartmouth digraph context easily majority anticipated spatial grams corney issue topology director index classification resulting traditional reached served evaluate semantic pentland curve deliver focuses ullman products exploits mention world inserted government toral barbara knows tuttle alent conservatively systematic defining vrml computation agents exploring deriving facilities codes cheaper instance constant annotations main networking integer heterogeneous second hypergraph benchmarks expressed selected combine artifacts approximation workflow author comprises experiences plus disk professor directions lists focused attached survey ubiquitous dozens inexpensive surveys algorithmic make consumer brief allows initiative determine senufaute considerably decreasing families exactly intensity fench properties metadata facilitated cation accessing reflect draws refinement band resident grouped vastly concepts programs subsets primitive fundamental collecting long regularized unless actively supports free though necessary makes heuristic store nostrand connected evolve queryable extensive face closed geometry undergraduate wished rapid pairs associating apache capturing details five rando oracle solutions degree look", "type": "pdf", "text": "Managing Digital Libraries for Computer-Aided Design William C. Regli and Vincent A. Cicirello Computer-Aided Design, 32(2): 119-132, February 2000. doi:10.1016/S0010-4485(99)00095-0 Abstract This paper describes our initial efforts to deploy a digital library to support computer-aided collaborative design. At present, this experimental testbed, The Engineering Design Knowledge Repository, is an effort to collect and archive public domain engineering data for use by researchers and engineering professionals. We envision this effort expanding to facilitate collaboration and process archival for distributed design and manufacturing teams. CAD knowledge-bases are vital to engineers, who search through vast amounts of corporate legacy data and navigate on-line catalogs to retrieve precisely the right components for assembly into new products. This research attempts to begin addressing the critical need for improved computational methods for reasoning about complex geometric and engineering information. In particular, we focus on archival and reuse of design and manufacturing data for mechatronic systems. This paper presents a description of the research problems, an overview of the initial architecture of the testbed and a description of some of our preliminary results on conceptual design and design retrieval.", "url": "https://www.cicirello.org/publications/CADpaper.pdf"},
	{"title": "The Engineering Design Repositories Project - National Science Foundation Design and Manufacturing Grantees Meeting - 2000", "tags": "", "type": "html", "text": "The Engineering Design Repositories Project William C. Regli, Lisa Anthony, Vincent Cicirello, Jon John, Xiaoli Qin, Yuriy Shapirshteyn, and Vera Zaychik In National Science Foundation Design and Manufacturing Grantees Meeting. January 2000. Abstract Under this NSF CAREER project, we are developing representations and algorithms to manage large digital libraries of complex engineering knowledge. The algorithms and data structures we are creating will integrate knowledge-bases of geometric information with systems for case-based reasoning and digital information retrieval. The research in this highly interdisciplinary project bridges several important fields: geometric reasoning, case-based reasoning, and digital libraries; it draws on the challenges presented by real-world problems from the domain of solid modeling and ComputerAided Design (CAD) for engineering and manufacturing. This paper gives a brief overview of our progress during the 1998-1999 academic year.", "url": "https://www.cicirello.org/publications/cicirello2000nsf.html"},
	{"title": "The Engineering Design Repositories Project - National Science Foundation Design and Manufacturing Grantees Meeting - 2000", "tags": "conceptual knowledge collaborative tools product work assembly intelligent mechatronic representation seeker model system asme sign activity networks current build journal june provides mechanical intelligence environments tool university allows models components gineering collaboration missile results support internet figure previous technology artificial software phase teams creative drexel create development created computing areas building plans much novel developed labs primarily related lombeyda sketching environment management advanced relationships context spatial santiago agents future stored function international relevant simplified department designers device functional tual email vast generations might query develop designs middleware interfaces cases realization detailed required goal initial mechanisms capture mathematics platform tive september structural david intent interaction electronics references sketched extracted retrieval draft essentials understanding diverse eling examining navigate past ternational standards intermediate ture prove scheme prototyping essence ascendency example adaptive search variations aspect term computers rationale faced textual deploying ceptual fifth cally spring creativity posium computational need clearer users parts helps technical rather additional provided precisely behavioral scope thomas human capabilities lems noted special form ments grant expert focus tracking output ingly flow proceed shape issue mation corporation testing specify distributed handle schemes illustrated taxonomies integration integrating focuses tions matter products known electronic share belief deployment synthesis robust conservatively multimedia corporate discovery machine stitute upon platforms puter combine took bearing plinary possessed diagnosis ideas comprises establish successive disk task true focused nications leverage dozens legacy working physical blurred consumer initiative determine anderson automatic specific rapidly application engage activities evident sketch forms increasingly metadata thought bhatta dynamics tagged pact lawrence refinement element symbolic collaborating gressed access examine facts long evant archived unless volves audio graphic creation ifying amid store many marketing associated miniature geometry fourth describe marti supported medical becoming descriptions ieee capturing immense courses studying sues ultimate laboratory fields parameters idea description tegration effort learning video archival coordinating estimated layout signers ical typical mark applications forming tagging graphical quickly zation interactive clude repository layouts largely tion still linking focusing provide examples baum extension variational methods james uitous computer aided ways labeling power pictured indexing massive drafting cutting tegrate caching tremendous shows major soning ples vancing like adapting particular pled produced satyandra techniques thrust metaphase goel critical part interact point network integrated aware general security award array veloping process cost allowing designer currently interrogate user", "type": "pdf", "text": "The Engineering Design Repositories Project William C. Regli, Lisa Anthony, Vincent Cicirello, Jon John, Xiaoli Qin, Yuriy Shapirshteyn, and Vera Zaychik In National Science Foundation Design and Manufacturing Grantees Meeting. January 2000. Abstract Under this NSF CAREER project, we are developing representations and algorithms to manage large digital libraries of complex engineering knowledge. The algorithms and data structures we are creating will integrate knowledge-bases of geometric information with systems for case-based reasoning and digital information retrieval. The research in this highly interdisciplinary project bridges several important fields: geometric reasoning, case-based reasoning, and digital libraries; it draws on the challenges presented by real-world problems from the domain of solid modeling and ComputerAided Design (CAD) for engineering and manufacturing. This paper gives a brief overview of our progress during the 1998-1999 academic year.", "url": "https://www.cicirello.org/publications/nsf_dmi_grantees_00_career.pdf"},
	{"title": "Randomizing Dispatch Scheduling Policies - AAAI Fall Symposium - 2001", "tags": "", "type": "html", "text": "Randomizing Dispatch Scheduling Policies Vincent A. Cicirello and Stephen F. Smith In Using Uncertainty Within Computation: Papers from the 2001 AAAI Fall Symposium, pages 30-37. AAAI Press, November 2001. Abstract The factory is a complex dynamic environment and scheduling operations for such an environment is a challenging problem. In practice, dispatch scheduling policies are commonly employed, as they offer an efficient and robust solution. However, dispatch scheduling policies are generally myopic, and as such they are susceptible to sub-optimal decision-making. In this paper, we attempt to improve upon results of such dispatch policies by introducing non-determinism into the decision-making process, and instead using a given policy as a baseline for biasing stochastic decisions. We consider the problem of weighted tardiness scheduling with sequence-dependent setups with unknown arrival times in a dynamic environment, and show that randomization of state-of-the-art dispatch heuristics for this problem in this manner can improve performance. Furthermore, we find that the \"easier\" the problem, the less benefit there is from randomization; the \"harder\" the problem, the more benefit. Our method of randomization is based on a model of the way colonies of wasps self-organize social hierarchies in nature.", "url": "https://www.cicirello.org/publications/cicirello2001aaaifa.html"},
	{"title": "Randomizing Dispatch Scheduling Policies - AAAI Fall Symposium - 2001", "tags": "machine type wasp covert four heuristic random significance roulette force jobs table dominance problems time different tukey three tournament value average statistical search compared setup winner contest rates processing difference significant dependent first result variations pairwise intelligence decisions anova function wheel online machines conference correlated definition artificial randomness queue designed process confidence statistically level chosen intervals make deterministic current decision single bias cases required case performance morton biased selection scheme least example trials tests rather proceedings made difficult real simpler control patch secondary seen absolute research degree experimental work samples means outperforms equivalent tournaments journal national minimize performs couple making slightly simulation number issue oddi algorithms solution comparison stochastically structure state defined mixes randomized fact another closer project might idea figure winning step applications probability seeded innovative explore certain individual paper variable front tistical fined proportional inspired polistes formed much ated compare robotics turn adaptive complicated fitness area test take related previously provides length form chine ments showing order algorithm system even tions products engages dominant pentico computation spun domization points international efit sort task progression hypothesis vary drawn released highest experiments ness strategies bresina thing available losers uniformly last iterative modification whatever talbot overall myopic shop characteristics types degrees review lost goal priority dynamically benchmark provide mellon determined primary methods carnegie emergent informed randomly produced important sequence chances note solving colony part point interactions observations move alternative favor account half projects functions references gression pick manufacturing rank evaluated definitions knowledge addition thus deneubourg active acknowledgements require version adapted prioritization population bucket stop size left science institute relative ture prove ordering ization scribed systems procedures borrowed sets fourteenth representing alternate operational constrained regarded stage fifth information ased acknowledgement evidence added official developed good prior hierarchical serious finish assigns computational partitions rome chines static typically need european lutions list nament volume wiley exploited beneficial final therefore discriminating bility prioritizing lucky mizing harm applied production choose reconfigure perhaps multiply just live views ducting hypothesize pinedo directed outperform tentially hbss complimentary approximately management duedate unlucky progressive gaussian taking practice illustrates select called advanced focus dominulus variants changing thirteenth hypothesizes improved division mance gained context property similar mapping specify sense schemes sensitive forth transactions resulting edging explored served leadtime interval john appearing authors sequences world advocated known accommodate noise dependence everything tioned modifications succession particularly question discussed cumulative produce agents ough framework exploring future instance adjustments imental eliminating mislead autonomous second faster high tics optimize fine sufficient implemented quite modified expressed directly selected combine ized settings illustrate plus successive unit tempt strengths mapped position present since differentiation university cept technique appears units contracts allocates running effective tional total tnow similarly design define working floor imization department possibility allocated idealized chance determine nature bers specific exactly rows chooses prioritize processed application tuned engage ninth strategy remainder forms empirical nontrivial discussion constraints maximize dynamics generalized java theraulaz formulation represented trends nondeterminism models environmental tuning expected sampling labor generalization animal completes examine frequently simultaneous document scan executed ward pens long seem ulations offline desired defense taken reported perspective takes nally broaden genetic think variables though many simulations automated calibrate associated showed ranking describe chart open numbers rules arriving incorporate frequency loaded view funded variant avenue infallible throughput inance dispatching primitively weight worse measure laboratory neighborhood suboptimal allow periments concept simplicity generating anything interest arrive linux ends hence virtue factor derived every early allocation evaluations previous start derives superior furthermore watson typical play trend terpreted specifically greater randomize struggle attempts still tion biology natural depends undefeated nests simulated dates fail pentium examples bonabeau style lection stated surrounded study conditionally imprecise portion localized unsuccessful range gorithms foundation freedom pared course place sult sits performer agency restart observation performed lead forbes choice date distinction theoretical sixteenth eusocial eleventh shows shown describing presented duces feasible tivity potential combination like crafted particular done histogram estimation square effects proposed cies managing seems potentially instances values crucial partitioned interact scale chunk inherently factories necessarily differential aware tend general lation tive parameter cesta ically rest amount eighth groups heavily enough increase currently round various ffsuccessp attention rival evolutionary imals", "type": "pdf", "text": "Randomizing Dispatch Scheduling Policies Vincent A. Cicirello and Stephen F. Smith In Using Uncertainty Within Computation: Papers from the 2001 AAAI Fall Symposium, pages 30-37. AAAI Press, November 2001. Abstract The factory is a complex dynamic environment and scheduling operations for such an environment is a challenging problem. In practice, dispatch scheduling policies are commonly employed, as they offer an efficient and robust solution. However, dispatch scheduling policies are generally myopic, and as such they are susceptible to sub-optimal decision-making. In this paper, we attempt to improve upon results of such dispatch policies by introducing non-determinism into the decision-making process, and instead using a given policy as a baseline for biasing stochastic decisions. We consider the problem of weighted tardiness scheduling with sequence-dependent setups with unknown arrival times in a dynamic environment, and show that randomization of state-of-the-art dispatch heuristics for this problem in this manner can improve performance. Furthermore, we find that the \"easier\" the problem, the less benefit there is from randomization; the \"harder\" the problem, the more benefit. Our method of randomization is based on a model of the way colonies of wasps self-organize social hierarchies in nature.", "url": "https://www.cicirello.org/publications/FS01-04-004.pdf"},
	{"title": "Wasp Nests for Self-Configurable Factories - International Conference on Autonomous Agents - 2001", "tags": "", "type": "html", "text": "Wasp Nests for Self-Configurable Factories Vincent A. Cicirello and Stephen F. Smith In Proceedings of the Fifth International Conference on Autonomous Agents, pages 473-480. ACM Press, May/June 2001. doi:10.1145/375735.376420 Abstract Agent-based approaches to manufacturing scheduling and control have gained increasing attention in recent years. Such approaches are attractive because they offer increased robustness against the unpredictability of factory operations. But the specification of local coordination policies that give rise to efficient global performance and effectively adapt to changing circumstances remains an interesting challenge. In this paper, we introduce a new approach to this coordination problem, drawing on various aspects of a computational model of how wasp colonies coordinate individual activities and allocate tasks to meet the collective needs of the nest. We focus specifically on the problem of configuring machines in a factory to best satisfy (potentially changing) product demands over time. Our system models the set of jobs queued in front of any given machine as a wasp nest, wherein wasp-like agents interact to form a social hierarchy and prioritize the jobs that they represent. Other wasp-like agents external to the nest act as overall machine proxies, and use a model of wasp task allocation behavior to determine which new jobs should be accepted into the machine’s queue. We show for simple factories that our multi-agent system achieves the desired effect. For a given job mix, the system converges to a factory configuration that maximizes overall performance, and as the job mix changes, the system quickly adapts to a new, more appropriate configuration.", "url": "https://www.cicirello.org/publications/cicirello2001agents.html"},
	{"title": "Wasp Nests for Self-Configurable Factories - International Conference on Autonomous Agents - 2001", "tags": "time type wasps routing response associated setup force thresholds queue order colony average processing plots interactions process figure types units required probability threshold unit throughput tion change processed stronger dynamically values interaction systems take back dynamic work currently pick perform distributed results dominance section stimulus lower successful value require discuss production insect less specialized arrive analogous part robotics charge simulation ability table high fermi position theraulaz current variables ranking higher interest cial range gure line idle challenge optimal variations modeled previously behavioral improvement environment chine even foraging robust dominant future upon copies function quite intervals jobjob individuals research updated refer greater mellon requires zone complex scheme adaptive division likely biological complete second chosen problems intelligent agent speci roughly changes coordinating optimization still carnegie place expect first adapting distinct routed variable half govern interacting setting polistes cooperative institute detail ated minimize amounts making respect provided accomplish multiple taking number specify tions encourage decisions discussed manner identical university specializes similarly maximize encompass hierarchies investigating completed mixes actions increases takes describes challenging avenue emitting equal case dates ways emergent forbes organized group described workshop market produces unexpected inspiration tend tive requirements amount encounter increase simply rank recon knowledge deneubourg strong chaotic column june cally scalable dedicated waiting rather averages signi guration permission made draw mail coupling encounters brood total processes nature increasingly sequencing scienti labor experiments seen maintains strategies many simulations gurations appear guring rule winning weaker olds connection lead successes cialization resource arrival operations paper advantage february references explanation morton outcomes wins inspired insects analysis capitalize extensions left science applicability much shortly achieve least turn result policy spond decreased signify representing vance faced decreases exploit changeover adopted incorporates good empty rearrange wise post rial reassessment protocols dorigo weighted rome asynchronously need lutions encoding canada success applied society hard reinforcement peared beaumariage citation tween service gured slightly copyright illustrates variation gures odds similar period adjusts classroom underlying reinforced illustrated likelihood converge authors engaged morley stigmergy yield succession synthesis sharp reversal species kirchner royal equally losses trial updating optimize members complement ized comparison already domains applicable positions real ulation invalidated responds respective contracts ties detrimental department decides rates specific despite application defeating interested remainder extending unprocessed acts supply uncertain myopically formulation dance events pabilities demand brooks tory completes frequently another document availability arti worth pects defense taken broken equate occurred call probabilistically summarizes understood cant nant align ieee view actual primitively develop whatever decrease longer leads fixed leaving parameters shop concept ences augmented hence enhance appropriately manage initially nition reducing underpin applications modeling criteria challengers experimental three plan probabilities depends simulated priority explicit provide determined bonabeau redistribute portion gorithms labour means desire initial lishment display performed january organization summarize organizing certain eusocial constantly sidered lenge outlined shows shown presented bear otherwise necessarily integrated profit designed alternative enough heavily third build organizations extent projects facturing advance stimuli retrieval preference impact opportunity july personal extend domain partnering assigned formed relative dinating imize communications journal rigid compared completion acknowledgments right march series returning naive dispatch london nance developed swapping prior accounted hierarchical wiley adjust varies final helps prioritizing ordinate additional primarily telecommunications random load plot attractors class just views digital naively living length considerations erage presents assign expert advanced dominulus urally amplifying thanks bene action animals operate served john brittle debbie evaluate acting cycle world known periods urgent together knows lundh analogies positive aaria computation ganization decomposable comparable solution expressed communication elsevier motivated dominating level sooner ideas picking present switch make execution chance tendencies rapidly regulation sensory sitting vary insensitive periodically constraints cation granted observed objective patch publishing released trends decentralized adopt animal interpreted fact activity seem variety though heuristic closer impart handled attained fourth bulletin commercial approximate project contexts loaded presentation funded collection lations laboratory allocating demonstrate suboptimal changed drop needed update rently life common every slight apply dramatic location chains whole april lenger fitzgerald lost ordination priate simulate attempts natural conclude susceptible examples versions exact broadcast internal distribution capacity naturally course initialized copy demonstrated sits simplest agency suggest fers evolving additionally located runs mathematical theoretical prescriptive basing clearly deciding expecting imply behaviors orchestrate sequence core proposed nated note dividual covering challenges error commonplace servers challenged challenger resources trades groups factors balancing accrued", "type": "pdf", "text": "Wasp Nests for Self-Configurable Factories Vincent A. Cicirello and Stephen F. Smith In Proceedings of the Fifth International Conference on Autonomous Agents, pages 473-480. ACM Press, May/June 2001. doi:10.1145/375735.376420 Abstract Agent-based approaches to manufacturing scheduling and control have gained increasing attention in recent years. Such approaches are attractive because they offer increased robustness against the unpredictability of factory operations. But the specification of local coordination policies that give rise to efficient global performance and effectively adapt to changing circumstances remains an interesting challenge. In this paper, we introduce a new approach to this coordination problem, drawing on various aspects of a computational model of how wasp colonies coordinate individual activities and allocate tasks to meet the collective needs of the nest. We focus specifically on the problem of configuring machines in a factory to best satisfy (potentially changing) product demands over time. Our system models the set of jobs queued in front of any given machine as a wasp nest, wherein wasp-like agents interact to form a social hierarchy and prioritize the jobs that they represent. Other wasp-like agents external to the nest act as overall machine proxies, and use a model of wasp task allocation behavior to determine which new jobs should be accepted into the machine’s queue. We show for simple factories that our multi-agent system achieves the desired effect. For a given job mix, the system converges to a factory configuration that maximizes overall performance, and as the job mix changes, the system quickly adapts to a new, more appropriate configuration.", "url": "https://www.cicirello.org/publications/cicirello-agents2001.pdf"},
	{"title": "A Game-Theoretic Analysis of Multi-Agent Systems for Shop Floor Routing - Robotics Institute, Carnegie Mellon University - 2001", "tags": "", "type": "html", "text": "A Game-Theoretic Analysis of Multi-Agent Systems for Shop Floor Routing Vincent A. Cicirello Technical Report CMU-RI-TR-01-28, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, September 2001. Abstract In recent years, the desire for a more robust basis for coordination in manufacturing environments has motivated research into agent-based approaches to manufacturing scheduling and control. We have been developing a series of such multi-agent systems inspired by models of social insect behavior for the problem of dynamic shop floor routing. To date, all of our results have been empirical in terms of global system performance and we have been without any satisfying explanation for the behavior of the interacting agents of these systems. This paper is an attempt to model these interactions in game-theoretic terms as normal form games. In the analysis, we show that the behavior of the agents in a repeated game scenario appears to converge upon the repeated play of Nash Equilibria (NE). This analysis consists of the examination of games corresponding to specific problem instances. Some of the systems in this study tend to converge upon deficient NE; while the others successfully coordinate upon \"better\" equilibria on a consistent basis.", "url": "https://www.cicirello.org/publications/cicirello2001cmu1.html"},
	{"title": "A Game-Theoretic Analysis of Multi-Agent Systems for Shop Floor Routing - Robotics Institute, Carnegie Mellon University - 2001", "tags": "type jobs machine time figure strategy response players player task payoffs queue thresholds machines threshold payoff equally playing four pheromone wasp section setup initial expected types likely five wasps result pure first case idle equal mixed seen strategies played matrix assumption arrival stimulus quantities previous penalty iterated throughput enter single agent every none plots possible tasks like times similarly defined colony amount equivalent change processing associated update much example units particular approximately sequences since ratio artificial version choose requiring successive process average completion control dislike rule force setups perform number specialization iterations probability values enough complex charge computation different entry lead iteration currently taking manner responds lengths unprocessed arriving updates initially required twice choosing adaptive rather averages length simulation made chosen entries plays queues value factory setting minimize proceedings shorter even analyze unit specialized performing another mechanism might decrease longer parameters negative severely greater means shows combination workshop converged original increase international interesting hundreds decentralized many appear rules changes desirable examples runs clearly computing instead fifty require least multiple smaller order winner morley autonomous quite less university policies respective stable respond state difference probably simplification requires performed convergence percent necessarily point various accepting preference accurately assigned chaotic column regarding take beneficial assign large eight known specialize constant sort true chance processed accept seem maintains necessary increasing degree discrete proportions loss still work extension finished focal instances pick poor agreement left evidence empty finite modeled production previously beaumariage slightly similar strongly larger local decisions discussed future chooses lesser formulation increases describe actual bounded updated three formalized computed suffers great idleness dominance choice simple assumptions trucks potential format perceived unexpected part matrices clear converges latter advance depending former deal compared computational final additional explained random attractors strictly sense resulting viewed ability together complete second present highly structure paint constraints theraulaz fact conference current decision simulations roughly look higher expects coordinating allocation booths incentive optimization competing headings specified initialized prefer regards sequence seems line parameter quantity round half assigning cooperative institute arrives infinite turn faced fifth good generated dorigo making respect spending provides moves referred illustrates changing understand distributed intelligence engaged question regard preceding kirchner losses employed optimize real busy define working interested accurate oxford events opposite completed demand found favors describes thing ieee view dominated leads memory stronger overview opposing emitting detailed refer applications decide provide light bonabeau implicit havior computer organization centralized shown presented described otherwise formal effect ease inspiration encapsulated requirements move alternative listed attention suffer knowledge limitations simultaneously strong term march june complicated compete dispatch hold trail prior favored derivations perhaps load terminology explain clarendon contrast analogies likewise several high picked kempf colonies communication lists survey problems infinitely paradigms allows processes intelligent simplify enters adaptation extremely drawn breaking august benefit conditions examine analyzes though iteratively calculation allow definition cases superior reasoning natural briefly theory stated place event exists theoretical imply individual resource purposes note factors independently emit optimal references sufficiently leading allowed morton outcomes parunak understanding definitions sake shortest thus polistes devise apparent size science aspect preferences signify representing rationale violating schoonderwoerd characterize decreases information illustration incorporates reader official repetition agreeing rearrange amounts suffered pected assigns reassessment protocols area rome need originally gone aside therefore rises provided offs stretch precisely society cessed reinforcement improvement forewarns noted environment chine configurations accessed reinforce phrasing odds slack succeeding stantly adjusts forth happily partial authors algorithms tributed foraging doubling stigmergy yield share synthesis product opportunities sharp associate points identical updating earlier discusses function members maintained circumstances domains munication intervals simplified improve invalidated coupled unexpectedly contracts simpler represents specializes ties negatively design extra department direction despite formulated suggested application equilibrium formally remainder walk shift discussion unimportant unproductive differently myopically press dance separately hierarchies brooks actions frequently document predecessor worth defense takes pointless entirely call dilemma penalties tedious sciences features stability offers adapt significant correlates shops overall correlated aspects description penalized symmetric arrive factor early analogous breaks start modeling quickly pressures probabilities utilized struggle tion depends chained theoretic limiting pennsylvania allocate ants sentences pattern receiving minimizing explore continuously january summarize certain levels sider economic small bidding distinction uninterested enlightening looks major luce group repeatedly ferent produced market effects sheds request critical determines integrated reschedule relaxed general mentioned designed deviate lectures outperforms contests third build favor organizations interaction demands account sometime projects viewing sponds evaluation addition july whichever easy dealt looking relative utilizing configuring acknowledgments phrased regarded returning drastically rives added developed later designated startup needs bayesian typically finally wiley little waiting santa telecommunications symposium related tonomous class just views outperform fifo living relax likened unwieldy comprehensive presents expert advanced improved appeared unaware stantiations animals reduce issue satisfied lower unpublished traditional served interval john brittle status works proportion painted accrue occurrence tournament mention tipping elimination sycara positive aaria emerges instance feel confused proceeds sufficient publication continuous limit expressed directly calculated elsevier contest sooner accepts thrown establishment ideas emitted focused elapsed machinemi total magnitude make execution attempting determine decreasing exactly sensory evident sitting nation vary queued insensitive determination sequencing objective draws shifts exhibit societies publishing veered schelberg booth decayed necessitated receives starting experiments long variety examined variables expression restrictive analyzed heuristic subtracted definitely holds fourth partially coordinated story project contexts conquers dover presentation funded uniformly treated ensure adapts solutions sections laboratory suboptimal vironments drop ranges needed learning motors life gesture interest schedules specializing lies characteristics winning certainty unbiased imparts footnotes terpreted react april fitzgerald relate justify controlling dependent attempts teams nests susceptible exist fail combinations exact broadcast range derive capacity recall reduces collective agency nice sends evolving highlights elements located succeeds prescriptive fewer basing unassigned eters describing avoiding exponent discover exploration indirect orchestrate accepted safe enforce send lication scientific commonplace network seemingly operations studies advantage february unchanged match resources groups expensive balancing swarm", "type": "pdf", "text": "A Game-Theoretic Analysis of Multi-Agent Systems for Shop Floor Routing Vincent A. Cicirello Technical Report CMU-RI-TR-01-28, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, September 2001. Abstract In recent years, the desire for a more robust basis for coordination in manufacturing environments has motivated research into agent-based approaches to manufacturing scheduling and control. We have been developing a series of such multi-agent systems inspired by models of social insect behavior for the problem of dynamic shop floor routing. To date, all of our results have been empirical in terms of global system performance and we have been without any satisfying explanation for the behavior of the interacting agents of these systems. This paper is an attempt to model these interactions in game-theoretic terms as normal form games. In the analysis, we show that the behavior of the agents in a repeated game scenario appears to converge upon the repeated play of Nash Equilibria (NE). This analysis consists of the examination of games corresponding to specific problem instances. Some of the systems in this study tend to converge upon deficient NE; while the others successfully coordinate upon \"better\" equilibria on a consistent basis.", "url": "https://www.cicirello.org/publications/cicirello_tech_1.pdf"},
	{"title": "Wasp-like Agents for Distributed Factory Coordination - Robotics Institute, Carnegie Mellon University - 2001", "tags": "", "type": "html", "text": "Wasp-like Agents for Distributed Factory Coordination Vincent A. Cicirello and Stephen F. Smith Technical Report CMU-RI-TR-01-39, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, December 2001. Abstract Agent-based approaches to manufacturing scheduling and control have gained increasing attention in recent years. Such approaches are attractive because they offer increased robustness against the unpredictability of factory operations. But the specification of local coordination policies that give rise to efficient global performance and effectively adapt to changing circumstances remains an interesting challenge. In this paper, we present a new approach to this coordination problem, drawing on various aspects of a computational model of how wasp colonies coordinate individual activities and allocate tasks to meet the collective needs of the nest. We focus specifically on the problem of configuring machines in a factory to best satisfy (potentially changing) product demands over time. Wasp-like computational agents that we call routing wasps act as overall machine proxies. These agents use a model of wasp task allocation behavior, coupled with a model of wasp dominance hierarchy formation, to determine which new jobs should be accepted into the machine’s queue. We show for simple factories that our multi-agent system achieves the desired effect. For a given job mix, the system converges to a factory configuration that maximizes overall performance, and as the job mix changes, the system adapts to a new, more appropriate configuration. We also show that our system is competitive to that of an agent-based system for the problem that has been successfully demonstrated in real-world practice, outperforming this prior system in its intended domain in several important respects.", "url": "https://www.cicirello.org/publications/cicirello2001cmu2.html"},
	{"title": "Wasp-like Agents for Distributed Factory Coordination - Robotics Institute, Carnegie Mellon University - 2001", "tags": "time type response section paint queue number thresholds setup first behavior morley average problems four threshold proceedings table less units throughput results truck colony process simulation change analysis shop stimulus social single dynamic setups comparison color adaptive length second associated rule types artificial bidding adaptation terms mixes simulated described systems paired different result unit demand another mechanism significant trucks workshop values contests cycle high international painting booth figure force half even constraint autonomous insect intervals specialized research three required probability performed shows rate experiments solutions competing work paper cost idle confidence stochastic quite floor plots equal case dynamically minimizing presented interactions dispatch take rather perhaps ability specialize limit chance decentralized processing examine higher optimization adapting currently require aaai empty hard environment smaller order intelligence university rates respond parameters provide assigned additional related approximately agent numbers seven changes previous queues benchmark range space arrival pick shortest cooperative policy dorigo need respect reconfigure multiple taking called specialization drastic robust real effective times performing equilibrium remainder difference applications experimental vehicle particular market point assignment limitations characteristic chaotic significantly assign improved large lower tournament world instance coat nature tardiness conference many simulations appear details definition every cases superior booths event runs resource comparing parameter monetary interacting assigning fairly detail faced couple good originally previously behavioral perform configurations foraging discussed requiring settings respective similarly design uncertain formulation hierarchies colors demanded ieee last updated arrive refer greater plan tion bonabeau bids requires centralized shown zone group produces unexpected tend original enough outperforms build interaction evolutionary population route compare experimentation assembly possible compete performs developed fourteen random attractors appeared sense computation exploring solution appears total allows objective theraulaz closely current though decision project failure solve interest natural lead mechanisms value spent references optimal setting dealing inspired polistes adapted planning institute much arrives uncertainty example intuitively minimize failures representing fifth information discuss correct serious weighted chines production provided choose society provides beaumariage effectiveness istituto years flow handle traveling driver algorithms encourage decisions question produce framework future scaled manner upon implemented applicable specializes define chose prioritize lengths stable strategy state press tuning deterministic indicative taken takes genetic describes thing arriving view might whatever leads fixed worst concept analogous ence modeling quickly decide savings studi caro computed computer ways emergent explore initial consistent wrong otherwise minutes ferent effect salesman part inspiration general designed requirements amount encounter third organizations latter determining simply equivalent flushed complex addition deneubourg personal extend molle deal xing journal compared charge column constrained stage drastically static regarding relatively averages telecommunications load ignore class dalle statistically delayed division tables made artificiale resulting interval accrue products generally mail feel integer contest sort brood true survey paradigms highly intelligent easier increasingly exhibit released accept labor seen long variables strategies makes transportation showed fourth operation coordinated five sequential update learning motors life lies successful coordinating attempts goal method capacity place realistic instances line interact operations groups resources instead balancing vague govern sufficiently numerous leading allowed discourage explanation building poor near terrain thus excellent idsia ceedings community version capitalize size left science connotation statistical reconfigured least roll turn subsequently arrived heuristics aspect schoonderwoerd decreases standard nine communicate evidence official rearrange amounts suffered reassessment protocols area rome making european modeled outperformed therefore applied young roles overtake flows anticipation reinforcement multiply special randomizing chine ments gaussian rolled entire gradually tried metaheuristic odds shorter algorithm similar proceed specify adjusts underlying winner likelihood converge million authors engaged deferred yield noise succession synthesis particularly linear dominant nism sharp reversal regard kirchner royal environments equally prevents simplifies namic updating optimize earlier discusses members buffer antnet cirello took maximizing domains maintaining condition hybrid eral stigmergetic invalidated responds seedings contracts running tional ties extra working department possibility fifteen stochastically decides doubtful specific formulated minute analogy application tuned formally accurate supply oxford worked java randomization lesser myopically builds represented dance events defined separately expected alternatives actions frequently document dollars availability cohesive ward worth anyway increases found defense structured popular mergy team absolute describe resulted peting individuals sciences school underpins offers actual boosting primitively paintshop bounded longer improving median away submit nearly redundant stronger ends factor incorporating overview emitting center experimentally suddenly detailed short artficial usage coats probabilities struggle comprising priority utilizes pennsylvania jective ants formation alien labour receiving aided desire organization randomly choice certain statistics small eusocial constantly experience employs robots potential configured encapsulates ttsroutep dination effects ample rabelo topic reconfiguring limitation convergence globally determines percent thirteen necessarily integrated lation encapsulated parallel goldsmith mentioned annals tems move clear heavily economics mean projects facturing advance suffer retrieval rank assumption knowledge gaining sure devised july redhat partnering formed greatly relative strong utilizing ordering unwilling communications plest popularity national term mization incorrect business portunities alternate acknowledgments right compares answer london observe applicationof trail hierarchical possibly inconsistently wiley vision adjust final helps bility sources waiting tant back exhibits santa symposium terminology just views fifo living teractions form material comprehensive contracting practice expert triggered advanced congress equilibratory dominulus attempt amplifying easily guidelines animals zwaan reduce likely researchers transactions served john brittle status works emerged known periods knows analogies seemed supplied systematic defining ment aaria efficiently aulaz complete return vironment coupling morgan negotiation kempf expressed communication combine incoming elsevier motivated months level dominating illustrate archies establishment ideas plus chosen focused differentiation tenth paradigm tings physical make execution certainly raised tendencies deviation structure rapidly processed sensory sitting vary insensitive empirical walsh observed extremely ongoing drawn societies publishing trends breaking quent pointed porating requested highest adopt rectly animal except receives activity ernst overcome fundamental executed eighteenth seem augment variety relationship preferred maintains laying analyzed heuristic confirm extensive impart infrequent bulletin forced rules contexts pairs kuwabara loaded presentation funded roughly uniformly embracing extreme suppose modelling discrete extends sees laboratory allocating demonstrate suboptimal needed idea auction scheduler schedules linux summary gradual characteristics imparts proportions chains terpreted reasoning none relation positively olds ordination tionary preliminary overtakes still teams nests conclude susceptible halves pentium fail examples exact duction word stated broadcast ination foundation distribution tools naturally seeing fall recall agency suspect paints evolving located exists specifics mathematical data perfect theoretical prescriptive adequate fewer", "type": "pdf", "text": "Wasp-like Agents for Distributed Factory Coordination Vincent A. Cicirello and Stephen F. Smith Technical Report CMU-RI-TR-01-39, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, December 2001. Abstract Agent-based approaches to manufacturing scheduling and control have gained increasing attention in recent years. Such approaches are attractive because they offer increased robustness against the unpredictability of factory operations. But the specification of local coordination policies that give rise to efficient global performance and effectively adapt to changing circumstances remains an interesting challenge. In this paper, we present a new approach to this coordination problem, drawing on various aspects of a computational model of how wasp colonies coordinate individual activities and allocate tasks to meet the collective needs of the nest. We focus specifically on the problem of configuring machines in a factory to best satisfy (potentially changing) product demands over time. Wasp-like computational agents that we call routing wasps act as overall machine proxies. These agents use a model of wasp task allocation behavior, coupled with a model of wasp dominance hierarchy formation, to determine which new jobs should be accepted into the machine’s queue. We show for simple factories that our multi-agent system achieves the desired effect. For a given job mix, the system converges to a factory configuration that maximizes overall performance, and as the job mix changes, the system adapts to a new, more appropriate configuration. We also show that our system is competitive to that of an agent-based system for the problem that has been successfully demonstrated in real-world practice, outperforming this prior system in its intended domain in several important respects.", "url": "https://www.cicirello.org/publications/cicirello_tech_2.pdf"},
	{"title": "Ant Colony Control for Autonomous Decentralized Shop Floor Routing - International Symposium on Autonomous Decentralized Systems - 2001", "tags": "", "type": "html", "text": "Ant Colony Control for Autonomous Decentralized Shop Floor Routing Vincent A. Cicirello and Stephen F. Smith In ISADS-2001: Proceedings of the Fifth International Symposium on Autonomous Decentralized Systems, pages 383-390. IEEE Computer Society Press, March 2001. doi:10.1109/ISADS.2001.917443 Abstract We introduce a new approach to autonomous decentralized shop floor routing. Our system, which we call Ant Colony Control (AC2), applies the analogy of a colony of ants foraging for food to the problem of dynamic shop floor routing. In this system, artificial ants use only indirect communication to make all shop routing decisions by altering and reacting to their dynamically changing common environment through the use of simulated pheromone trails. For simple factory layouts, we show that the emergent behavior of the colony is comparable to using the optimal routing strategy. Furthermore, as the complexity of the factory layout is increased, we show that the adaptive behavior of AC2 evolves local decision making policies that lead to near-optimal solutions from the standpoint of global performance.", "url": "https://www.cicirello.org/publications/cicirello2001isads.html"},
	{"title": "Ant Colony Control for Autonomous Decentralized Shop Floor Routing - International Symposium on Autonomous Decentralized Systems - 2001", "tags": "type machine jobs time machines system units setup first types experiment scheduling unit released single rule assembly wait processing heuristic figure perform queue alternative performance choose second switch total optimization resource complex july require average trail random distributed known different operation view artijicial completely operations process path heuristics systems dorigo lines multiple number table defined conference experiments genetic previous step requires randomly section like evolutionary assigned information dispatch simulation attempt four block algorithm solution problems alternatives seen throughput results update characteristics varela required terms work centralized techniques line completing inspired compared leave heavier just order similar likely stigmergy agents computation constant upon morgan times processed equilibrium many associated project rules incorporate research suppose leads solve away updates applications case dates direct explore sends choice decays unexpected globally amount quantity various morton parunak limitations addition cooperative chemical deals institute much object deal ordering robotics dead search communications unlike national policy minimize completion namely alternate possible schoonderwoerd performs developed later prior european beneficial ison machi however concentrations neural applied perhaps load riedmiller reinforcement tonomous fails fifo form named congress release tasks large traveling algorithms tributed tions leaming indirectly future complete environments identical tics already real steps stigmergetic paradigm university define direction processes clair performing chooses castelfranchi stable decay discussion extremely ther optimizing plished decayed tardiness auctioneer current biasing taken limits makes agent individuals coordination dispatching chess modelling longer achieving paths sequential learning schedules sorting overview coordinating allocation estimated suddenly queues decide three priorities statically tion contract priority vehicle ways collective efficient initial performed located levels small workshop twice salesman part network tive paper organize value converged clear resources converges currently plagued equivalent temporary projects references leading evolved bring usled facturing building advance properly dynatnic pick manufacturing shortest namically fined dealing idsia ceedings biased insects ternational population ities left molle competitive heuris consideration relative ture uncertainty choosing exchanging wellman result capability plexity journal procedures timal froin mization heurislic address drogoul quicker founded words acknowledgments right fast june calls loosely emerge ased tation discuss acceptable november evidence quantities good shifting fitness finish protocols programming ronment train rome chines static commonly test pose unpredictable finally onto respect tnaking wiley take cesses production optimized additional representation telecommunications santa arranged nizing marginal quired class views living istituto dalle length improvement strictly chine handling avoid family slightly figuire advanced equilibratory configurations focus variation improved gradually tables advances thesis model animals robustness understand decentralize artificiale altered intelligence cooperating converge even interval john comparably eight products conjunction world encourage acquiring viewed remembers sending ability urgent together tempted analogies question defining pentico produce wandering generally cannibals report emerges erations communities faster function negotiation quite colonies antnet quence guarantees alter retracing wavelength ized took settings level difficult thal sort less brood deposits plus chosen synthetic intervals hybrid sitnple progresses tactics nications susceptibility paradigms progression investigate contracts specializes department highly brief influx social automatic transport despite lengths cornrnunication productive activities trunsactions clustering strategy forms increasingly nation coherent enters downfall liance nical sequencing defines patch oxford dynamics formulation theraulaz state press events tuning distinguish august completed brooks specifying porating miller wander mixes starting actions retraces shared eighteenth seem defense tnake reported operating takes popular controller vice reaction dynamical though strategies missionaries coordinates thorough nest ternatives simulations transportation appear showed increasing progress commuinications mimicked fourth coordinated probletn joint strength solved source kuwabara zero sciences funded roughly avenue last seeds adapt discrete maniezzo laboratory myopic suboptimal changed locating allow periments gambardella needed pending proximately sembly life auction central lies factor analogous proaches early brueckner breaks ence wide apply appropriately start earliest ulated scribe target backtracks ernergent gramming cision short initially location rise play forming phisticated bilities broad attain tionary dependent plan promising goal natural overhead conclude studi provide mellon caro delays bids exact duction matched force interestled cial enterprise localized priori range trails carnegie uniform nate leam course initialized minimizing martino tration reward informed means suffers agency reverse maamaw forbes pheromones sider symposiunt sixteenth constantly alleviate autonomize experience protocol optimisation deciding shown major presented lect sinclair robots avoiding pable combination miyashita munications ferent tactical sequence addressed tocol effect pothesis infusing potentially note limitation solving tract purpose values forage generator factories percent stead commonplace integrated tend computing studies ically adds annals move cost motion february implementation factors treats balancing governing economics carries swarm variable eases challenge", "type": "pdf", "text": "Ant Colony Control for Autonomous Decentralized Shop Floor Routing Vincent A. Cicirello and Stephen F. Smith In ISADS-2001: Proceedings of the Fifth International Symposium on Autonomous Decentralized Systems, pages 383-390. IEEE Computer Society Press, March 2001. doi:10.1109/ISADS.2001.917443 Abstract We introduce a new approach to autonomous decentralized shop floor routing. Our system, which we call Ant Colony Control (AC2), applies the analogy of a colony of ants foraging for food to the problem of dynamic shop floor routing. In this system, artificial ants use only indirect communication to make all shop routing decisions by altering and reacting to their dynamically changing common environment through the use of simulated pheromone trails. For simple factory layouts, we show that the emergent behavior of the colony is comparable to using the optimal routing strategy. Furthermore, as the complexity of the factory layout is increased, we show that the adaptive behavior of AC2 evolves local decision making policies that lead to near-optimal solutions from the standpoint of global performance.", "url": "https://www.cicirello.org/publications/ISADS2001.pdf"},
	{"title": "Insect Societies and Manufacturing - IJCAI Workshop on Artificial Intelligence and Manufacturing - 2001", "tags": "", "type": "html", "text": "Insect Societies and Manufacturing Vincent A. Cicirello and Stephen F. Smith In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 33-38. August 2001. Abstract In this paper, we present examples from the literature of successful problem solving systems that have been heavily influenced directly from biological studies of insect societies. Included among these systems are a few of our own. These examples are presented in light of manufacturing applications and only the tip of the iceberg is touched upon. It is our hope that the reader will find a new source of inspiration in problem solving tool design; and realize the potential of coordination mechanisms for multi-agent manufacturing systems inspired by social insects.", "url": "https://www.cicirello.org/publications/cicirello2001sigman1.html"},
	{"title": "Insect Societies and Manufacturing - IJCAI Workshop on Artificial Intelligence and Manufacturing - 2001", "tags": "colony model wasp system task routing proceedings agents scheduling wasps optimization ants problems figure jobs machine international behavior pheromone shop allocation factory path dorigo distributed conference dynamic colonies control models caro force dominance first robots individual part combinatorial adaptive multiple tasks shorter foraging local autonomous upon nest tion response evolutionary july ordering charge food discuss trail originally take appeared traveling thresholds city brood university respective floor stochastically machines theraulaz dance tardiness single ieee time threshold resource interactions optimal thus deneubourg domain example fifth quantities robotic modeled vaughan concentrations technical symposium society perhaps related number zwaan algorithm order algorithms tions computation report cities comprised since effective nature application activities hierarchies actions seen takes many paths higher sorting natural work probability collective place queue zone paper contests interacting explanation parunak rank bees hofstadter require polistes population route molle institute assigned deal robotics least journal learn constrained march june information language besten weighted making static respect graph loose applied telecommunications load aunt dalle nodes salesperson setup taking simulation division improved action animals flow researchers artificiale converge driver world known decisions outcome particularly question aulaz mail environments second faster high different elsevier ideas real ulation harvard paradigm total design highly direction despite prioritize nation hundreds press defined decentralized quality labor processing activity found cemetery genetic laying heuristic team tour describes transportation call fourth belknap agent solved project research multipurpose coordinate longer solve fixed updated gambardella changes update life common arrive analogous coordinating modeling loss doubly golden connection nests priority studi vehicle computer ways emergent initial great eternal certain simple section tours group salesman largest parallel amount assignment stimulus february balancing performance currently various interaction variable forsyth projects references objects building setting robot strate retrieval complex addition knowledge successfully solid idsia fairly hierarchy ceedings biased active insects prioritization cooperative chemical trying fines detail formed greatly dinating chapter telling average ture collaboratively role independent cited uncertainty result search heuristics procedures national hand aaai decreased founded representing acknowledgments schoonderwoerd answer decreases returning emerge illustration combined exploit november dispatch london official promise tuto developed later amounts hierarchical france others computational area rome need european list erarchy little searching heavier papers retrieving santa rate captured passed reinforcement tonomous class views ings bronsvoort living istituto mobile counter lems tains environment randomizing form chine presents localization reaches advanced congress mechanical dominulus variants entire years tables experiment balance convinced reinforce advances similar mapping large shape lower sense transactions operative cooperating likelihood served toolbox authors tackling engaged tributed mitted tournament cycle asked tial periods twenty succession synthesis lundh product famous robust dominant discussed change cannibals tificial overlapping attaining efficiently constraint kirchner royal contemplates return vironment versity translated nent namic employed amongst hicle optimize morgan function members limit expressed achilles communication antnet cirello puter belgium took fittest sooner difficult less orderings chosen synthetic hybrid eral stigmergetic october specialized differentiation policies jobjob contracts allocates ature douglas department make prised brief processes chance tendencies intelligent chies mize regulation sensory easier clustering remainder extending properties signment matical decay discussion supply uncertain objective oxford character dynamics extremely friend builds drawing optimizing refinement state goals millenia courtesy brooks benefit node cating conveys wander comparisons deposit bridge increased document global increases current pects defense ference hillary think variables implied mergy missionaries manages makes reinforcing designing appear hill showed bulletin announces sion incorporate individuals anteater sciences lowing school funded variant avenue throughput results studying adapts netics primitively develop ufacturing modelling suited laboratory machining leads idea sequential concept aspects plications learning anything sponse overview types characteristics cases brueckner hawaii effectively resolving ical refer typical short location spective artficial blazing software terpreted whistling whole decide type nearby required inforce priorities statically ordination greater struggle case promising hardware proach goal researcher method teams double conclude reduced deborah survived explicit mellon bonabeau refined completely hive columns methods enterprise petitive direct range gorithms formation foundation distribution tools carnegie labour feature fall nate reduces believed sium manners predators means cations regli agency efficient cording performed subgraph january braid forbes organized located pheromones randomly levels nisms theoretical eusocial teammates optimisation distributing climbing ples like behaviors survival ttsroutep published important techniques beckers seems ural potentially arrival unexpected determines scientific distinct interact inherently point necessarily general operations public dialogue designed value cluding tational annals applying tems process converged deserve orientation quantity motion limited studied edges clear groups encounter swarm build accrued ffsuccessp investigation account", "type": "pdf", "text": "Insect Societies and Manufacturing Vincent A. Cicirello and Stephen F. Smith In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 33-38. August 2001. Abstract In this paper, we present examples from the literature of successful problem solving systems that have been heavily influenced directly from biological studies of insect societies. Included among these systems are a few of our own. These examples are presented in light of manufacturing applications and only the tip of the iceberg is touched upon. It is our hope that the reader will find a new source of inspiration in problem solving tool design; and realize the potential of coordination mechanisms for multi-agent manufacturing systems inspired by social insects.", "url": "https://www.cicirello.org/publications/cicirello-sigman2001-1.pdf"},
	{"title": "Improved Routing Wasps for Distributed Factory Control - IJCAI Workshop on Artificial Intelligence and Manufacturing - 2001", "tags": "", "type": "html", "text": "Improved Routing Wasps for Distributed Factory Control Vincent A. Cicirello and Stephen F. Smith In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 26-32. August 2001. Abstract Agent-based approaches to manufacturing scheduling and control are attractive because they offer increased robustness against the unpredictability of factory operations. Previously, we introduced a new approach to coordinating factory routing and scheduling based on a computational model of wasp behavior. The natural multi-agent system of the wasp colony is highly effective in selforganizing the allocation of tasks necessary to fulfill the needs of the nest and has proven useful as an effective model upon which to base our distributed approach to factory control. In this paper, we improve upon our original formulation of the routing wasp with the addition of a tournament of dominance contests among routing wasps competing for the same job. We experimentally evaluate this improved performance.", "url": "https://www.cicirello.org/publications/cicirello2001sigman2.html"},
	{"title": "Improved Routing Wasps for Distributed Factory Control - IJCAI Workshop on Artificial Intelligence and Manufacturing - 2001", "tags": "machine type time jobs response machines thresholds social task process changing different entropy average associated queue currently four section half behavior table agents figure first threshold interactions paper stimulus setup single results types problem group adaptive take chine second specialized rates theraulaz mixes experiments higher shop case idle performance various pick diverse simulation proceedings order local product change international processing examine loaded throughput measure hierarchic equal probability force performed arrival paired information empty tests back behavioral foraging specialize autonomous insect real less intervals present problems floor plots demand conference simulations updated concept cases previous required optimization tion work deficient zone individual values confidence heavily govern setting near fairly july polistes formed compare statistical robotics least result systems minimize charge column march fifth compete dispatch nance dorigo modeled society perhaps tonomous perform length improvement environment taking division tried made handle winner converge encourage decisions kirchner vironment mail level brood unit units specializes times similarly define chance nature processed lengths respond observed released decentralized labor difference actions seem diversity takes decision describes research dynamic whatever fixed parameters distance aspects analogous decide experimental plan struggle method depends nests bonabeau study emergent place located presented described accepted interact inspiration clear instead outperforms simply projects optimal references robot strate retrieval complex rank oritize knowledge thus dealing deneubourg personal inspired analysis cooperative route institute simultaneously straints arrives strong prove reconfigured cides uncertainty proved communications intuitively journal heuristics national completion aaai representing alternate acknowledgments combines right perimental schoonderwoerd june stage answer decreases returning discuss performs london official developed robotic trail amounts hierarchical weighted balch rome making static respect mines helps waiting roles averages reconfigure telecommunications random load reinforcement multiply just views ings living concentrate special randomizing approximately moves gaussian assign smaller tendency advanced configurations dominulus ries animals lower specify adjusts classified sense reinforced likelihood even served analyze specialization acting authors engaged algorithms tributed mitted pins sequences products world known noise periods ability elimination knows succession synthesis lundh equilibria robust analogies dominant seemed discussed alent systematic produce ment computation future aulaz complete royal environments feel manner high updating members implemented expressed communication cirello puter contest domains ideas sort fill weights plus tool chosen ulation lists converging differentiation university policies respective contracts running design erarchies department make determine specific exactly chooses drew prioritize chies analogy regulation sensory activities remainder sitting extending mediately matical vary queued objective java locally state exhibit dance defined tuning closely hierarchies duedates tributable brooks tory concepts adopt except tardiness interpreted activity another executed global long increases current desired variety maintains variables mergy though many sect attained fourth thing partially bulletin sion agent numbers contexts incorporate arriving align individuals ieee lowing view funded avenue inance adapt primitively degree significant suppose improving longer laboratory leads overall leaving locating vided rule proper life sponse interest stronger similarity linux definition emitting euclidean configure alike refer unbiased queues quickly positively fitzgerald terms probabilities teams simulated priority theoretic dynamically pentium examples mellon exact broadcast range havior formation carnegie labour ways fall collective sium event informed agency lead january organization forbes organized summarize organizing quate theoretical eusocial shows deciding configured ttsroutep particular taxonomic effects vectors distributionof produces seems limitation tent normalized part scientific factories stead point necessarily aware tend numerical routed amount limited february groups encounter enough fense balancing third listed interaction front tends dendrogram", "type": "pdf", "text": "Improved Routing Wasps for Distributed Factory Control Vincent A. Cicirello and Stephen F. Smith In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 26-32. August 2001. Abstract Agent-based approaches to manufacturing scheduling and control are attractive because they offer increased robustness against the unpredictability of factory operations. Previously, we introduced a new approach to coordinating factory routing and scheduling based on a computational model of wasp behavior. The natural multi-agent system of the wasp colony is highly effective in selforganizing the allocation of tasks necessary to fulfill the needs of the nest and has proven useful as an effective model upon which to base our distributed approach to factory control. In this paper, we improve upon our original formulation of the routing wasp with the addition of a tournament of dominance contests among routing wasps competing for the same job. We experimentally evaluate this improved performance.", "url": "https://www.cicirello.org/publications/cicirello-sigman2001-2.pdf"},
	{"title": "Machining Feature-Based Comparison of Mechanical Parts - International Conference on Shape Modeling and Applications - 2001", "tags": "", "type": "html", "text": "Machining Feature-Based Comparison of Mechanical Parts Vincent A. Cicirello and William C. Regli In Proceedings of the International Conference on Shape Modeling and Applications, pages 176-185. IEEE Computer Society Press, May 2001. doi:10.1109/SMA.2001.923388 Abstract Solid models are the critical data elements in modern computer-aided design (CAD) environments, describing the shape and form of manufactured artifacts. Their growing ubiquity has created new problems in how to effectively manage the many models that are now stored in the digital libraries of large design and manufacturing enterprises. Existing techniques from the engineering literature and from industrial practice, such as group technology, rely on human-supervised encoding and classification, while techniques from the multimedia database and computer graphics/vision communities often ignore the manufacturing attributes most significant in the classification of models. This paper presents our approach to the manufacturing similarly assessment of solid models of mechanical parts based on machining features. Our technical approach is three-fold: (1) perform machining feature extraction to map the solid model to a set of STEP AP 224 machining features; (2) construct a model dependency graph from the set of machining features; and (3) find the nearest neighbors to the query graph using an iterative improvement search across a database of other models. We also present empirical experiments to validate our approach using our testbed, the National Design Repository. The contribution of this research is the first fully automated technique for machining feature-based comparisons of mechanical artifacts. We believe that this work can lead to radical changes in the way in which design data is managed in modern engineering enterprises.", "url": "https://www.cicirello.org/publications/cicirello2001smi.html"},
	{"title": "Machining Feature-Based Comparison of Mechanical Parts - International Conference on Shape Modeling and Applications - 2001", "tags": "process algorithm features similarity similar largest common repository machined number part recognition graphs information node figure subgraph function results evaluation edges swap nodes fbmach planning variations smaller matching knowledge possible random several ture automatic team mismatched available reasoning create value result sets mdgs order mapping took defined labels time three simply databases bracket different bestresult problem comparing note cost histograms science generated choose multiple noted develop distance mappings tion chining plateau indexing shows described user domain compare symposium four surface edge artifacts pairings allows intelligent socket undirected face variant geometric seconds axis restarts near analysis selection much exploit smallest representation previously acis moves algorithms academic university department specific isomorphism identification brooks found takes genetic measure worst designs classes show incorporating pair plan matched performed simple values interactions general extracted retrieval plans additional retums advances made corporate control allied variety holes heuristic appear geometry vertex approximate types hints variational range foundation federal capture computing operations orientation performance building contributions version recognizes recognizer providing least example computers returned novel compute area originally chined therefore formats applied selecting identify handling property block mation distributed system larger tions linear polynomial quite real mapped running interested unattributed refine input complexity mechanism cess might technologies gupta interactive artifact kansas provide refined methods pattern enables reverse section presented potential done creates niques mathematics necessarily husk subgraphs past scheme coding right june cludes meaningful programming count turing vision little rather primarily perhaps related views ings management grant relationships dartmouth else modem reduce index operates library world machine topological return constant directly since appears total families structure constraints ther referring provement partition operating necessary single oped vast generate solutions buckets degree figures technology type inexact enable bestresultthusfar proach drexel reduces histogram files instances swaps interrogate currently references bution interacting objects understanding visual umdgs alphanumeric ceedings neutral community size left institute object role achieve manual archiving scribed desigdmanufacturing behavior salt representing queries tection readers fifth converting ning good post amounts intersection solidmodeling finish implement weighted others bestswap tractable check jain respect users onto exchange neural searching divided stereolithography producing provides concemed lines voxels hypothesize fectively tures ranging special marefat tween achieved suitable referred pocket autodesk slightly career similarfeature recognizers narrow gies applys ofren foundations classijication thousands intelligence presenting appearing partial authors integrating city ping retain categorized restrict terprises tial ance product robust question feburary prototype produce tributes future impractical constraint pirical minor translated employed abilities modified maintained puter ultrasparc domains applicable shall conducted guaranteed neering individually sensor collect lake nications responds arpa represents times tional intended influences chose define working construction direction imposing categorization performing morphism cutions centage formally manufacturability machinable maintain gigabytes discussion allowable companies parasolid honeywell merging expected carey processor vocate choices availability increases notion diversity ference creation broaden correspondence structures hopfield combining call similarities gineering gorithm putation dataset supported cohen presently school isomorphic avenue adapt widely labeled duplicate checks converted overall experimented vided acmsiggraph parametric effort generating minimal central impose street ends hence supporting overview ence resolving estimated target detailed nition reducing applications measured developers collected measures elinson greater designate case promising generation images identifies indexed matcher utilizes matches dependencies mellon tiny completely alliedsignal lection primary study formation aided acyclic explore freeman great january forbes tifacts ices levels influence shown major percentage letting gross duced pertaining tree archive computable important refers puting numeric point integrated tive september possessing dimension tems applying requirements electric alternative increase third build determining evolutionary methodology areas executing advance trieval complex recog addition retumed impact grate mainstream active july intermediate agile formed cadcam greatly straints deal ordering robotics choosing journal systems term empirically lated enabling encodings advent chestnut calls ingless freely represent thayer beddable graphics developed recommendations hold retum almohamad prior adding hierarchical image test typically erating final mach retrieving duration class directed madison augmenting informix hole dency approximately material inally interpret fort significantly comprehensive reaches hope attempt output thanks appeared mintlei context majority spatial inspection likely issue siggraph topology schemes transactions umdg resulting traditional operate explored greenway polyhedra ployed exploits file government viewed dependence steve change asme systematic defining agents computation sponding complete codes instance dimensional lute resentative sign serve copyrighted high testbed expressed calculated selected roots comprises orderings chosen task survey alyzing legacy inexpensive storage make falling designers initiative determine anderson exactly intensity pendent lcsgradientdescent properties teracting mediately readily counts facilitated fixtures objective cover reflect ongoing scent estimate hundreds agement interpretations closely execute concepts unique extended augment examined usingfeature decision makes store showed assist fourth britanik ratio sion agent joint aide numbers project inside horizontal trivial wishes coordinate mrsev ufacturing look sections extends laboratory datablades implements houten needed detect vertical rently definition sions every archival pittsburgh cases reading indeed storing artificial xcut bentley ones employ cused aconstant feedback terms optimization proof guide goal method procedural ilies benchmark utah exist fail knowing nologies duction theory hoffman tools carnegie specified pictures sessment fall course pictured restart aged suggest hits assess voxel exists runs dimensions getrandompairings existence fewer rigorously dozen space realistic setups assessing individual like workstation lows estimation efforts quichia lected dividual scale clouds network tums mated moments award public parameter virage limited studied arbitrary groups treats elization", "type": "pdf", "text": "Machining Feature-Based Comparison of Mechanical Parts Vincent A. Cicirello and William C. Regli In Proceedings of the International Conference on Shape Modeling and Applications, pages 176-185. IEEE Computer Society Press, May 2001. doi:10.1109/SMA.2001.923388 Abstract Solid models are the critical data elements in modern computer-aided design (CAD) environments, describing the shape and form of manufactured artifacts. Their growing ubiquity has created new problems in how to effectively manage the many models that are now stored in the digital libraries of large design and manufacturing enterprises. Existing techniques from the engineering literature and from industrial practice, such as group technology, rely on human-supervised encoding and classification, while techniques from the multimedia database and computer graphics/vision communities often ignore the manufacturing attributes most significant in the classification of models. This paper presents our approach to the manufacturing similarly assessment of solid models of mechanical parts based on machining features. Our technical approach is three-fold: (1) perform machining feature extraction to map the solid model to a set of STEP AP 224 machining features; (2) construct a model dependency graph from the set of machining features; and (3) find the nearest neighbors to the query graph using an iterative improvement search across a database of other models. We also present empirical experiments to validate our approach using our testbed, the National Design Repository. The contribution of this research is the first fully automated technique for machining feature-based comparisons of mechanical artifacts. We believe that this work can lead to radical changes in the way in which design data is managed in modern engineering enterprises.", "url": "https://www.cicirello.org/publications/SMI2001.pdf"},
	{"title": "An Approach to a Feature-based Comparison of Solid Models of Machined Parts - Artificial Intelligence for Engineering Design, Analysis and Manufacturing - 2002", "tags": "", "type": "html", "text": "An Approach to a Feature-based Comparison of Solid Models of Machined Parts Vincent A. Cicirello and William C. Regli Artificial Intelligence for Engineering Design, Analysis and Manufacturing, 16(5): 385-399, November 2002. doi:10.1017/S0890060402165048 Abstract Solid models are the critical data elements in modern computer-aided design environments, because they describe the shape and form of manufactured artifacts. Their growing ubiquity has created new problems in how to effectively manage the many models that are now stored in the digital libraries for large design and manufacturing enterprises. Existing techniques from the engineering literature and industrial practice, such as group technology, rely on human-supervised encodings and classification; techniques from the multimedia database and computer graphics/vision communities often ignore the manufacturing attributes that are most significant in the classification of models. This paper presents our approach to comparing the manufacturing similarity assessments of solid models of mechanical parts based on machining features. Our technical approach is threefold: perform machining feature extraction, construct a model dependency graph (MDG) from the set of machining features, and partition the models in a database using a measure of similarity based on the MDGs. We introduce two heuristic search techniques for comparing MDGs and present empirical experiments to validate our approach using our testbed, the National Design Repository.", "url": "https://www.cicirello.org/publications/cicirello2002aiedam.html"},
	{"title": "An Approach to a Feature-based Comparison of Solid Models of Machined Parts - Artificial Intelligence for Engineering Design, Analysis and Manufacturing - 2002", "tags": "algorithm figure subgraph process features similar isomorphism graphs nodes node recognition gsic query work research planning information part smaller number return found results repository matrix mapping ieee knowledge false true greedy evaluation common edges science least variations complexity initialization worst time largest possible random else asme geometric problem fbmach check function swap matching distance modeling domain bracket surface transactions mismatched iterative step reasoning seconds create note line computing value generated improvement algorithms technique automatic comparisons case section described compare paired stage additional several pairings type first applied previously noted order larger took specific identification defined team isomorphic three consistency aided shows image artifacts available degree cost size result computers sets compute assessment multiple mapped department call technologies performed checker integrated user simply retrieval databases symposium four reduce machine different allows intelligent bestresult restarts interacting selection returns much density exploit returned choose acis inconsistent future university construction develop neighborhood show pair mappings plan generation extraction pattern plateau indexing shown interactions extracted plans journal added rather related output advances umdg computation edge volumetric structure socket constraints undirected appear geometry variant drexel variational foundation tools exponential axis performance currently contributions near histograms thus recognizer example finish list therefore smallest representation moves illustrates variation proceedings gaines linear academic modified quite real represents interested unattributed state takes genetic implies dataset widely overall designs classes incorporating reducing mellon matched initial reverse simple presented values determining robotics calls developed meaningful vision management made index library corporate international tolerance appears control families refinement current variety holes single vast vertex approximate pairs figures types technology binding degrees terms hints extension range carnegie initialized exists space capture instances operations award parameter objects building understanding umdgs calculate shortest version sorted recognizes object providing turn manual ordered forall neighbor queries novel incorporated intersection neural divided selecting identify special marefat handling referred career shah block testing foundations distributed handle stochastic product discussed prototype nist polynomial upon employed arpa running similarly direction manufacturability machinable refine brooks labels input diversity mechanism structures automated metric absolute supported might labeled checks description effort generating overview backtracks detailed interactive greater torpedo tion kansas matches provide refined completely methods enables great choice employs percentage potential tree done creates mathematics necessarily general original alternative third interaction methodology areas facturing addition subgraphs past intermediate choosing coding systems segmentation right procedure nearest programming count little perhaps views bound grant practice attempt relationships dartmouth context majority issue siggraph greenway operates world member modifications defining report topological complete constant second directly calculated selected directions total algorithmic exactly properties contribution estimate mnew seen referring operating fourth iteratively calculation zero ensure solutions definition indeed employ inexact optimization enable bestresultthusfar still exist exact federal reduces hits dimensions threshold individual histogram files swaps network orientation limited interrogate references allowed setting properly visual combinatorial alphanumeric neutral require community uity left applicability guest institute role independent achieve customizable formance plexity aspect behavior close sweep address salt representing descent executions fast readers chanical snew germain fifth initialize voxelization tation incorporates generates prehensive converting good wise post amounts implement intuition weighted others area making need bestswap originally tractable jain respect users onto exchange interleaves formats production searching stereolithography provided decomposition producing provides interrogation projection lines voxels fails hypothesize multaneously tures objectively ranging supervised referenced chine achieved suitable pocket autodesk college slightly hinting catalog american recognizers years vandenbrande property narrow mation specify thousands reachable mension illustrated system even integration presenting bulk appearing partial authors integrating hundred successor city retain categorized institut restrict tance robust particularly question attributed produce impractical constraint thousand minor translated associate abilities earlier maintained cirello representative puter ultrasparc domains applicable shall conducted guaranteed positions tool condition simplified improve individually sensor collect lake boundary structurally times intended influences define convex working imposing categorization radical performing adjacent maximal morphism chooses prune formalization subgoals formally embeddable extending authored maintain gigabytes allowable companies formulation represented parasolid filtering merging expected investigating sampling recognize processor induce choices sophisticated bericht simultaneous concurrent availability increases notion fication taken applyswap dissertation worried creation broaden detection correspondence hopfield combining cess describes similarities gineering gorithm iges incorporation cohen bindings cant incorporate operator school neighbors acquired realize adapt duplicate longer converted parametric scalability minimal central ends hence supporting factor ence resolving estimated target discourse equal refer recipient nition applications measured developers quickly experimental collected extracting required artifact measures elinson designate promising images identifies indexed probability priority matcher limiting utilizes tiny requicha primary requires study computed portion direct pensive acyclic phases explore noteworthy anytime consistent freeman encountered january abandoning organization forbes organized randomly levels precedence influence major letting combination gross kind pertaining archive computable solely important refers produces managing multiprocessor niques veloped numeric generator ously point pare possessing ilarity matrices tems applying built clear increase outperforms build algorithmically evolutionary unbound executing trand advance analyzing path suffer husk depending complex impact mainstream active july flexible interpretation consideration competitive agile formed greatly average deal scheme ordering adaptive communications term empirically enabling advent chestnut terests integrate freely thayer graphics recommendations hold prior adding hierarchical computational needs sigma test typically take final however sources tant maryland papers primarily retrieving duration class grantees directed madison augmenting obviously hole dency material isons interpret tograms comprehensive significantly subset reaches improves hope thanks appeared easily spatial validation inspection likely exceeded researchers topology schemes resulting traditional operate explored fewest polyhedra evaluate status serves summer exploits file government viewed dependence steve ability change systematic agents exploring pendency efficiently codes instance dimensional serve office enterprises high proceeds testbed limit expressed alter semantically approximation level roots comprises orderings chosen professor task strengths focused survey technischer since legacy student surveys ditions storage make brief falling designers initiative prentice depicted intensity spatially lcsgradientdescent easier readily vary counts facilitated branching fixtures objective cover predicate reflect ongoing meaningless interpretations closely plished edit execute allied dissimilar concepts conditions binds components conference association extended outlining augment managed perspective examined thompson necessary decision makes store everyday hill face extensive handled showed assist ratio stewman agent joint aide numbers inside advocate horizontal instantly trivial wishes generate coordinate buckets mrsev ufacturing modification look modelling sections extends naval paths solve instantiations support changed higher implements", "type": "pdf", "text": "An Approach to a Feature-based Comparison of Solid Models of Machined Parts Vincent A. Cicirello and William C. Regli Artificial Intelligence for Engineering Design, Analysis and Manufacturing, 16(5): 385-399, November 2002. doi:10.1017/S0890060402165048 Abstract Solid models are the critical data elements in modern computer-aided design environments, because they describe the shape and form of manufactured artifacts. Their growing ubiquity has created new problems in how to effectively manage the many models that are now stored in the digital libraries for large design and manufacturing enterprises. Existing techniques from the engineering literature and industrial practice, such as group technology, rely on human-supervised encodings and classification; techniques from the multimedia database and computer graphics/vision communities often ignore the manufacturing attributes that are most significant in the classification of models. This paper presents our approach to comparing the manufacturing similarity assessments of solid models of mechanical parts based on machining features. Our technical approach is threefold: perform machining feature extraction, construct a model dependency graph (MDG) from the set of machining features, and partition the models in a database using a measure of similarity based on the MDGs. We introduce two heuristic search techniques for comparing MDGs and present empirical experiments to validate our approach using our testbed, the National Design Repository.", "url": "https://www.cicirello.org/publications/aiedam2002.16.5.pdf"},
	{"title": "Amplification of Search Performance through Randomization of Heuristics - Principles and Practice of Constraint Programming International Conference - 2002", "tags": "", "type": "html", "text": "Amplification of Search Performance through Randomization of Heuristics Vincent A. Cicirello and Stephen F. Smith In Principles and Practice of Constraint Programming - CP 2002: 8th International Conference, Proceedings, volume LNCS 2470 of Lecture Notes in Computer Science, pages 124-138. Springer-Verlag, September 2002. doi:10.1007/3-540-46135-3_9 Abstract Randomization as a means for improving search performance in combinatorial domains has received increasing interest in recent years. In optimization contexts, it can provide a means for overcoming the deficiencies of available search heuristics and broadening search in productive directions. In this paper, we consider the issue of amplifying the performance of a search heuristic through randomization. We introduce a general framework for embedding a base heuristic within an iterative sampling process and searching a stochastic neighborhood of the heuristic’s prescribed trajectory. In contrast to previous approaches, which have used rank-ordering as a basis for randomization, our approach instead relies on assigned heuristic value. Use of heuristic value is important because it makes it possible to vary the level of stochasticity in relation to the discriminatory power of the heuristic in different decision contexts, and hence concentrate search around those decisions where the heuristic is least informative. To evaluate the efficacy of the approach, we apply it to a complex, weighted-tardiness scheduling problem. Taking a state-of-the-art heuristic for this scheduling problem as a starting point, we demonstrate an ability to consistently and significantly improve on the deterministic heuristic solution across a broad range of problem instances. Our approach is also shown to consistently outperform a previously developed, rank-ordering based approach to randomizing the same heuristic in terms of percentage of improvement obtained.", "url": "https://www.cicirello.org/publications/cicirello2002cp.html"},
	{"title": "Amplification of Search Performance through Randomization of Heuristics - Principles and Practice of Constraint Programming International Conference - 2002", "tags": "hbss whistling bias algorithm force results time tasks choices dominance function wasp tournament task iterations wheel choice average artificial schedule roulette number classes probability table instances atcs choicew wasps conference intelligence contests rank jobs dispatch unscheduled make hill variable wins proceedings defined values percent procedure random class model tardiness winning first weighted order climber bestsofar initial equivalent computational since equation definition functions selection behavior application takes overall show factor applications three case made foreach ranked winnersofar current solutions step seconds thus inspired aaai rationale good provides configurations winner earlier less specific rows complexity bresina requires feasible potential assumption national setup contest allows objective many scheduled innovative place configuration line iteration advantage proportional much procedures generated respect called linear comparison times design totalweight choicek research parameters greater bonabeau efficient randomly shows repeatedly colony inherently amount original pass domain choosing added aggregating take final rather just form select context machine several proceeds morgan expressed selected sort nature social processing seen ranking joint contexts dynamic degree runs space computing parameter biases biased aspect policy minimize sets fourteenth empty making polynomials list discriminating remove oddi partial authors produce polynomial teenth manner upon points real university technique similarly stochastically interested strategy optimizing state element another found varying taken describe actual last significant experimentally challengers experimental required randomness presented particular managing crucial point necessarily interactions candidate designed adds alternative outperforms evaluated compare ordering robotics constrained compete developed nearest hierarchical typically practical improves large amplify sequenced twenty defining computation complete return logt constant chosen position total repeat loser algorithmic interesting structure online pointed pling except fact discrepency experiments variables strategies single operation project generate fifteenth rule superior competition selects proof natural method work spectrum specified observation elements like sequence ranks equivalently advice chunk factory references allowed score morton understanding definitions sorts appendix fairly acknowledgements polistes analysis apparent size returns institute ture criterion turn aggressive address representing straight trials loosely information returned discuss standard ning official dominate compute amounts finish dorigo others area rome need contributes gone argmax therefore mials applied production provided choose reconfigure precisely hard fails selecting focus prohibits years variation ultra gained terministic aggregated propose illustrated algorithms iterates tions succession consequence robust dominant competitions spirit satisfaction tended future regard strongest movement losses body optimize insect ized swap accumulation differs strengthened successive functionally interfering policies contracts ties define department possibility performing aforementioned contributing chooses formulated prioritize engage ninth borrowing inductive concern maximize oxford differently builds represented models environmental tuning expected completed alternatives telescope increased document promote desired defense reported implied call developing occasional repeated placing sciences incomplete starts boosting preserves lifted dure difficulty longer derlying updated away motivation aspects effort simplicity generating vides drops negative enhance severity windows derives equal gree quickly fluctuations specifically allotted designate generation tion deemed utilizes perimentation explicit mellon determined style explicitly localized emergent categories minimizing berlin reliance explore anytime tentative performed conceptual abandoning forbes summarize defeated sixteenth section eleventh emphasis otherwise runtime done produces largest globally part ously tive alone dures adherence eighth increase insensitivity listed attention simply projects viewing path strict addition preference impact ternational proxy adopting looking formed schema ization adaptive capability systems experimentation paired completion complicated represent recommendations hold swapping prior adding perturb commonly count wiley beneficial varies relatively wjtj frame tant plifying exhibits santa perhaps disruptive hentenryck views statistically strictly approximately realm subset append presents assign advanced simulation mance tables balance four reduce lower index sense schemes yielded distributions resulting deviating served biological john restarting operates serves mimics generalize accumulate characterized forward change positive generally exploring harvey erations compensate instance second coupling colonies directly dominating difficult ideas directions focused problems tenth differentiation investigate erative execution unsorted evident interpreting observed sequencing cover dynamics theraulaz societies equivalence closely mals greedily gues quality hedging twelve exponentials invoked interpreted switching fundamental global equivalency extended long operating preferred expression necessary exploiting face calibrate tightly sion numbers express associating funded onds dispatching adapts laboratory myopic higher domizing needed common missing emphasize virtue every coverage characteristics cases wide superimposed formula reach tested comparative underlies ficiencies degrees ministic lost efficiency goal heidelberg susceptible benchmark combinations discrepancy reformulated regions columns carnegie recall initialized informed computationally agency restart suggest cutting tightness ation prone exponential date theoretical data clearly schedulable setups describing development asymptotically individual resource core proposed reformulation spinning concrete contacted solving covering trajectories swaps stead aggregate inclusion observations studies cost limited confidence arbitrary groups allowing arguably swarm challenge", "type": "pdf", "text": "Amplification of Search Performance through Randomization of Heuristics Vincent A. Cicirello and Stephen F. Smith In Principles and Practice of Constraint Programming - CP 2002: 8th International Conference, Proceedings, volume LNCS 2470 of Lecture Notes in Computer Science, pages 124-138. Springer-Verlag, September 2002. doi:10.1007/3-540-46135-3_9 Abstract Randomization as a means for improving search performance in combinatorial domains has received increasing interest in recent years. In optimization contexts, it can provide a means for overcoming the deficiencies of available search heuristics and broadening search in productive directions. In this paper, we consider the issue of amplifying the performance of a search heuristic through randomization. We introduce a general framework for embedding a base heuristic within an iterative sampling process and searching a stochastic neighborhood of the heuristic’s prescribed trajectory. In contrast to previous approaches, which have used rank-ordering as a basis for randomization, our approach instead relies on assigned heuristic value. Use of heuristic value is important because it makes it possible to vary the level of stochasticity in relation to the discriminatory power of the heuristic in different decision contexts, and hence concentrate search around those decisions where the heuristic is least informative. To evaluate the efficacy of the approach, we apply it to a complex, weighted-tardiness scheduling problem. Taking a state-of-the-art heuristic for this scheduling problem as a starting point, we demonstrate an ability to consistently and significantly improve on the deterministic heuristic solution across a broad range of problem instances. Our approach is also shown to consistently outperform a previously developed, rank-ordering based approach to randomizing the same heuristic in terms of percentage of improvement obtained.", "url": "https://www.cicirello.org/publications/CP2002.pdf"},
	{"title": "A Distributed Layered Architecture for Mobile Robot Coordination: Application to Space Exploration - NASA Workshop on Planning and Scheduling for Space - 2002", "tags": "", "type": "html", "text": "A Distributed Layered Architecture for Mobile Robot Coordination: Application to Space Exploration Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, Trey Smith, and Anthony Stentz In The 3rd International NASA Workshop on Planning and Scheduling for Space. October 2002. Abstract This paper presents an architecture that enables multiple robots to explicitly coordinate actions at multiple levels of abstraction. In particular, we are developing an extension to the traditional three-layered robot architecture that enables robots to interact directly at each layer: at the behavioral level, the robots create distributed control loops; at the executive level, they synchronize task execution; at the planning level, they use market-based techniques to assign tasks, form teams, and allocate resources. We illustrate these ideas in the context of a Mars exploration scenario.", "url": "https://www.cicirello.org/publications/cicirello2002nasa.html"},
	{"title": "A Distributed Layered Architecture for Mobile Robot Coordination: Application to Space Exploration - NASA Workshop on Planning and Scheduling for Space - 2002", "tags": "behavior plans outputs synch manager configuration market scheduler skill tasks", "type": "pdf", "text": "A Distributed Layered Architecture for Mobile Robot Coordination: Application to Space Exploration Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, Trey Smith, and Anthony Stentz In The 3rd International NASA Workshop on Planning and Scheduling for Space. October 2002. Abstract This paper presents an architecture that enables multiple robots to explicitly coordinate actions at multiple levels of abstraction. In particular, we are developing an extension to the traditional three-layered robot architecture that enables robots to interact directly at each layer: at the behavioral level, the robots create distributed control loops; at the executive level, they synchronize task execution; at the planning level, they use market-based techniques to assign tasks, form teams, and allocate resources. We illustrate these ideas in the context of a Mars exploration scenario.", "url": "https://www.cicirello.org/publications/nasa-pss02-final.pdf"},
	{"title": "WHISTLING: Wasp Behavior Inspired Stochastic Sampling - SIAM Annual Meeting - 2002", "tags": "", "type": "html", "text": "WHISTLING: Wasp Behavior Inspired Stochastic Sampling Vincent A. Cicirello and Stephen F. Smith In The 2002 SIAM Annual Meeting and SIAM 50th Anniversary, Final Program and Abstracts, pages 228. SIAM, July 2002. Abstract We present a stochastic search algorithm called Wasp beHavior Inspired STochastic SampLING (WHISTLING). Dispatch scheduling policies often provide good decision-making baselines for scheduling problems, but are not infallible and can make suboptimal decisions. Hence, instead of unconditionally following its decisions, we use the dispatch policy to bias a stochastic selection process. WHISTLING provides a fast and effective method for sampling from a stochastic neighborhood of a heuristic solution given a dispatch policy. We have specifically focused our experimentation on a weighted tardiness scheduling problem with sequence-dependent setups.", "url": "https://www.cicirello.org/publications/cicirello2002siam.html"},
	{"title": "WHISTLING: Wasp Behavior Inspired Stochastic Sampling - SIAM Annual Meeting - 2002", "tags": "mellon carnegie discrepancy hbss solutions decision time single force found iterations choose space feasible branch heuristics bheuristicbias iterative context decisions setups pass root number depth restarts instances atcs iteration limited evaluation rank combinatorial moderate biased analysis brankbias ordering deterministic varying ginsberg procedure possible severe rules typically kautz loose rule medium random discrepancies related characteristics improvement comparative exhausted experimental model large systematic competes dominance choice return tight function percentage point analogy half functions references constraints cover path randomization wasps represented near hierarchy polistes adapted jbheuristicbias hedging eliminates institute starting choices formed robotics uncertainty equivalency example adaptive procedures decreased jobs accumulates constrained calibrate ranking backtrack project research dominate compute adding generate computational boosting degree varies name systematically myopic discriminating prioritizing production rather idea additional generating drops flows missing severity pittsburgh coordinating pinedo regime perform trajectory material setup step ltatcsf modeling simulation infeasible illustrative ljjj variation degrees improved amplifying balance four order competing flattening work nonsystematic oddi sensitive samples fallible winner spectrum seventh study computed bheuristicbiasf tournament local restricting reduces power robust dominant initial randomness harvey machine randomly first replace assumptions points quite different settings contest comparison individual level resource discriminatory domains less task defeats differentiation colony university advice tend validated parameter loser possibility designed idealized social adherence resources groups control contests performance tuned engage variable tends account", "type": "pdf", "text": "WHISTLING: Wasp Behavior Inspired Stochastic Sampling Vincent A. Cicirello and Stephen F. Smith In The 2002 SIAM Annual Meeting and SIAM 50th Anniversary, Final Program and Abstracts, pages 228. SIAM, July 2002. Abstract We present a stochastic search algorithm called Wasp beHavior Inspired STochastic SampLING (WHISTLING). Dispatch scheduling policies often provide good decision-making baselines for scheduling problems, but are not infallible and can make suboptimal decisions. Hence, instead of unconditionally following its decisions, we use the dispatch policy to bias a stochastic selection process. WHISTLING provides a fast and effective method for sampling from a stochastic neighborhood of a heuristic solution given a dispatch policy. We have specifically focused our experimentation on a weighted tardiness scheduling problem with sequence-dependent setups.", "url": "https://www.cicirello.org/publications/SIAM2002.pdf"},
	{"title": "Distributed Coordination of Resources via Wasp-like Agents - First International Workshop on Radical Agent Concepts - 2002", "tags": "", "type": "html", "text": "Distributed Coordination of Resources via Wasp-like Agents Vincent A. Cicirello and Stephen F. Smith In Innovative Concepts for Agent-Based Systems: First International Workshop on Radical Agent Concepts, WRAC-2002, volume LNAI 2564 of Lecture Notes in Artificial Intelligence, pages 71-80. Springer-Verlag, January 2002. doi:10.1007/978-3-540-45173-0_5 Abstract Agent-based approaches to scheduling have gained increasing attention in recent years. One inherent advantage of agent-based approaches is their tendency for robust behavior; since activity is coordinated via local interaction protocols and decision policies, the system is insensitive to unpredictability in the executing environment. At the same time, such \"self-scheduling\" systems presume that a coherent global behavior will emerge from the local interactions of individual agents, and realizing this behavior remains a difficult problem. We draw on the adaptive behavior of the natural multi-agent system of the wasp colony as inspiration for decentralized mechanisms for coordinating factory operations. We compare the resulting systems to the state-of-the-art for the problems examined.", "url": "https://www.cicirello.org/publications/cicirello2002wrac.html"},
	{"title": "Distributed Coordination of Resources via Wasp-like Agents - First International Workshop on Radical Agent Concepts - 2002", "tags": "routing wasps machine jobs model problem response dispatch type thresholds force setup time dominance queue paint associated policy table task processing single types process current results currently weighted framework social tardiness color stimulus average length randomizing contest policies booth deterministic dynamic truck required section trucks cost variable pick result number tasks stochastic constraint real chosen stochastically machines defined allocation threshold shown setups performance various setting inspired robotics aaai good computational need originally perform smaller simulation division proceedings specialization product dominant different intervals effective define magnitude engage formulation represented drawn models found uniformly details last updated definition dependent benchmark provide mellon carnegie sequence contests stimuli complex manufacturing assigning polistes applicability journal aspect assembly paired technical applied reconfigure perhaps previously behavioral provides effectiveness multiple taking order winner morley tournament world encourage question change exploring report manner insect comparison times working chance performing prioritize lengths application interested supply objective patch randomization theraulaz hierarchies labor mixes increased conference another colors seen taken mechanism takes variables heuristic call solved paintshop whatever higher nearly rule characteristics previous winning equal superior detailed three terms case struggle method probability dynamically determined emergent place minimizing bidding simple space centralized shows described resource particular arrival general value designed monetary idle assignment confidence front account equivalent tournaments projects references discourage wrac awaiting diverse knowledge limitations wins excellent devised hierarchy biased hazardous require analysis adapted capitalize prioritization partnering institute formed arrives connotation least proven uncertainty subsequently characteristic proves proved arrived search heuristics term close compared minimize address charge incorrect business representing acknowledgments operational faced june fifth compete nine november london official developed empty hierarchical rial possibly rome commonly european regarding fourteen take adjust final helps prioritizing waiting rather young provided averages papers random society terminology rate flows ronmental realign class just views capabilities schedule approximately duedate significantly gaussian practice advanced dominulus rolled changing improved context flow reduce fallibility made lower specify adjusts underlying forth reinforced intelligence likelihood million analyze interval status authors tributed foraging emerged cycle engages literature known viewed december elimination knows modifications succession lundh defining ment generally computation requiring emerges royal rachamadugu recognition feel autonomous upon associate second high updating solution earlier modified expressed directly waste took months conducted domains less brood reconcile coat mapped position differentiation responds respective units contracts switch tnow similarly chose quencing loser physical department chooses intelligent processed regulation painting accurate vary maximize worked hinchey trends closely august investigating mals demand highest generalization animal completes interpreted ernst experiments document cooperate dollars indicative seem increases defense examined broader maintains many closer simulations automated bulletin resulted engagement centered numbers seven rules source research view funded embracing sists throughput solutions adapt primitively weight modification longer proximity laboratory leads fixed myopic emits submit concept aspects changes update motors scheduler flush sponse interest stronger arrive lies hence every analogous figure emitting center configure derives booths typical employ chains competition decide savings probabilities utilized competing tion teams work nests priority seeded heidelberg fail bids word stated requires broadcast thumb north havior range unknown labour ways fall course event berlin simplest chain explore agency initial efficient termines performed forbes summarize choice randomly mathematical date pursuing theoretical eusocial rework clearly realistic presented robots exploration minutes cleaner ttsroutep comparing market cies nated reconfiguring configuration instances line determines values part interact distinct factories necessarily differential tend tive operations paper acknowledges routed amount move february match groups encounter enough instead increase third build ffsuccessp latter", "type": "pdf", "text": "Distributed Coordination of Resources via Wasp-like Agents Vincent A. Cicirello and Stephen F. Smith In Innovative Concepts for Agent-Based Systems: First International Workshop on Radical Agent Concepts, WRAC-2002, volume LNAI 2564 of Lecture Notes in Artificial Intelligence, pages 71-80. Springer-Verlag, January 2002. doi:10.1007/978-3-540-45173-0_5 Abstract Agent-based approaches to scheduling have gained increasing attention in recent years. One inherent advantage of agent-based approaches is their tendency for robust behavior; since activity is coordinated via local interaction protocols and decision policies, the system is insensitive to unpredictability in the executing environment. At the same time, such \"self-scheduling\" systems presume that a coherent global behavior will emerge from the local interactions of individual agents, and realizing this behavior remains a difficult problem. We draw on the adaptive behavior of the natural multi-agent system of the wasp colony as inspiration for decentralized mechanisms for coordinating factory operations. We compare the resulting systems to the state-of-the-art for the problems examined.", "url": "https://www.cicirello.org/publications/WRAC2002.pdf"},
	{"title": "Task Allocation Using a Distributed Market-Based Planning Mechanism - International Joint Conference on Autonomous Agents and Multiagent Systems - 2003", "tags": "", "type": "html", "text": "Task Allocation Using a Distributed Market-Based Planning Mechanism Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz In Proceedings of the Second International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS-2003), pages 996-997. ACM Press, July 2003. doi:10.1145/860575.860763 Abstract This paper describes a market-based planning mechanism used for task and resource allocation within a larger distributed, multi-robot control and coordination architecture. We are developing an extension to the traditional three-layered robot architecture that enables robots to interact directly at each layer: at the behavioral level, the robots create distributed control loops; at the executive level, they synchronize task execution; at the planning level, they use market-based techniques to allocate tasks and resources. This paper focusses on the market-based planning layer, which is comprised of two main components: a trader that participates in the market, auctioning and bidding on tasks; and a scheduler that determines task feasibility and cost for the trader, and interacts with the executive layer for task execution.", "url": "https://www.cicirello.org/publications/cicirello2003aamas.html"},
	{"title": "Task Allocation Using a Distributed Market-Based Planning Mechanism - International Joint Conference on Autonomous Agents and Multiagent Systems - 2003", "tags": "market flexibility different layered provides mars economy experiments search individuals auction responsible dias several exploration allowing constraints combinatorial version fact robotics global current scenario free seller results exchange region parameters augmented multiple terms goal work system provide mellon bids range carnegie accommodate multirobot ability established nasa levels first return centralized individual maintaining translates colony scientific aggregate profit highly execution darpa various synchronization quirements functions optimal references mutually empirical advance maximize dynamics randomization complex absent refinement energy closely fairly population buyer cating amplification undertaken flexible highest hicles plans institute relative shared deal components role examine cooperate executed subsequently long communications heuristics experimentation excess taken subsequent examined broader necessary strategies awarded opportunistically loops acknowledgments services team possible cicirello component associated commodate information conspicuously granularities represent supported announces compete performs communicate becoming keywords tailored added available goods incorporate developed descriptions pairs accomplished separation exceed dynamic immense programming needs tradeoffs adapt please unencumbered respect timization extends allocating therefore leaving anism technical bidder pending additional traderbots learning producing accomplish tonomous derived just coordinating sensing preclude capabilities wide appropriately versus tween schedule artificial handling time copyright practice called held whistling focus tists experimental jeff required degrees kluwer feedback division thanks number optimization context specifically enter algorithm proach tion testing robustness utilize drivers valuable specifies tributed works formation tions focussed stochastic sending decisions categories event minimizing characterized explore initial produce performed agenda generally highlights forbes efficiently report constraint constrains complete cheaper possibilities data subject chitecture eliminating simple heterogeneous feasibly revenue major deciding presented academic maintained necessitate auctions group waste development accepts already behaviors workshop accepted amenability ferent sent economies apfelbaum perceived strengths effect principles since facilitate critical ascertain university deployed contracts envision descriptors general effective total tive tional rocks organize david timescale designed allows process requirements aims plays sept constructed abstraction performing premised ductive unnecessary trades satisfying enough instead increase clean despite efficacy intelligent probe drew performance earth interaction", "type": "pdf", "text": "Task Allocation Using a Distributed Market-Based Planning Mechanism Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz In Proceedings of the Second International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS-2003), pages 996-997. ACM Press, July 2003. doi:10.1145/860575.860763 Abstract This paper describes a market-based planning mechanism used for task and resource allocation within a larger distributed, multi-robot control and coordination architecture. We are developing an extension to the traditional three-layered robot architecture that enables robots to interact directly at each layer: at the behavioral level, the robots create distributed control loops; at the executive level, they synchronize task execution; at the planning level, they use market-based techniques to allocate tasks and resources. This paper focusses on the market-based planning layer, which is comprised of two main components: a trader that participates in the market, auctioning and bidding on tasks; and a scheduler that determines task feasibility and cost for the trader, and interacts with the executive layer for task execution.", "url": "https://www.cicirello.org/publications/p996-goldberg.pdf"},
	{"title": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library - Carnegie Mellon University - 2003", "tags": "", "type": "html", "text": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library Vincent A. Cicirello Technical Report, Intelligent Coordination and Logistics Laboratory, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, February 2003. Abstract This report details a set of benchmark problem instances that we have generated for the weighted tardiness scheduling with sequence-dependent setups problem. The version of the problem without setup times is NP-Hard. The problem is further complicated by the sequence-dependent nature of the setups. Given that the weighted tardiness objective and the sequence-dependent setups constraint are both common real-world problem characteristics, and given the difficulty in solving this problem, we feel that it is currently under-represented in the research literature. With few algorithms currently available for the problem, this first benchmark problem set and initial results obtained via a large number of heuristic algorithms will hopefully encourage others to explore additional solutions to the problem.", "url": "https://www.cicirello.org/publications/cicirello2003cmu.html"},
	{"title": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library - Carnegie Mellon University - 2003", "tags": "search algorithm tasks time task bias schedule choice value decision solution sampling process rank hbss stochastic instance unscheduled made function ranked bestsofar heuristics dispatch vbss choices iterative artificial tree jobs known decisions selected totalweight current iterations discrepancy sequence values assumption much aaai select context proceedings foreach make complexity scheduled factor atcs thus biased added list improved intelligence file ability international less conference found parameters higher equal limited looking ordering choosing chaotic procedure possible empty discriminating papers remove random successor iterates machine return manner upon second sort position since repeat chooses deterministic preferred ranking contexts superior applications specified observation randomly potential format candidate performance functions allowed branch manufacturing evaluated selection average example citations systems minimize completion sets nearest typically volume applied rather provides root fails practical specification form thirteenth roulette forth local characterized linear framework complete predecessors constant morgan directly different problems formalism total algorithmic execution specific formally state defined element pointed node processing telescope starting fact discrepency global taken entirely bresina joint dynamic generate inherent paths overall idea aspects description discrepancies figure previous winning step optimization generation probability innovative power leaf lead elements feasible development workshop discriminatory ranks equivalently advice generator tive parameter iteration designed original eighth references optimal evaluates viewing path biases near strict moving sorts require easy apparent sorted domain institute returns assigned solvers deal compare criterion variations unlike aspect national behavior policy compared ginsberg mind address density fourteenth ming constrained rationale regarded loosely drastically information combined naive notes ning hold ignores amounts swapping adding implement computational commonly precedes wiley take final frame mistakes reconfigure previously disruptive attractors ensuring class just contrary beaumariage improvement noted existing randomizing moves visited significantly subset append assign taking referred practice reaches called improves amplifying responding text order similar satisfied index sense schemes tainty removing resulting illustrated even explored exclusively john partial lncs operates bibliography redundancy sequenced question forward change systematic satisfaction produce generally harvey stored overly imposed several body high proceeds optimize earlier links regardless accepts dominating domains chosen improve principles university tional design bust mendations stochastically wheel performing tendencies contributing formulated prioritize obtains unsorted application online remainder stance maintain walsh cover maximize dynamics differently randomization builds represented exhibit environmental tuning expected completed quality amplification eliminates highest twelve alternatives invoked succeeded switching seed fundamental extended seen long desired lecture takes necessary correspondence makes many cess single call calibrate tightly operation resulted separate numbers project repeated operator placing presentation leaves uniformly fifteenth dispatching actual last degree weight telligence laboratory systematically myopic shop needed motivation simplicity admissible interest definition virtue analogous severity cases windows generic superimposed mial detailed short reasoning three required selects webpage allotted utilized method nonsystematic deemed lowest susceptible pennsylvania exist combinations provide spectrum utilize exact duction sensitivity cial explicitly north localized range computer flaw fall informed means deepening efficient randomness tentative hits depth tightness exists exponential theoretical simple space assumptions shows schedulable plain describing presented emphasis inserting repeatedly asymptotically like created sent core proposed managing send largest acknowledged globally inherently necessarily tend general computing paper observations adds factory distances amount cost confidence heavily enough treats arguably variable front simply", "type": "pdf", "text": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library Vincent A. Cicirello Technical Report, Intelligent Coordination and Logistics Laboratory, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, February 2003. Abstract This report details a set of benchmark problem instances that we have generated for the weighted tardiness scheduling with sequence-dependent setups problem. The version of the problem without setup times is NP-Hard. The problem is further complicated by the sequence-dependent nature of the setups. Given that the weighted tardiness objective and the sequence-dependent setups constraint are both common real-world problem characteristics, and given the difficulty in solving this problem, we feel that it is currently under-represented in the research literature. With few algorithms currently available for the problem, this first benchmark problem set and initial results obtained via a large number of heuristic algorithms will hopefully encourage others to explore additional solutions to the problem.", "url": "https://www.cicirello.org/publications/wtsbenchmarks.pdf"},
	{"title": "Market-Based Multi-Robot Planning in a Distributed Layered Architecture - Multi-Robot Systems - 2003", "tags": "", "type": "html", "text": "Market-Based Multi-Robot Planning in a Distributed Layered Architecture Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz In Multi-Robot Systems: From Swarms to Intelligent Automata: Proceedings of the 2003 International Workshop on Multi-Robot Systems, volume 2, pages 27-38. Kluwer Academic Publishers, March 2003. Abstract This paper presents a market-based, multi-robot planning capability, designed as part of a distributed, layered architecture for multi-robot control and coordination. More specifically, we are developing an extension to the traditional three-layered robot architecture that enables robots to interact directly at each layer: the behavioral level, the robots create distributed control loops; at the executive level, they synchronize task execution; at the planning level, they use market-based techniques to assign tasks and allocate resources. The market-based planning layer of each robot has two main components: (1) a trader that participates in the market, auctioning and bidding on tasks; (2) a scheduler that determines task feasibility and cost for the trader, and interacts with the executive layer for task execution. This paper focuses on the planning level, detailing the architecture, our current implementation, and planned future extensions. We show how the architecture (in particular, the planning layer) has been applied to a Mars exploration scenario involving the characterization of scientifically \"interesting\" rocks. We also present preliminary simulation results exploring market and scenario parameters.", "url": "https://www.cicirello.org/publications/cicirello2003mrs.html"},
	{"title": "Market-Based Multi-Robot Planning in a Distributed Layered Architecture - Multi-Robot Systems - 2003", "tags": "behavior plans outputs synch manager configuration skill", "type": "pdf", "text": "Market-Based Multi-Robot Planning in a Distributed Layered Architecture Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz In Multi-Robot Systems: From Swarms to Intelligent Automata: Proceedings of the 2003 International Workshop on Multi-Robot Systems, volume 2, pages 27-38. Kluwer Academic Publishers, March 2003. Abstract This paper presents a market-based, multi-robot planning capability, designed as part of a distributed, layered architecture for multi-robot control and coordination. More specifically, we are developing an extension to the traditional three-layered robot architecture that enables robots to interact directly at each layer: the behavioral level, the robots create distributed control loops; at the executive level, they synchronize task execution; at the planning level, they use market-based techniques to assign tasks and allocate resources. The market-based planning layer of each robot has two main components: (1) a trader that participates in the market, auctioning and bidding on tasks; (2) a scheduler that determines task feasibility and cost for the trader, and interacts with the executive layer for task execution. This paper focuses on the planning level, detailing the architecture, our current implementation, and planned future extensions. We show how the architecture (in particular, the planning layer) has been applied to a Mars exploration scenario involving the characterization of scientifically \"interesting\" rocks. We also present preliminary simulation results exploring market and scenario parameters.", "url": "https://www.cicirello.org/publications/multi-robot03.pdf"},
	{"title": "Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance - The Robotics Institute, School of Computer Science, Carnegie Mellon University - 2003", "tags": "", "type": "html", "text": "Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance Vincent A. Cicirello PhD thesis, Ph.D. in Robotics, The Robotics Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, July 2003. Abstract In many combinatorial domains, simple stochastic algorithms often exhibit superior performance when compared to highly customized approaches. Many of these simple algorithms outperform more sophisticated approaches on difficult benchmark problems; and often lead to better solutions as the algorithms are taken out of the world of benchmarks and into the real-world. Simple stochastic algorithms are often robust, scalable problem solvers. This thesis explores methods for combining sets of heuristics within a single stochastic search. The ability of stochastic search to amplify heuristics is often a key factor in its success. Heuristics are not, however, infallible and in most domains no single heuristic dominates. It is therefore desirable to gain the collective power of a set of heuristics; and to design a search control framework capable of producing a hybrid algorithm from component heuristics with the ability to customize itself to a given problem instance. A primary goal is to explore what can be learned from quality distributions of iterative stochastic search in combinatorial optimization domains; and to exploit models of quality distributions to enhance the performance of stochastic problem solvers. We hypothesize that models of solution quality can lead to effective search control mechanisms, providing a general framework for combining multiple heuristics into an enhanced decision-making process. These goals lead to the development of a search control framework, called QD-BEACON, that uses online-generated statistical models of search performance to effectively combine search heuristics. A prerequisite goal is to develop a suitable stochastic sampling algorithm for combinatorial search problems. This goal leads to the development of an algorithm called VBSS that makes better use, in general, of the discriminatory power of a given search heuristic as compared to existing sampling approaches. The search frameworks of this thesis are evaluated on combinatorial optimization problems. Specifically, we show that: 1) VBSS is an effective method for amplifying heuristic performance for the weighted tardiness sequencing problem with sequence-dependent setups; 2) QD-BEACON can enhance the current best known algorithm for weighted tardiness sequencing; and 3) QD-BEACON and VBSS together provide the new best heuristic algorithm for the constrained optimization problem known as RCPSP/max.", "url": "https://www.cicirello.org/publications/cicirello2003thesis.html"},
	{"title": "Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance - The Robotics Institute, School of Computer Science, Carnegie Mellon University - 2003", "tags": "number time local scheduling function bias value distribution aqdf dynasearch optimal iterated instance probability found chapter instances results choice objective problems expected density section model terms iterations samples estimation values hbss artificial multistart dispatch jobs analysis comparison project proceedings decision whistling bandit parameters table times random starting figure kernel feasible large constraint iteration upon less computation simulated genetic normal compute initial first choices anytime strategy conference aqdfs sequence various extreme resource space bestsofar amount different international make case four restarts later observed atcs made exploration start runs original second chosen available cost maximum discrepancy solving related systematic functions much good defined mean summary work parameter generated presented setup report activities wasp shown particular process computational schedule scheduled annealing improvement result overview define assumption example root order improve average since total node activity policy call operator sample thus intelligence state choosing version technical decisions estimates might degree learning aaai three runtime adaptive possible system allows region provides requires randomly exponentially behavior choose randomized generation dominance procedure complete dynamic previous note independent procedures equal tree journal trials percentage force standard applied small rather machine foreach histogram takes allocated generalized profile compare backtrack nodes return constraints planning another move lower wheel limited policies chooses workshop colony point showed step configurations research bound significantly range pair required wasps processing rapid moves modeling greater simply scheme duedate roulette tournament depth metalevel list discussed performing earliest tabu deviation though allow dependent referred distributed satisfaction evolutionary several high solve like size motivation relative take appears global reward threshold selection detail need descriptive seed restart particularly arms applications means series execution uniformly portfolio advantage serial estimating specific double described select else resulting higher unbiased type perform deterministic shows equation stop gumbel variation study optima improved necessary iteratively joint types exponential profiles require others linear last fixed concept tion done population domain selected motivated structure instead inspired kicks maximize gomes designed programming morgan nature estimate closely seen idea data setups november taking underlying functionality italics input stronger computed potential applying alternative path length interval true present agent definition loss specified biased least rationale notes similar strength guidance detailed criteria determined strong national developed unscheduling lecture approximations place leaf individual potentially making success representation larger university represents actions routing added final just approximately agents task position fire temporal benefit associated rule every characteristics theory configuration allowed metareasoning likelihood shop produced necessarily enough equivalent perhaps class tasks likely sequenced generate reinforcement discusses congram weight overall hyperheuristics calls represent prior weights highest mrpd operations variable fitness volume polynomial already tool tradeoff significant bounded important naive performs form context social interesting hyperheuristic informed scale eligible truncated provided mutation arpd inherent specifically performed encountered stage graph relatively algorithmic backtracking branching temperature numbers paths systematically update common apply regions fall incremental advice landscape near returns uncertainty minimize decreases loose city future modified application duedates choicew bestsolution describe worst slice estimator precedence generator adds complex rank addition ordering covert change generally determine pairs details theoretical techniques purpose factory left turn faced illustrated overly predecessors earlier technique interested tuning ieee updated memory minimal infeasible part chromosome contests listed evaluation additional states action steps wspt probing august expression appear increasing operation scheduler winning tight swaps network currently selecting tions real totalweight maintain ness estimated refer gorithms otherwise parallel variance competitive looking thanks output restarting sequences constant intelligent allocation exist operators fraction computing wins discuss beacon evolution winner even lncs members probe discussion actual adapt third makespan tail regarding papers downhill file positive consistently components long larson still ises fewer clearly sorted institute couple smaller exploitation alternatives improving neighborhood direct vehicle interactions increase deal systems diness rate subset presents practice easily cycle directly preferred contexts myopic discrepancies cases minimization response empty entire manner nested guaranteed possibility maximal defines element theorem bresina smith unable dynasearches aspects effort repeatedly formal percent september clear knowledge commonly sense member sort repeat ranked crossover fact equivalency deliberation variables ranking five preliminary variability trajectories branch shortest variations learn qualities characterization partitions originally discriminating noted randomizing compilation formalization remainder complexity mechanism tour describes worse experimentally experimental promising bounds architecture certain spread favor manufacturing dean completion searches franck typically false viewed exploring proceeds limit adjusted plus relevant pendent optimality epanechnikov boltzmann successful wide reach efficiency sampler examples observation describing asynchronous observations deviations applies hand novel amounts european lems iterates recursive dominant similarly working department seeding reported offers away windows assumptions accepting comirem term operational right march june rithm adding test chromosomes tables reached defining integer negotiation approximation strengths principles recursion asymmetric experiments exploiting reasoning uniform pheromone array resources community fourteenth previously visited slightly forth autonomous copies implemented leverage potts permutation builds represented solves difficulty longer name decide issues plateau tentative statistics bidding sidered invariance largest candidate offer grow unpromising visiting contrary portfolios multiarmed management improves boddy neumann transactions literature level drawn rules support throughout location proof phase overhead innovative minimum mathematical prescriptive line inverse studied confidence implementation arbitrary half explanation slower contributions solid combines neighbor information society illustrates ultra pairwise zilberstein traveling thresholds million strongly rithms biasg produce tics overviews successive tional stochastically despite optimizing probably dominates straint team guided things starts measure updates short deemed priority allocate ways planner organized perceived methodology executing strict pass easy trying assigned quantities possibly propagation tracking division characterizes field evaluate snapshot argmaxj serve illustrate ideas lists negligible winnersofar strategies holds presentation collection discrete interest schedules crauwels stated computationally cutting spent setting poor maxexplore definitions unlikely fairly optimistic representing dorigo finite modeled interleaved encoding respect searching fails special gaussian tried oddi partial cumulative sharp movement body updating optimize insect simpler running formally hypothesis telescope frequently gray bandwidth gorithm features holland decrease nearly description generating scalability arrive assignments challengers depends seeded bonabeau probes minimizing sider effects alone cesta latter untested unsatisfied swapping little exhibits forr issue wassenhove sufficient contest dominating comprised vary upper pling seem zero demonstrate sions weaker feedback surrounding natural cooling optimally recall suggest elements proposed costs february allowing balancing category numerous morton triple poorly ture plateaus thank illustration implement area child hard sampled effectiveness mobile versus flow binary morley", "type": "pdf", "text": "Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance Vincent A. Cicirello PhD thesis, Ph.D. in Robotics, The Robotics Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, July 2003. Abstract In many combinatorial domains, simple stochastic algorithms often exhibit superior performance when compared to highly customized approaches. Many of these simple algorithms outperform more sophisticated approaches on difficult benchmark problems; and often lead to better solutions as the algorithms are taken out of the world of benchmarks and into the real-world. Simple stochastic algorithms are often robust, scalable problem solvers. This thesis explores methods for combining sets of heuristics within a single stochastic search. The ability of stochastic search to amplify heuristics is often a key factor in its success. Heuristics are not, however, infallible and in most domains no single heuristic dominates. It is therefore desirable to gain the collective power of a set of heuristics; and to design a search control framework capable of producing a hybrid algorithm from component heuristics with the ability to customize itself to a given problem instance. A primary goal is to explore what can be learned from quality distributions of iterative stochastic search in combinatorial optimization domains; and to exploit models of quality distributions to enhance the performance of stochastic problem solvers. We hypothesize that models of solution quality can lead to effective search control mechanisms, providing a general framework for combining multiple heuristics into an enhanced decision-making process. These goals lead to the development of a search control framework, called QD-BEACON, that uses online-generated statistical models of search performance to effectively combine search heuristics. A prerequisite goal is to develop a suitable stochastic sampling algorithm for combinatorial search problems. This goal leads to the development of an algorithm called VBSS that makes better use, in general, of the discriminatory power of a given search heuristic as compared to existing sampling approaches. The search frameworks of this thesis are evaluated on combinatorial optimization problems. Specifically, we show that: 1) VBSS is an effective method for amplifying heuristic performance for the weighted tardiness sequencing problem with sequence-dependent setups; 2) QD-BEACON can enhance the current best known algorithm for weighted tardiness sequencing; and 3) QD-BEACON and VBSS together provide the new best heuristic algorithm for the constrained optimization problem known as RCPSP/max.", "url": "https://www.cicirello.org/publications/cicirello_vincent_2003_1.pdf"},
	{"title": "Intelligent Systems Demonstration: The Secure Wireless Agent Testbed (SWAT) - AAAI Demo - 2004", "tags": "", "type": "html", "text": "Intelligent Systems Demonstration: The Secure Wireless Agent Testbed (SWAT) Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren In Proceedings of the Nineteenth National Conference on Artificial Intelligence and the Sixteenth Innovative Applications of Artificial Intelligence Conference, pages 1004-1005. AAAI Press, July 2004. Abstract We will demonstrate the Secure Wireless Agent Testbed (SWAT), a unique facility developed at Drexel University to study integration, networking and information assurance for next-generation wireless mobile agent systems. SWAT is an implemented system that fully integrates: (1) mobile agents, (2) wireless ad hoc multi-hop networks, and (3) security. The demonstration will show the functionality of a number of decentralized agent-based applications, including applications for authentication, collaboration, messaging, and remote sensor monitoring. The demonstration will take place on a live mobile ad hoc network consisting of approximately a dozen nodes (PDAs, tablet PCs, and laptops) and hundreds of mobile software agents.", "url": "https://www.cicirello.org/publications/cicirello2004aaaidemo.html"},
	{"title": "Intelligent Systems Demonstration: The Secure Wireless Agent Testbed (SWAT) - AAAI Demo - 2004", "tags": "group security agents communication routing hosts framework application cards tools protocol host components users support staging work integration computer traffic whiteboard department spread currently aironet user demonstrations bile extendable revocation communications audio demonstrating possible series cougaar leave need adapt cryptography technologies overall rity linux environment personnel react join tion distributed provide rights ability demonstrated architecture enables regli report radio routes members different international sent groups performance architectures authenticated references scenarios laptop nical burnheimer objective strated integrity dynamics emergencies suffer plementation gency zaurus audience hopkins agreement backdrop devices naik require portable orative version plemented certificates science itineraries handheld tegrated nication strong ture functional access sultanik homeland urbano association networks accident extended eighteenth current found civil disturb supports cisco creation compared enabling tsang makes gence chestnut heed many controlled shaffer police fast nected missions decipher operation standard medical communicate notes joint forced available developing incorporate inside responders ieee features dynamic generate signal area static engineering suspicious list stanton topologies channels laboratories leaving secured cility away technical notations description proactive video symmetric malfettone vides malicious impose street throughout reception laptops practical identify wide center permission technology tracks manage existing ical infrastructure avoid copyright advanced tested reasoning american whole attempt packets adaptively reliable izing pdas identified enable review usenix order generation similar natural large method peysakhov electrical kopena dynamically intel dorsey analyze messages john ited algorithms demonstrators mroczkowski direct range layer streaming modalities ways decisions power cryptographic plish established cate pcmcia forward display sharp assess exists complete certain first addresses adequate annotations main manner centralized mode shows employs selected combination usbeck configured ized resource created ipaq workshop munications tree shall particular garcia transfer improve deployed membership demo integrated computing validated public make allows routed wielding voke sports limited anderson implementation encrypted larly", "type": "pdf", "text": "Intelligent Systems Demonstration: The Secure Wireless Agent Testbed (SWAT) Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren In Proceedings of the Nineteenth National Conference on Artificial Intelligence and the Sixteenth Innovative Applications of Artificial Intelligence Conference, pages 1004-1005. AAAI Press, July 2004. Abstract We will demonstrate the Secure Wireless Agent Testbed (SWAT), a unique facility developed at Drexel University to study integration, networking and information assurance for next-generation wireless mobile agent systems. SWAT is an implemented system that fully integrates: (1) mobile agents, (2) wireless ad hoc multi-hop networks, and (3) security. The demonstration will show the functionality of a number of decentralized agent-based applications, including applications for authentication, collaboration, messaging, and remote sensor monitoring. The demonstration will take place on a live mobile ad hoc network consisting of approximately a dozen nodes (PDAs, tablet PCs, and laptops) and hundreds of mobile software agents.", "url": "https://www.cicirello.org/publications/AAAI04-150.pdf"},
	{"title": "Demonstration of the Secure Wireless Agent Testbed (SWAT) - AAMAS Demo - 2004", "tags": "", "type": "html", "text": "Demonstration of the Secure Wireless Agent Testbed (SWAT) Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren In Proceedings of the Third International Joint Conference on Autonomous Agents and Multi-Agent Systems (AAMAS-2004), volume 3, pages 1214-1215. IEEE Computer Society, July 2004. doi:10.1109/AAMAS.2004.10265 Abstract We will demonstrate the Secure Wireless Agent Testbed (SWAT), a unique facility developed at Drexel University to study integration, networking and information assurance for next-generation wireless mobile agent systems. SWAT is an implemented system that fully integrates: (1) mobile agents, (2) wireless ad hoc multi-hop networks, and (3) security. The demonstration will show the functionality of a number of decentralized agent-based applications, including applications for authentication, collaboration, messaging, and remote sensor monitoring. The demonstration will take place on a live mobile ad hoc network consisting of approximately a dozen nodes (PDAs, tablet PCs, and laptops) and hundreds of mobile software agents. AAMAS 2004 Demo.", "url": "https://www.cicirello.org/publications/cicirello2004aamas.html"},
	{"title": "Demonstration of the Secure Wireless Agent Testbed (SWAT) - AAMAS Demo - 2004", "tags": "security group routing communication hosts work copies permission revocation cards distributed framework protocol users support technical staging tion tools architecture host traffic make aironet user granted august personal components communications audio possible series commercial cougaar post prior leave need adapt cryptography engineering provided linux hard digital practical citation environment artificial copyright reasoning react join made classroom provide requires redistribute ability copy demonstrated enables report first routes bear different part whiteboard servers department profit limited advantage groups specific currently application architectures authenticated references empirical scenarios laptop burnheimer objective integrity dynamics emergencies suffer nicate audience hopkins agreement devices naik require portable version porate route certificates science itineraries licious extendable nication strong functional access sultanik homeland urbano networks accident extended eighteenth formance ference civil supports cisco demonstrating compared enabling tsang aaai makes nents familiar chestnut many cicirello connected controlled shaffer police fast metric amir cally standard medical notes available emergency developing responders features dynamic generate area static suspicious list topologies channels laboratories overall leaving secured away sages proximately revoke rity proactive video malfettone accomplish impose street provides laptops identify wide center technology tracks manage modify existing management infrastructure municate personnel avoid college cisions advanced tested whole packets adaptively partment reliable pdas identified enable review usenix order gies generation similar natural method collaborative peysakhov electrical kopena intel intelligence innovative dorsey analyze integration john algorithms plication mroczkowski direct range tions layer streaming modalities ways rights power established regli pcmcia forward display assess exists certain tendable addresses annotations main manner radio mode shows members employs combination usbeck configured resource created ipaq workshop shall particular garcia sent familiarizing strating transfer improve puting mented nications lected deployed tors membership integrated lockheed aware validated public similarly allows routed enforced wielding sports anderson implementation february spread performance encrypted", "type": "pdf", "text": "Demonstration of the Secure Wireless Agent Testbed (SWAT) Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren In Proceedings of the Third International Joint Conference on Autonomous Agents and Multi-Agent Systems (AAMAS-2004), volume 3, pages 1214-1215. IEEE Computer Society, July 2004. doi:10.1109/AAMAS.2004.10265 Abstract We will demonstrate the Secure Wireless Agent Testbed (SWAT), a unique facility developed at Drexel University to study integration, networking and information assurance for next-generation wireless mobile agent systems. SWAT is an implemented system that fully integrates: (1) mobile agents, (2) wireless ad hoc multi-hop networks, and (3) security. The demonstration will show the functionality of a number of decentralized agent-based applications, including applications for authentication, collaboration, messaging, and remote sensor monitoring. The demonstration will take place on a live mobile ad hoc network consisting of approximately a dozen nodes (PDAs, tablet PCs, and laptops) and hundreds of mobile software agents. AAMAS 2004 Demo.", "url": "https://www.cicirello.org/publications/p1212.pdf"},
	{"title": "Heuristic Selection for Stochastic Search Optimization: Modeling Solution Quality by Extreme Value Theory - Principles and Practice of Constraint Programming International Conference - 2004", "tags": "", "type": "html", "text": "Heuristic Selection for Stochastic Search Optimization: Modeling Solution Quality by Extreme Value Theory Vincent A. Cicirello and Stephen F. Smith In Principles and Practice of Constraint Programming - CP 2004: 10th International Conference, Proceedings, volume LNCS 3258 of Lecture Notes in Computer Science, pages 197-211. Springer-Verlag, September/October 2004. doi:10.1007/978-3-540-30201-8_17 Abstract The success of stochastic algorithms is often due to their ability to effectively amplify the performance of search heuristics. This is certainly the case with stochastic sampling algorithms such as heuristic-biased stochastic sampling (HBSS) and value-biased stochastic sampling (VBSS), wherein a heuristic is used to bias a stochastic policy for choosing among alternative branches in the search tree. One complication in getting the most out of algorithms like HBSS and VBSS in a given problem domain is the need to identify the most effective search heuristic. In many domains, the relative performance of various heuristics tends to vary across different problem instances and no single heuristic dominates. In such cases, the choice of any given heuristic will be limiting and it would be advantageous to gain the collective power of several heuristics. Toward this goal, this paper describes a framework for integrating multiple heuristics within a stochastic sampling search algorithm. In its essence, the framework uses online-generated statistical models of the search performance of different base heuristics to select which to employ on each subsequent iteration of the search. To estimate the solution quality distribution resulting from repeated application of a strong heuristic within a stochastic search, we propose the use of models from extreme value theory (EVT). Our EVT-motivated approach is validated on the NP-Hard problem of resource-constrained project scheduling with time windows (RCPSP/max). Using VBSS as a base stochastic sampling algorithm, the integrated use of a set of project scheduling heuristics is shown to be competitive with the current best known heuristic algorithm for RCPSP/max and in some cases even improves upon best known solutions to difficult benchmark instances.", "url": "https://www.cicirello.org/publications/cicirello2004cp.html"},
	{"title": "Heuristic Selection for Stochastic Search Optimization: Modeling Solution Quality by Extreme Value Theory - Principles and Practice of Constraint Programming International Conference - 2004", "tags": "number feasible optimal kernel found method density function results sample optimization iterations average distributions estimation probability terms maximum activity start lower table samples ises standard gumbel less strategy generalized qualities improve naive instance constraints objective epanechnikov available resource estimating truncated perform called times performing activities combining generation tion requires values assumption compared rather total deviation five summary space exploration deviations proceedings similar intelligence domains defined expected theorem bandwidth guided estimates parameters enhance study precedence runtime scheme later computational random schedule significantly generally chosen appears degree iterative previous artificial first individual note serial thus sorted much least turn good technical applied choose reinforcement selecting noted underlying cumulative comparison condition choices taken fixed worst earliest equal refer applications double priority bounds computed methods estimator randomly statistics otherwise refers cesta makespan journal constrained performs rare franck additional bound approximately model computation report make backtracking observed temporal makes showed enhanced types bandit work overhead parameter arbitrary ultimately dorndorf slower combinatorial science procedures sets couple compute generated others originally respect smallest hard horizon referred smaller ultra conjecture distributed likelihood renewable tions local rithms costly future tics academic implemented already arms slot design direction specific chooses suggested tuned interested maintain randomization gomes takes validate call research leads overall generating factor estimated backtracks criteria infeasible experimental three kluwer greater depends simulated analog mellon direct initial small shows presented numerically timing behaves point necessarily general tive process amount original enough executing path compare prove robotics possible observe rithm averages duration form multiarmed large reached exponentially integer second publication limit combine motivated adjusted lists true problems tiple allows nature consistently conference variables mann exploiting iteratively pairs idea scheduled rule learning type randomize carnegie capacity minimum data threshold describing publishers restarts sequence minimization potentially scale prescribed eligible limited instead functions references allowed hall theorists understanding definitions spreading possess require indicators analysis planning constraining applies left monographs poorly independent successors generalised aggressive behavior identically address fourteenth aaai perimental days information institution nonregular implement hosking weighted making modeled list germany wallace provides quired fails enhancing effectiveness fectively improvement paramaters family taking college entire dummy slack write cooperation winner iterated modelled multistart attributed satisfaction produce jectured lpfi provably theses autonomous body successorsi employed optimize stances maintaining mended tool successive hybrid rarely sible university tional similarly ties extra define department possibility tied requirement despite analogy hypothesis formally exceeds identification annual optimizing press element recognize amplification telescope deterministic recommend straint tradeoff worth increases reported broader latest gorithm relations developing spektrum placing summation unable lowing view school actual boosting might msti engineering worse bounded decrease longer overlap derlying motivation concept nearly show negative central arrive customizing detects kaufmann lution risk reducing assignments required temperatures specifically provide explicitly multivariate sume minimizing berlin enables means explore efficient forbes levels simple section assumptions ples described repeatedly fixing workshop particular produced truncating niques fallback critical convergence part tend alone restarted structural truncation applying assignment deviate clear eighth posting recommended economics mean latter evolutionary simply equivalent evaluates ssol robot accepting preprocessing easy valuation deals solvers stems frank prototyping proven mins sparc tail procedure right chestnut practices calls difficulties phenomena essential dispatch added dows quantities questions rcpsp developed deterministically exploratory prior perturb needs commonly regarding timization take propagation relatively layered perhaps related rate kernels averaged class views portfolios length obviously trajectory trol extremal canadian construct thirteenth formly improved neumann easily conflicted likely made satisfied smoothed schemes field explored snapshot restarting longest focuses sequences minimized library member implementing ment machine main chapman proceeds morgan intensive dominating sort steps expand strengths focused present termed rephrased uncommon highly execution equation interesting control exactly intelligent online counts lsti mtsi composite negligible closely execute secondary node generalization highest pling boost minton except tardiness fact experiments long ficial secretary variety temperature examined preferred though decision appear increasing holds ratio joint rapid boltzmann frequency drawback uniformly variant interquartile unusual treated collection discrete rewards conflict needed mass annealing common interest throughout conflicts normal characteristics wide analagous step pute swarms reach reasoning seconds connection guide still efficiency baseline heidelberg sampler exist innovative drexel gardless knowing reformulated stated operators course regular computationally restart elements exists runs scarce mathematical exponential allen clearly temporally constants rsmi comparing monly proposed solving evoworkshops purpose advice nihi numerical computing operations asynchronous observations greatest smooth constructed satisfy advantage studied heuristically resources allowing balancing normally", "type": "pdf", "text": "Heuristic Selection for Stochastic Search Optimization: Modeling Solution Quality by Extreme Value Theory Vincent A. Cicirello and Stephen F. Smith In Principles and Practice of Constraint Programming - CP 2004: 10th International Conference, Proceedings, volume LNCS 3258 of Lecture Notes in Computer Science, pages 197-211. Springer-Verlag, September/October 2004. doi:10.1007/978-3-540-30201-8_17 Abstract The success of stochastic algorithms is often due to their ability to effectively amplify the performance of search heuristics. This is certainly the case with stochastic sampling algorithms such as heuristic-biased stochastic sampling (HBSS) and value-biased stochastic sampling (VBSS), wherein a heuristic is used to bias a stochastic policy for choosing among alternative branches in the search tree. One complication in getting the most out of algorithms like HBSS and VBSS in a given problem domain is the need to identify the most effective search heuristic. In many domains, the relative performance of various heuristics tends to vary across different problem instances and no single heuristic dominates. In such cases, the choice of any given heuristic will be limiting and it would be advantageous to gain the collective power of several heuristics. Toward this goal, this paper describes a framework for integrating multiple heuristics within a stochastic sampling search algorithm. In its essence, the framework uses online-generated statistical models of the search performance of different base heuristics to select which to employ on each subsequent iteration of the search. To estimate the solution quality distribution resulting from repeated application of a strong heuristic within a stochastic search, we propose the use of models from extreme value theory (EVT). Our EVT-motivated approach is validated on the NP-Hard problem of resource-constrained project scheduling with time windows (RCPSP/max). Using VBSS as a base stochastic sampling algorithm, the integrated use of a set of project scheduling heuristics is shown to be competitive with the current best known heuristic algorithm for RCPSP/max and in some cases even improves upon best known solutions to difficult benchmark instances.", "url": "https://www.cicirello.org/publications/CP2004.pdf"},
	{"title": "The Secure Wireless Agent Testbed - DARPA Defense Against Cyber Attacks on Mobile Ad Hoc Networks - 2004", "tags": "", "type": "html", "text": "The Secure Wireless Agent Testbed Vincent Cicirello, Moshe Kam, William Regli, Rafael Alonso, and Jeffrey Bloom In The DARPA Proposers Day Workshop: Defense Against Cyber Attacks on Mobile Ad Hoc Networks. February 2004. Invited Presentation. Abstract The Secure Wireless Agent Testbed (SWAT) is a unique facility developed at Drexel University in collaboration with Sarnoff Corporation to study integration, networking and information assurance for next-generation wireless mobile agent systems. It is the only known implemented system fully integrating: mobile agents, MANETs, and security. The authors believe that SWAT is the largest known multi-agent system living on a MANET (802.11b wireless network with ad hoc routing), consisting of dozens of mobile hosts (PDAs, laptops) and thousands of static and mobile software agents. Novel mechanisms have been developed for SWAT integrating autonomous agent technologies with public-key and symmetric key encryption to support secure communication, at multiple OSI layers, among groups of hosts and agents. SWAT Security is monitored by agents that manage keys, assess network traffic patterns and analyze host behaviors. Agents can use machine learning to develop profiles for nominal agent, hardware platform and network states. Given learned profiles, detection agents identify specific problems in SWAT, including over-runs/capture, and malicious insiders. Other agents monitor the health of the network and the devices in the network, looking for network attacks and security breaches. Using this framework, agents can revoke access rights for suspicious hosts or agents and adaptively re-route traffic at the network layer to improve the information integrity of the overall system. Agents also provide the implementation framework for decentralized user applications, including those for authentication, collaboration, messaging, and remote sensor monitoring.", "url": "https://www.cicirello.org/publications/cicirello2004darpa.html"},
	{"title": "Ecology Based Decentralized Agent Management System - Formal Approaches to Agent-Based Systems - 2004", "tags": "", "type": "html", "text": "Ecology Based Decentralized Agent Management System Maxim D. Peysakhov, Vincent A. Cicirello, and William C. Regli In Formal Approaches to Agent-Based Systems: Third International Workshop, FAABS 2004, Revised Selected Papers, volume LNCS 3228 of Lecture Notes in Computer Science, pages 1-11. Springer-Verlag, April 2004. doi:10.1007/978-3-540-30960-4_1 Abstract The problem of maintaining a desired number of mobile agents on a network is not trivial, especially if we want a completely decentralized solution. Decentralized control makes a system more robust and less susceptible to partial failures. The problem is exacerbated on wireless ad hoc networks where host mobility can result in significant changes in the network size and topology. In this paper we propose an ecology-inspired approach to the management of the number of agents. The approach associates agents with living organisms and tasks with food. Agents procreate or die based on the abundance of uncompleted tasks (food). We performed a series of experiments investigating properties of such systems and analyzed their stability under various conditions. We concluded that the ecology based metaphor can be successfully applied to the management of agent populations on wireless ad hoc networks.", "url": "https://www.cicirello.org/publications/cicirello2004faabs.html"},
	{"title": "Ecology Based Decentralized Agent Management System - Formal Approaches to Agent-Based Systems - 2004", "tags": "food hosts time deviation standard behavior artificial model state single figure link actual extinction task dynamic target emergent ecosystems conference consumption probability distribution section threshold rate reproducing proceedings associated july analysis planning probabilistic possible production plotted experiment ecological large dependency distributed resulting several solution oscillations level another current genetic evolve joint allow speed every ecosystem work first individual sustain fuzzy plant achieve adaptive programming explained evolution changing order period species future autonomous trial mode different real herbivore synthetic collect since consumers plots spawn quality except global producers repeated research iterations higher life study consume initial data create proposed techniques amount enough increase mean evolutionary complex delay targeted close conrad trials information accumulated predefined computational area exhaust homogeneous adjust however technical back plot averaged recorded setup avoid reproduction flow similar researchers intelligence algorithms respectively known linear change machine complete constant donovan second points high function communication times kraus recover automatic exactly stable equilibrium supply observed bank sizes stanford disturbance fact increases takes dynamical numbers individuals secure results last discrete lerman improving migrate changed show graphs normal detailed typical migration survivability software experimental decide type simulated dynamically provide theory ways mathematical small shut centralized shows shown speeds described demonstrates thinner managing game line recovery point interactions computing parameter iteration value interaction methodology temporary habitat optimal references completing equations poor visual persistent grow devices require inspired community easy extensions submitted parallelize evaluating looking lating extendable explorations sanjeev average scheme populating utilizing uncertainty example capability philadelphia colonization poses resilience identically foot hand metabolic completion enabling aaai decreased namely initializing eating constrained police fast seth answer decreases complicated qualities maximum emerge novel macroscopic represent beauty promise completeness developed reproduce gary amounts reinitializing needs overburden test european modeled andrew felix take evan therefore rather parallelism provided additional exhibits duration related disruptive provides confirms olson lines live multiple perform oscillates improvement existing tween service significantly elaborate slightly practice placed simulation focus american division lnai context majority animals shape testing lower robustness traveling underlying peaks distributions survivable thresholds analyze biological fundamentals brought circuit curve drastic netic phenomenon cell cycle shutting local summer segments iments world conjunction composed yield hopefully december decisions ability sents question plained cillates impractical report logic teenth possibilities feel upon exploitation fine morgan implemented testbed expressed unplanned tolerance difficult linearly undesirable unit expand improve prediction principles problems consumed university reaching investigate units cihan lightweight elapsed running define chose predict bust department physical consumer direction highly allows nadya overshoots simulator nature rates interesting unnecessary despite encyclopedia application moshe interested revolve exceeds thought maintain uncertain defines dynamics extremely engines hinchey formulation trends defined events models merging ered closely tuning nicholas redwood consistently animal completes styles starting discovered automatically cooperate association colors eighteenth taken relationship servicing bandwidth black denotes services many broker ideally fitted closer confirm connected appear extensive gustave increasing probabilistically describe fourth implies ratio forced approximate rapid developing rules philip sciences unable horizontal view awareness segment military cambridge attractive adapt look decrease assurance islanding achieving failure solve forces overall fields experimented wired memory figures erties classes motivation impossible ally collects analogous types allocation apply emaa start kaufmann ulated mosquito equal chronous initially ones location varela applications modeling chains collected react whole jonathan required multi statically terms optimization enable connection simulate probabilities grows efficiency tion depends heidelberg innovative drexel examples force bennett hump internal extension computed localized range tools causes explains event berlin replication simplest means reliance lead evolving self prone certain compact existence simple growing eters major prescribe avoiding potential mechanisms lager manually exploration resource like behaviors workshop adapting hector populated migrates done produced effect producer rizki part interact recovers general security studies designed process move built alternative assad resources fault performance swarm variance variable independently determining multiagent", "type": "pdf", "text": "Ecology Based Decentralized Agent Management System Maxim D. Peysakhov, Vincent A. Cicirello, and William C. Regli In Formal Approaches to Agent-Based Systems: Third International Workshop, FAABS 2004, Revised Selected Papers, volume LNCS 3228 of Lecture Notes in Computer Science, pages 1-11. Springer-Verlag, April 2004. doi:10.1007/978-3-540-30960-4_1 Abstract The problem of maintaining a desired number of mobile agents on a network is not trivial, especially if we want a completely decentralized solution. Decentralized control makes a system more robust and less susceptible to partial failures. The problem is exacerbated on wireless ad hoc networks where host mobility can result in significant changes in the network size and topology. In this paper we propose an ecology-inspired approach to the management of the number of agents. The approach associates agents with living organisms and tasks with food. Agents procreate or die based on the abundance of uncompleted tasks (food). We performed a series of experiments investigating properties of such systems and analyzed their stability under various conditions. We concluded that the ecology based metaphor can be successfully applied to the management of agent populations on wireless ad hoc networks.", "url": "https://www.cicirello.org/publications/FAABS2004.pdf"},
	{"title": "Demonstration of the Secure Wireless Agent Testbed (SWAT) - ICAPS Demo - 2004", "tags": "", "type": "html", "text": "Demonstration of the Secure Wireless Agent Testbed (SWAT) Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren In The 14th International Conference on Automated Planning and Scheduling. June 2004. Abstract We will demonstrate the Secure Wireless Agent Testbed (SWAT), a unique facility developed at Drexel University to study integration, networking and information assurance for next-generation wireless mobile agent systems. SWAT is an implemented system that fully integrates: (1) mobile agents, (2) wireless ad hoc multi-hop networks, and (3) security. The demonstration will show the functionality of a number of decentralized agent-based applications, including applications for authentication, collaboration, messaging, and remote sensor monitoring. The demonstration will take place on a live mobile ad hoc network consisting of approximately a dozen nodes (PDAs, tablet PCs, and laptops) and hundreds of mobile software agents. ICAPS 2004 Demo.", "url": "https://www.cicirello.org/publications/cicirello2004icaps.html"},
	{"title": "Demonstration of the Secure Wireless Agent Testbed (SWAT) - ICAPS Demo - 2004", "tags": "security agents group routing communication hosts revocation cards proceedings work framework protocol users support technical staging tion tools computer architecture host traffic aironet user august components communications audio possible series cougaar leave need adapt cryptography engineering linux practical environment artificial reasoning react join distributed provide ability demonstrated enables report routes different whiteboard department limited groups currently application architectures authenticated references empirical scenarios laptop burnheimer objective integrity dynamics emergencies suffer nicate audience hopkins agreement devices naik july require portable version porate route certificates science itineraries licious extendable nication strong functional access sultanik homeland urbano networks accident extended eighteenth formance systems ference civil supports cisco demonstrating compared enabling tsang aaai makes nents familiar chestnut many cicirello connected controlled shaffer police fast metric amir cally standard medical notes joint available emergency developing responders ieee features dynamic generate area static suspicious list topologies channels laboratories overall leaving secured away sages proximately revoke rity proactive video malfettone accomplish impose street provides laptops identify wide center permission technology tracks manage modify existing management infrastructure municate personnel avoid college cisions advanced tested whole packets adaptively partment reliable pdas identified enable review usenix order gies generation similar natural method collaborative peysakhov electrical kopena intel intelligence innovative dorsey analyze integration john algorithms plication mroczkowski direct range tions layer streaming modalities ways rights power established regli pcmcia forward display assess exists certain tendable addresses annotations main manner radio mode shows members employs combination usbeck configured resource created ipaq workshop shall particular garcia sent familiarizing strating transfer improve puting mented nications lected deployed tors membership integrated lockheed aware validated public similarly make allows routed enforced wielding sports anderson implementation february spread performance encrypted", "type": "pdf", "text": "Demonstration of the Secure Wireless Agent Testbed (SWAT) Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren In The 14th International Conference on Automated Planning and Scheduling. June 2004. Abstract We will demonstrate the Secure Wireless Agent Testbed (SWAT), a unique facility developed at Drexel University to study integration, networking and information assurance for next-generation wireless mobile agent systems. SWAT is an implemented system that fully integrates: (1) mobile agents, (2) wireless ad hoc multi-hop networks, and (3) security. The demonstration will show the functionality of a number of decentralized agent-based applications, including applications for authentication, collaboration, messaging, and remote sensor monitoring. The demonstration will take place on a live mobile ad hoc network consisting of approximately a dozen nodes (PDAs, tablet PCs, and laptops) and hundreds of mobile software agents. ICAPS 2004 Demo.", "url": "https://www.cicirello.org/publications/andersong_swat.pdf"},
	{"title": "Designing Dependable Agent Systems for Mobile Wireless Networks - IEEE Intelligent Systems - 2004", "tags": "", "type": "html", "text": "Designing Dependable Agent Systems for Mobile Wireless Networks Vincent A. Cicirello, Max Peysakhov, Gustave Anderson, Gaurav Naik, Kenneth Tsang, William C. Regli, and Moshe Kam IEEE Intelligent Systems, 19(5): 39-45, September/October 2004. doi:10.1109/MIS.2004.41 Special Issue on Dependable Agent Systems. Abstract A mobile ad hoc network (MANET) is a wireless network of mobile devices-such as PDAs, laptops, cell phones, and other lightweight, easily transportable computing devices-in which each node can act as a router for network traffic rather than relying on fixed networking infrastructure. As mobile computing becomes ubiquitous, MANETS becomes increasingly important. As a design paradigm, multiagent systems (MASs) can help facilitate and coordinate ad hoc-scenarios that might include security personnel, rescue workers, police officers, firefighters, and paramedics. On this network, mobile agents perform critical functions that include delivering messages, monitoring resource usage on constrained mobile devices, assessing network traffic patterns, analyzing host behaviors, and revoking access rights for suspicious hosts and agents. Agents can effectively operate in such environments if they are environment aware - if they can sense and reason about their complex and dynamic environments. Altogether, agents living on a MANET must be network, information, and performance aware. This article fleshes out how we apply this approach to populations of mobile agents on a live MANET.", "url": "https://www.cicirello.org/publications/cicirello2004ieeeis.html"},
	{"title": "Designing Dependable Agent Systems for Mobile Wireless Networks - IEEE Intelligent Systems - 2004", "tags": "service drexel data time system computer information number figure research food compromised behavior university services population topology need state bandwidth engineering provide electrical require equilibrium chestnut contact management instance problem department integrity another availability layer interests enough large level code operating type inspired points demand results particular student control assurance detect reasoning devices illustrates distributed traveling function maintain inherent stability malicious required tion route communications possible perhaps likely member change health task awareness types ecosystem react work instances locations thus size users visited college changing even hash autonomous developing view migrate show hardware requires levels centralized shows workshop amount user signal rate showing suspected server deliver known ability wandering several solution problems spawn dynamics benefit components current changes emaa software exist timeliness located first variable challenge building setting stop ture example aaai intrusion area predetermined check provided behavioral lines detected called experiment period peysakhov analyze integrating tions segments ance framework future imposed taining rating associate members implemented less maintaining collect define interested exceeds uncertain complexity increased desired taken actual adapt memory ecology central ence start infrastructure risk delivers quickly three plan dynamically tampered shut constantly percentage group produced formal puting managing point candidate visit completing preventing extendable returning naive performs later ronment possibly needs ecologically uncompromised additional bound length avoid advanced tracking lower traditional hashes interval table report complete constant different intensive wanders professor elapsed execution recover nature upper promised global workers decision many single undergraduate joint migrating discrete support spawns every normal consumption technology artificial location itinerary lost controlling still spectrum internal collective event reward suspect maxim comparing challenges lockheed servers value motion limited resources balancing optimal references numerous scenarios equations parunak warrant successfully solid proportional packet analysis planning left science much accessible authenticate measurement result plexity spanning policy address tsang posture logical surer severe accumulated standard dyke generates moved good making list saging volume fusion child regional production applied obsolete society behavi flows provides selecting salesperson moves handling taking education overburdening sate crosses adaptively mccormick docks centers flow cooperation sary ecological mation quinn lentini lncs shutting local costly product particularly ceases preceding overabundance measuring upon copies optimize earlier quite links ernment ized already conducted real ulation traverse cloned neering improve eral mobilize amplifies sensor nications units lightweight effective intended working cussed automatic application stable respond strategy formerly formally lenging johnson defines worked optimizing naik lizes unnecessarily processor actions disturbance ware battery moment increases diversity scenario takes ness weightings summarized nest producers refinements outweighed metric describe strength source incorporate dying starts offers attractive last insufficient significant reroute overall scientist effort disappear disaster minimal denying steady early enhance sensing traverses center pair target manage urban timely initially pratt modeling nomous experimental collected issues monitored multi statically emigration comprising deemed mentation mellon reset excessive ants study methods direct consume planned receiving anomalous architecture means explore efficient rudimentary anytime kill adversary prof performed fellow tampering randomly certain tively cycles protocol feasible totally connections resist important disciplinary produces creates redundancies colony part inherently tive authentication tems process increase determining encapsulate evolutionary equivalent tralized executing offer transmitting examining limitations knowledge impact active oping evaluating assigned average deal plete intractable tery originating revocation extinction philadelphia groundwork replicate acknowledgments cicirello complicated inefficiencies decrementing hierarchical computational disadvantage sigma patterns quorum exhaust take ficult bility waiting importance maryland related just human digital trol tracks existing nodes setup significantly placed fulfill dropped attempt thanks action tasks iles researchers director adversely compromises hashed removing biological works serves amplify robert library composed predicting modifications ment computation machine equals efficiently hops return mislead serve high falls encounters continuous testbed expressed directly alter steps strengths lists helsinger mented since consumed pursues dozens overcompensating productivity consumers make consumer allocated highly declines processes anderson equation deviation ecosystems threat leptothorax inform vary cation exert trends closely decentralized thereby itineraries except receives starting fact overcome uating seen pieces excess dering relationship middle necessary makes heuristic lighter denotes thorough face associated operation coordinated starving excellence multihop available rapid inside coordination horizontal sever commands studying degree collection channels failure suboptimal rewards higher changed interoperation needed mass revoke assistance speed widt throughout collects coordinating characteristics cases previous storing functioning superimposed fringe desirable stranding terms safety efficiency natural method linking utilization push fail mate indoor ating uted distribution tools specified carnegie fall course initialized reduces copy biologists outlying erary computationally regli intrusions lead puts massive cease assess dashed perfect existence fewer threshold routes distributing tasked avoiding mechanisms ciated adapting sequentially published core techniques safe intruders send potentially amobile line link narios seemingly public asynchronous taxing biologically track interagent cost advantage trades command ineffective currently", "type": "pdf", "text": "Designing Dependable Agent Systems for Mobile Wireless Networks Vincent A. Cicirello, Max Peysakhov, Gustave Anderson, Gaurav Naik, Kenneth Tsang, William C. Regli, and Moshe Kam IEEE Intelligent Systems, 19(5): 39-45, September/October 2004. doi:10.1109/MIS.2004.41 Special Issue on Dependable Agent Systems. Abstract A mobile ad hoc network (MANET) is a wireless network of mobile devices-such as PDAs, laptops, cell phones, and other lightweight, easily transportable computing devices-in which each node can act as a router for network traffic rather than relying on fixed networking infrastructure. As mobile computing becomes ubiquitous, MANETS becomes increasingly important. As a design paradigm, multiagent systems (MASs) can help facilitate and coordinate ad hoc-scenarios that might include security personnel, rescue workers, police officers, firefighters, and paramedics. On this network, mobile agents perform critical functions that include delivering messages, monitoring resource usage on constrained mobile devices, assessing network traffic patterns, analyzing host behaviors, and revoking access rights for suspicious hosts and agents. Agents can effectively operate in such environments if they are environment aware - if they can sense and reason about their complex and dynamic environments. Altogether, agents living on a MANET must be network, information, and performance aware. This article fleshes out how we apply this approach to populations of mobile agents on a live MANET.", "url": "https://www.cicirello.org/publications/IEEE-IS-2004.pdf"},
	{"title": "Wasp-like Agents for Distributed Factory Coordination - Autonomous Agents and Multi-Agent Systems - 2004", "tags": "", "type": "html", "text": "Wasp-like Agents for Distributed Factory Coordination Vincent A. Cicirello and Stephen F. Smith Autonomous Agents and Multi-Agent Systems, 8(3): 237-266, May 2004. doi:10.1023/B:AGNT.0000018807.12771.60 Abstract Agent-based approaches to manufacturing scheduling and control have gained increasing attention in recent years. Such approaches are attractive because they offer increased robustness against the unpredictability of factory operations. But the specification of local coordination policies that give rise to efficient global performance and effectively adapt to changing circumstances remains an interesting challenge. In this paper, we present a new approach to this coordination problem, drawing on various aspects of a computational model of how wasp colonies coordinate individual activities and allocate tasks to meet the collective needs of the nest. We focus specifically on the problem of configuring parallel multi-purpose machines in a factory to best satisfy product demands over time. Wasp-like computational agents that we call routing wasps act as overall machine proxies. These agents use a model of wasp task allocation behavior, coupled with a model of wasp dominance hierarchy formation, to determine which new jobs should be accepted into the machine’s queue. If you view our system from a market-oriented perspective, the policies that the routing wasps independently adapt for their respective machines can be likened to policies for deciding when to bid and when not to bid for arriving jobs. We benchmark the performance of our system on the real-world problem of assigning trucks to paint booths in a simulated vehicle paintshop. The objective of this problem is to minimize the number of paint color changes accrued by the system, assuming no a priori knowledge of the color sequence or color distribution of trucks arriving in the system. We demonstrate that our system outperforms the bidding mechanism originally implemented for the problem as well as another related adaptive bidding mechanism.", "url": "https://www.cicirello.org/publications/cicirello2004jaamas.html"},
	{"title": "Wasp-like Agents for Distributed Factory Coordination - Autonomous Agents and Multi-Agent Systems - 2004", "tags": "response time type booth queue thresholds campos truck average behavior threshold setups setup probability cycle problems section morley length times simulation first proceedings parameters dynamic rule colors dynamically systems figure specialized process stimulus assigned high adaptation terms plots results minimizing colony compared parameter three values assignment specialize international requiring less demand simple change social associated queues optimization inspired throughput bids original four painting higher value even shop requires workshop rate ability limit conference artificial force idle require analysis much policy algorithms quite mixes significant arrive required case unexpected part tournament table second single every space cost currently result real intervals tuned respond genetic interval rules solutions update flush work arrival paper half empty stochastic constraint insect rates minute difference research paintshop show equal randomly hmax dispatch take random large selected determination decentralized experiments appear adapts superior competing runs note confidence wasted size production perform underlying effective similarly define formulation last initial overflow shown described general amount evolutionary robotics rather additional perhaps hmin approximately assign made different processing though many agent uniformly types natural resources shortest independent example dorigo finite technical choose reconfigure called period manner optimize comparison floor equilibrium events describes thing demanded ieee worst updated updates applications quickly decide savings mellon computer performed presented interactions enough third deal assembly term maximum just tables lower computation report true highly allows vary highest tardiness examine long decision allow previous carnegie capacity fewer mechanisms optimal interacting setting cooperative intuitively discuss couple notes need breakdown previously multiple improvement taking smaller flow order specify handle intelligence specialization robust discussed framework upon unspecialized specializes design lengths application tuning hierarchies found taken takes actual longer ends analogous experimental greater provide bonabeau primary centralized zone otherwise market tend build interaction determining flushes compare choosing xing search chaotic compete developed later adjust waiting load significantly division nouyan sense resulting proportion solution illustrate plus chosen since appears physical make nature closely labor seen current variables face seven project loaded discrete motors definition step location specified event lead clearly resource purpose configuration line round sufficiently leading allowed poor near dealing virtually polistes adapted version planning arrives variations aspect decreased representing faced information good serious weighted others chines european respect applied behavioral beaumariage environment years algorithm similar winner driver foraging tions encourage decisions produce future environments updating earlier already applicable unit seedings units department stochastically performing specific interested uncertain randomization state defined deterministic alternatively incorporate sciences worse measure stronger incorporating short promising caro ants computed ways breakdowns shows potential group configured particular important limitation point necessarily designed requirements encounter contests organizations latter simply equivalent suffer complex limitations preference population domain looking ordering characteristic communications charge possible drastically ford static relatively averages ignore attractors material practice congress delayed attempt distributions accrue world known likewise exploring mail serve integer kempf directly incoming difficult ideas sort survey total decreasing exactly intelligent processed constraints theraulaz exhibit trends released breaking accept activity lecture strategies simulations transportation coordinated adjusting details allocating figures sequential learning life interest lies performances coordinating characteristics slight cases desirable attempts method versions sensitivity recall place demonstrated unallocated like frequent interact computing operations monetary groups balancing illustrating exception imizing overflowing references govern numerous discourage slower building morton awaiting understanding terrain wins thus fairly proportional community overload capitalize extensions left science institute detail poorly mulation connotation primer infinite roll turn hybridized uncertainty subsequently formance heuristics failures awarded aaai signify metalevel schoonderwoerd decreases loosely fifth standard incorporates communicate evidence achieves official rearrange amounts suffered signifies assigns sarily reassessment protocols area rome making outperformed therefore young smallest provided roles behave flows anticipation hard reinforcement multiply effectiveness capabilities lems noted tween achieved handling ments gaussian slightly illustrates irrelevant robustly configurations entire variation turns metaheuristic ingly odds magnitudes proceed understand adjusts traveling reinforced cooperating illustrated likelihood million converge strongly authors engaged lncs creators save drastic stigmergy yield noise manufactured synthesis linear particularly question spirit opportunities regard kirchner possibilities scaled equally prevents simplifies versity identical academic antnet differs domains maintaining condition improve stigmergetic invalidated nications unexpectedly university contracts simpler extra chose working possibility direction decides unnecessary requirement formulated castelfranchi prioritize analogy suggested stable strategy formally remainder formerly reversed comprehend accurate maintain ship cialized supply maximize decided oxford eventual differently lesser myopically builds represented dance models separately completed brooks specifying slow actions sophisticated dominates frequently document dollars availability indicative cohesive networks tradeoff anyway worth increases defense reported popular gradient summarized team nest automated describe resulted individuals someplace school offers boosting might primitively equates bounded whatever improving dominated leads fixed leaving correlated away submit nearly concept description tribution redundant factor emitting appropriately center experimentally detailed refer typical initially artficial modeling criteria zation kluwer readjusting probabilities plan struggle utilized grows waits depends comprising lowest utilizes standpoint completely formulate formation alien labour emergent occasionally protect merely means desire superfluous consistent great organization forbes organized summarize certain statistics small eusocial constantly employs robots combination minutes done solely refers rabelo salesman ticular trickier convergence globally determines inspiration thirteen principal lation encapsulated goldsmith move alternative clear eighth heavily increase economics mean fying frequencies bidders forsyth projects flushed advance retrieval rank assumption examining diverse addition soft gaining sure grow devised july personal nificantly route plant dealt partnering competitive formed relative strong utilizing unwilling sixth popularity national completion business alternate acknowledgments chestnut noticeable constrained urations stage naive performs london nance observe trail prior ronment programming possibly ignored regarding wiley beneficial helps however optimized papers santa symposium plot terminology optimizes company class views living form comprehensive contracting expert triggered advanced dominulus posable nonlinear improved appeared advances easily animals zwaan reduce likely researchers sensitive served john brittle evaluate status painted sequences products stream periods stand elimination knows lundh analogies indirectly positive defining aaria generally emerges complete instance disinterest downgrade coupling benchmarks expressed communication combine elsevier motivated contest months dominating establishment steps brood coat focused principles comprised differentiation tenth paradigm mixed storage switch braslaw informs execution processes specializations cross tendencies deviation rapidly regulation sensory online sitting closest increasingly readily insensitive walsh sequencing observed extremely ongoing meaning drawn societies publishing schelberg benefit porate pointed requested animal receives interpreted discovered ernst overcome fundamental eighteenth", "type": "pdf", "text": "Wasp-like Agents for Distributed Factory Coordination Vincent A. Cicirello and Stephen F. Smith Autonomous Agents and Multi-Agent Systems, 8(3): 237-266, May 2004. doi:10.1023/B:AGNT.0000018807.12771.60 Abstract Agent-based approaches to manufacturing scheduling and control have gained increasing attention in recent years. Such approaches are attractive because they offer increased robustness against the unpredictability of factory operations. But the specification of local coordination policies that give rise to efficient global performance and effectively adapt to changing circumstances remains an interesting challenge. In this paper, we present a new approach to this coordination problem, drawing on various aspects of a computational model of how wasp colonies coordinate individual activities and allocate tasks to meet the collective needs of the nest. We focus specifically on the problem of configuring parallel multi-purpose machines in a factory to best satisfy product demands over time. Wasp-like computational agents that we call routing wasps act as overall machine proxies. These agents use a model of wasp task allocation behavior, coupled with a model of wasp dominance hierarchy formation, to determine which new jobs should be accepted into the machine’s queue. If you view our system from a market-oriented perspective, the policies that the routing wasps independently adapt for their respective machines can be likened to policies for deciding when to bid and when not to bid for arriving jobs. We benchmark the performance of our system on the real-world problem of assigning trucks to paint booths in a simulated vehicle paintshop. The objective of this problem is to minimize the number of paint color changes accrued by the system, assuming no a priori knowledge of the color sequence or color distribution of trucks arriving in the system. We demonstrate that our system outperforms the bidding mechanism originally implemented for the problem as well as another related adaptive bidding mechanism.", "url": "https://www.cicirello.org/publications/jaamas-8-3.pdf"},
	{"title": "Engineering Multi-Agent Systems - IEEE Symposium on Multi-Agent Security and Survivability - 2004", "tags": "", "type": "html", "text": "Engineering Multi-Agent Systems Donovan Artz, Vincent A. Cicirello, William Regli, and Moshe Kam In Proceedings of the 2004 IEEE First Symposium on Multi-Agent Security and Survivability, pages 100-107. August 2004. doi:10.1109/MASSUR.2004.1368423 Abstract Security of an agent system is often limited, relying on basic cryptographic techniques without consideration of issues such as key maintenance, forming and communicating in secure groups, or interlayer security. From a security engineering perspective, multi-agent systems introduce new channels and possibly layers, resulting in additional security concerns. A comprehensive security engineering perspective - studying the information flow of the multi-layered system, identifying, analyzing and addressing multi-level security threats - is rarely taken. This paper presents a security engineering process for multi-agent systems - motivating the need for comprehensive security engineering and showing how to proceed with the process within an agent system. One of the largest obstacles in security engineering is understanding how to decompose a system into the parts that require security. This paper provides a decomposition for agent systems that can be directly applied to the security engineering process. Examples are given that detail the application of the presented security engineering process to: 1) a FIPA-compliant agent system; and 2) peer-to-peer content lookup. The most important contribution of this paper, is proposing a formal approach to addressing security within an agent system, where there exist unique and application-specific threats that must be addressed.", "url": "https://www.cicirello.org/publications/cicirello2004mass.html"},
	{"title": "Engineering Multi-Agent Systems - IEEE Symposium on Multi-Agent Security and Survivability - 2004", "tags": "agents principals data mobile possible hosts service threat asset host assets mechanisms policy several computer determine implementation channel mechanism rity risk tion layer part principal step autonomous services described general actor selected level access software cost address technical directory order outcome engineer section group intermediate form evaluate international conference many dependent work network lookup thus example layers mation understand distributed transport curity another research time architecture disclosure authentication model trusted fipa actors denoted available common every create much queries cryptography external trust message entity implemented policies represents requires protocol workshop interruption profile communications known ability complete instance highly probing internet securing tools depth enforce computing outcomes ceedings least communicate good pose multiple realized number unintended mandatory unit aglets units specific state nificant distribute significant restricted hardware valuable methods direct means tems rest evaluation active needs final counter existing enforcing focuses report true intelligent empirical single details needed types location enable exists addressed currently sufficiently analysis independent scribed targeted minimize sets notes mitre prevent effectiveness identify coabs protection tuple accommodate impractical employed members tool neering networked effective tional precludes respond formally integrity demand mobility found limits vice amples gineering describe privileges realize offers sues develop developers pals case limiting provide formation categories travel potential request designed disclosed enough listed wireless determining multiagent engineers profiling evaluating journal term chestnut march freely scalable language developed attacks regarding wiley bility human tracks practice placed majority made john minimized december places serve high different communication undesirable code allows determination facilitates decentralized anisms experiments eliminate current lecture operating necessary denotes open modification successful figure april terms proach method focusing fail place countermeasure dress addresses chitecture reference sent core untrusted purpose spend groups references building definitions moving sanctuary devices standards planning metrics mined ture role subsequently result decentralised derstanding rescind ordered ible aaai intrusion characterization standard acceptable november evidence moved specifications securitywithin assessment leave enumeration european obtaining volume tails guage authority therefore troduce provided choose issd medium hard ensuring transportable fectively frastructure goguen special tween realizes pendable enumerating college illustrates irrelevant focus experiment struck protecting period foundations compose flawed even lncs tributed functionality nels prematurely native directional yield product question nism picture mination framework hostile upon points discusses quence verification read applicable less maintaining incurs eral typing october facilitate initiated locate university responds intended working prised possibility render radical abstraction performing harness strates thought accurate discussion nical johnson supply defines concern oversight decaf represented models cache ered refine recognize itive eliminates recipients proofs tify frequently availability networks tradeoff worth nection encryption attack demonstrating prevented cess entirely disclose describes standing classic nected strength developing enact unable tect registers results octave might ultimate employing difficulty concept aspects impossible description vides malicious minimal street cember construed ensures ical detailed recipient typical applications yorktown criteria quickly taxonomy three multi identified greater plan grows depends dependencies coast completely roadmap seldom protect minimizing enables cate chain termined january foster choice certain sider door experience tity centralized pendencies employs runtime particular effects tocol refers perceived outside limitation veloped critical determines values reveals point tive causing september parallel traced cluding applying move requirements amount original fischmeister mean fulfilling front simply customer swarup sponds path suffer evaluated neglect knowledge addition opportunity july personal easy unintentionally domain relative compare ordering plete proven revocation capability national mine tain qian answer stage sansom maximum aging essential added jansen observe correctly adding commonly patterns cryption take vertently transfered locust identifying deep virtual rather requesting countermeasures back mistakes papers ploy related passes rate ignore passed tonomous just kahn considerations management sulting authorization balance four advances context guidelines tasks exceeded issue researchers transactions bell plethora pends dismisses semantic eight composed aissd ditional implementations sents implementing portant rescinding generally computation entities bidirectional inconsequential rectional networking heterogeneous second split solution morgan sufficient publication limit unordered ideal illustrate ideas comprises task transit dition alyzing mental uncommon tecture repeat make keyboard processes initiative anderson cross exactly huhns walnut freeing sander compliant clopedia stance mediately bank stacles ther released dent unmodified plemented requested concepts consistently nication functional fundamental repudiation referring actively dering holes though decision analyzed store controlled oped increasing fourth coordinated protects separate rules itinerant dynamic adapts wong query paths support higher unreadable necessitates rule plications nization previous apply disclosing money lattice initiating passing spective employ sist cuses frameworks irretrievably type loss problem review dresses guide still goal benchmark forwarded drexel readings tography force stated insignificant confidentiality requests distribution specified feature identity verify event regular computationally simplest cations brain help ation located connecting minimum mathematical tendable reveal existence declassified drake readable demonstrates resource like comparing sive venting efforts person ground cies lected note instances platform aware inclusion retsina public value motion studied resources arbitrary expensive performance prepares verifies category", "type": "pdf", "text": "Engineering Multi-Agent Systems Donovan Artz, Vincent A. Cicirello, William Regli, and Moshe Kam In Proceedings of the 2004 IEEE First Symposium on Multi-Agent Security and Survivability, pages 100-107. August 2004. doi:10.1109/MASSUR.2004.1368423 Abstract Security of an agent system is often limited, relying on basic cryptographic techniques without consideration of issues such as key maintenance, forming and communicating in secure groups, or interlayer security. From a security engineering perspective, multi-agent systems introduce new channels and possibly layers, resulting in additional security concerns. A comprehensive security engineering perspective - studying the information flow of the multi-layered system, identifying, analyzing and addressing multi-level security threats - is rarely taken. This paper presents a security engineering process for multi-agent systems - motivating the need for comprehensive security engineering and showing how to proceed with the process within an agent system. One of the largest obstacles in security engineering is understanding how to decompose a system into the parts that require security. This paper provides a decomposition for agent systems that can be directly applied to the security engineering process. Examples are given that detail the application of the presented security engineering process to: 1) a FIPA-compliant agent system; and 2) peer-to-peer content lookup. The most important contribution of this paper, is proposing a formal approach to addressing security within an agent system, where there exist unique and application-specific threats that must be addressed.", "url": "https://www.cicirello.org/publications/MASS2004.pdf"},
	{"title": "The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection - AAAI - 2005", "tags": "", "type": "html", "text": "The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection Vincent A. Cicirello and Stephen F. Smith In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 3, pages 1355-1361. AAAI Press, July 2005. Winner of the AAAI 2005 Outstanding Paper Award. Abstract The multiarmed bandit is often used as an analogy for the tradeoff between exploration and exploitation in search problems. The classic problem involves allocating trials to the arms of a multiarmed slot machine to maximize the expected sum of rewards. We pose a new variation of the multiarmed bandit, the Max K-Armed Bandit, in which trials must be allocated among the arms to maximize the expected best single sample reward of the series of trials. Motivation for the Max K-Armed Bandit is the allocation of restarts among a set of multistart stochastic search algorithms. We present an analysis of this Max K-Armed Bandit showing under certain assumptions that the optimal strategy allocates trials to the observed best arm at a rate increasing double exponentially relative to the other arms. This motivates an exploration strategy that follows a Boltzmann distribution with an exponentially decaying temperature parameter. We compare this exploration policy to policies that allocate trials to the observed best arm at rates faster (and slower) than double exponentially. The results confirm, for two scheduling domains, that the double exponential increase in the rate of allocations to the observed best heuristic outperforms the other approaches.", "url": "https://www.cicirello.org/publications/cicirello2005aaai.html"},
	{"title": "The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection - AAAI - 2005", "tags": "samples number value second loss case gumbel time weighted algorithm solution sampling worst assumption known drawn project heuristics extreme solutions probability parameter form underlying total constraints theorem tardiness activity holland goal mean biased journal maximum served function deviation normal resource independent result jobs procedure length large distributions table dynasearch times define make vbss leads start location three initial feasible note scale process grow average strong minimize constrained standard extremal schedule taking identical different domains since determine activities objective generalized temporal current expression simplification showed bias show learning types terms greater payoff ples sequence perceived solving part enough performance variance path combinatorial statistical tmax robotics variations barto identically completion tells dispatch good need smallest choose duration reinforcement sampled perform special duedate select configurations tially made distributed oddi siam algorithms fristedt matter local generally pyle equals constraint main integer trial optimize sufficient maximizing ploration university arpd effective ration convolution families quality highest actions dominates found taken genetic necessary decision congram many closed sion pairs expressions iterations fixed necessitates needed scheduled definition creasing certainty earliest equal unbiased modeling experimental type optimization proof grows tion depends benchmark schwindt first clearly space shows shown weibull seems largest instances candidate computing eligible original alternative equivalent untested ations references sufficiently bution allowed ssol slower deviations complex definitions knowledge shortest inal namically thus fined acknowledgements require version apparent recalling left science domain institute competitive makespan successors wspti necessitating choosing mins procedures term empirically behavior mization close density sets tail representing truncated faced answer decreases combined exploit rameter achieves observe exploratory prior rial rare pected others making originally lutions respect wiley take outperformed wjtj sults optimized averages aggregation quires random provides contrary enhancing bound multiple statistically improvement modify copyright practice called american construct dummy balance four slack neumann proceed satisfied lower specify renewable analyze contrast john nonstochastic longest serves eddi tions amax exponentiate library tial iterated rights generalize ability sequenced minimizes ance question tmin draw cumulative pentico lpfi future requiring complete comparable equally prevents simplifies cessing successorsi limit approximation already maximized less plus eter simplified bandits improve eral comprised position collect design justification department imization says informs allows pinning execution control decreasing bmax rapidly structure centage complicate larly backtracking ysis stance inductive adaptation decay lsti mtsi sequencing cation redefined extremely locally preempting randomization drawing unnecessarily differentially benefit sociated generalization starting access association seen increases biasing validate latest gence mrpd velde associated creases pacity gorithm implies relations supported berry administration fischer rules source imum guided spektrum research lowing aeronautics uniformly generate five offers oracle msti weight iterative develop dominated solve overall playing parameters rewards allow sequential tribution derivative central arrive summary cases nasearch estimated windows yields assignments trend criteria conf rent rive method natural work contract priority exist inequality fail insight drexel mellon cooling theory stated requires dard logarithm logarithmic carnegie specified gain capacity computer estimator recall leap means great fraction sides choice runs minimum sider theoretical data omniscient precedence major presented percentage theoretically discover individual like rsmi tiarmed lows produced denominator pothesis lyzed inspiration behaves auer point necessarily general alone validated iteration satisfy assignment match substituting resources arbitrary instead nimax domly ciples simply account", "type": "pdf", "text": "The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection Vincent A. Cicirello and Stephen F. Smith In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 3, pages 1355-1361. AAAI Press, July 2005. Winner of the AAAI 2005 Outstanding Paper Award. Abstract The multiarmed bandit is often used as an analogy for the tradeoff between exploration and exploitation in search problems. The classic problem involves allocating trials to the arms of a multiarmed slot machine to maximize the expected sum of rewards. We pose a new variation of the multiarmed bandit, the Max K-Armed Bandit, in which trials must be allocated among the arms to maximize the expected best single sample reward of the series of trials. Motivation for the Max K-Armed Bandit is the allocation of restarts among a set of multistart stochastic search algorithms. We present an analysis of this Max K-Armed Bandit showing under certain assumptions that the optimal strategy allocates trials to the observed best arm at a rate increasing double exponentially relative to the other arms. This motivates an exploration strategy that follows a Boltzmann distribution with an exponentially decaying temperature parameter. We compare this exploration policy to policies that allocate trials to the observed best arm at rates faster (and slower) than double exponentially. The results confirm, for two scheduling domains, that the double exponential increase in the rate of allocations to the observed best heuristic outperforms the other approaches.", "url": "https://www.cicirello.org/publications/AAAI2005.pdf"},
	{"title": "The AI Technologies of the Philadelphia Area Urban Wireless Network Testbed - AAAI Demo - 2005", "tags": "", "type": "html", "text": "The AI Technologies of the Philadelphia Area Urban Wireless Network Testbed Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Chris Dugan, Iris Howley, Moshe Kam, Joseph Kopena, Rob Lass, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, Brian Pyles, William Regli, Evan Sultanik, James Thiel, Kyle Usbeck, Dan Venutolo, and Marc Winners In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 4, pages 1674-1675. AAAI Press, July 2005. Abstract Drexel University’s College of Engineering has been working with local law enforcement and transportation officials to develop a Philadelphia Area Urban Wireless Network Testbed (PA-UWNT). The PAUWNT is a mobile ad hoc network (MANET) consisting of PDAs (HP iPAQs), Tablet PCs, and laptops. The PAUWNT integrates: (1) the industrial-strength mobile agent platform of Lockheed’s Advanced Technology Laboratories known as the Extendable Mobile Agent Architecture (EMAA) (2) an 802.11b wireless network with ad hoc routing; and (3) lightweight computing platforms such as PDAs and Tablets. MANETs, such as the PA-UWNT, can allow for a \"bring your own network\" solution to communications and management of rescue workers at the location of a natural disaster, where traditional networking infrastructure is not likely to exist or at best is likely to be inoperable. One of the goals of the PA-UWNT is to enable researchers at Drexel University to study research problems of importance to the enabling of police, fire, security, and other emergency personnel to communicate and collaborate effectively over MANETs.", "url": "https://www.cicirello.org/publications/cicirello2005aaaidemo.html"},
	{"title": "The AI Technologies of the Philadelphia Area Urban Wireless Network Testbed - AAAI Demo - 2005", "tags": "agents manet security communication swat systems secure collection group nodes information signal intelligent cards vote time data developed need environment framework complete state hosts connected itinerary tion computer aironet functions areas series buildings perhaps special localization join topology city return namic disruption collect department demonstrations dynamics estimate fact current decision many strength ieee dynamic assurance obscure support distance linux figure reasoning lost work tools layer proc regli section shown combination part uwnt references venutolo accuracy laptop sects howley preventing devices require size science much ture strong utility uncertainty interior example integral procedures behavior cisco resilience compared failures mitigate nents familiar possible chestnut quency police complicated votes tolerant inefficiencies good compute leave making static learns count cryptography unstable relatively therefore mediator obsolete malfettone provides laptops selecting perform agencies permission lems publish copyright cisions american ries pyles dugan stojmenovic subterranean order passively mapping large issue terministic testing metal peysakhov electrical distributed kopena propose intel resulting system even dorsey integration thiel exploits rights costly predicting deployment pcmcia change indirectly future efficiently topological manets constant environments several upon radio mode host implemented links directly selected usbeck less real traverse task strengths present technique similarly receivers positioning make allows determine nature social anderson control encrypted stable properties disturbances depend accurate establishing empirical burnheimer trees uncertain cation eventual ther builds plementation negligible naik refine portable decentralized monitoring porate node unique creating itineraries demonstration components increased sultanik experiments association global battery networks neighboring extended increases found taken dering operating makes gence designing controlled confirm metric vast modulation available developing source coordination unable view awareness might lass adapt decrease dense demonstrate secured parameters migrate wired vehicles stark supporting enhance characteristics slight timely software quickly clude whole reliable problem largely simulated provide examples timeliness columns mroczkowski range formation planned flat emergent cryptographic sult cient filter exists facility levels small indicator perfect create tasked potential orate configured development like ipaq lites workshop temporarily tree munications sequentially dependable tector unreliable challenges membership clouds integrated public parameter enforced costs cost kalman smoke performance locations", "type": "pdf", "text": "The AI Technologies of the Philadelphia Area Urban Wireless Network Testbed Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Chris Dugan, Iris Howley, Moshe Kam, Joseph Kopena, Rob Lass, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, Brian Pyles, William Regli, Evan Sultanik, James Thiel, Kyle Usbeck, Dan Venutolo, and Marc Winners In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 4, pages 1674-1675. AAAI Press, July 2005. Abstract Drexel University’s College of Engineering has been working with local law enforcement and transportation officials to develop a Philadelphia Area Urban Wireless Network Testbed (PA-UWNT). The PAUWNT is a mobile ad hoc network (MANET) consisting of PDAs (HP iPAQs), Tablet PCs, and laptops. The PAUWNT integrates: (1) the industrial-strength mobile agent platform of Lockheed’s Advanced Technology Laboratories known as the Extendable Mobile Agent Architecture (EMAA) (2) an 802.11b wireless network with ad hoc routing; and (3) lightweight computing platforms such as PDAs and Tablets. MANETs, such as the PA-UWNT, can allow for a \"bring your own network\" solution to communications and management of rescue workers at the location of a natural disaster, where traditional networking infrastructure is not likely to exist or at best is likely to be inoperable. One of the goals of the PA-UWNT is to enable researchers at Drexel University to study research problems of importance to the enabling of police, fire, security, and other emergency personnel to communicate and collaborate effectively over MANETs.", "url": "https://www.cicirello.org/publications/ISD05-003.pdf"},
	{"title": "Network Awareness and the Philadelphia Area Urban Wireless Network Testbed - AAAI Spring Symposium - 2005", "tags": "", "type": "html", "text": "Network Awareness and the Philadelphia Area Urban Wireless Network Testbed Joseph B. Kopena, Vincent A. Cicirello, Maxim Peysakhov, Kris Malfettone, Andrew Mroczkowski, Gaurav Naik, Evan Sultanik, Moshe Kam, and William C. Regli In AI Technologies for Homeland Security: Papers from the 2005 AAAI Spring Symposium, pages 70-75. AAAI Press, March 2005. Abstract This paper overviews the Philadelphia Area Urban Wireless Network Testbed (PA-UWNT) project and several applications of artificial intelligence therein. PA-UWNT is a research and development effort in mobile and ubiquitous computing, focusing on communication and collaboration between first responders and other emergency personnel. Support systems in these environments face a number of challenges such as a lack of in-place infrastructure, frequent network disruptions, and limited bandwidth and power. The Testbed, consisting of robust networked computing platforms along with access to public and private locations, enables the project to test, evaluate, and develop new approaches to effectively supporting users in these domains. In this work, agents that reason on network state and available services in conducting information dissemination and collection tasks are proposed and evaluated.", "url": "https://www.cicirello.org/publications/cicirello2005aaaisp.html"},
	{"title": "Network Awareness and the Philadelphia Area Urban Wireless Network Testbed - AAAI Spring Symposium - 2005", "tags": "host agent hosts figure service data itinerary work city time migration reasoning knowledge simulation every binding experiment results random topology manet closest current require system travel shown table radio dynamic packet example chooses developing ieee fixed migrate center randomly visit areas networking task destination type drexel link special changing fixedagent application offering mobility routing gradient late unreachable required utilize computer move likely large issue make allows nature reorderable routes walking performance visited personnel tries illustrates testing munication university nected adapt iterations redundant quickly three packets provide layer consult process path synchronize route average communications possible signal avoid operate ability bundle ment complete different properties reorderableagent many single connected failure registry reach exists aware security iteration resources left much neighbor police correct need list volume searching choose provider college similar mapping proceed distributed integration inertia future logic movement manets updating settings conducted less collect effective logics networks scenario latest languages team last engineering leaving updated distance disaster delivery target equal attempted measured connectivity plan probability direct pattern means efficient encountered small assumptions dependable migrates globally part point visits intermediary active extendable search enabling right performs varied gradientagent waiting related ings tablet pdas unaware model made metal sense evaluate semantic eight world forward generally hops return meter transit present problems since recover intelligent synchronization relayed dynamics benefit conditions device experiments long transportation coordinated migrating ensure update types succeed software outofdateness problem fail disconnects discover addressed dynamism wastes references unavailable setting poor terrain moving devices notably destinations nous returns ures mined collaboratively concluded least utility uncertainty reconnect plexity elevated close minimize address representing logical quency overwhelm loosely qualities discuss reports communicate controls moved good transmission leave complements layers predicted others partitions making outperformed sparse success authority chaging technical malfettone miles expanded provides selecting live forty perform message tween environment moves ments slightly copyright american property order algorithm period peysakhov traveling kopena reachable cooperating even authors integrating wait resurrected respectively tions local native rights costly deployment particularly attributed heading requiring versely regard autonomous upon links representative puter traffic constructing differs outages maintaining tool improve lightweight times parameterized quire extra working transport specific consecutive minute probe conduct respond hypothesis walk developments maintain uncertain eventual merge optimizing meeting events defined inefficiency naik mogenous processor damental creating alternatives maximally sophisticated increased another battery accident matching promote taken demonstrating consulting describes call summarizes medical telecommunication view neighbors actual tinuing widely significant worse equates leads nectivity expiring away classes show updates street stronger sensing emitting touring start lowering manage timely typical usage obstacles rent multi priorities officials options specifically greater tion limiting pennsylvania failing reset ited completely study mroczkowski sult architecture reverse sule great outlines section centralized disconnected outlined major inappropriate robots combination described created workshop produced formal twice produces creates interference perceive veloped whiteboard necessarily dialogue designed requirements alternative enough mean various sponders user simply tolerate mostly dfforts offer record cessful evaluated addition mates preventing delay flexible turning evaluating greatly handcraft choosing interior domagent composition experimentation ronments term chestnut cicirello series complicated cally perceiving naive quantities developed later prior programming possibly static zegura enforcement count take piece visiting sources rather back averaged class relay counter existing nodes approximately management significantly merges presents reaches advanced attempt improved stojmenovic four electrical schemes reached tablished spawned proportion extraneous targets known periods stand predicting fect twenty change maes tificial efficiently report skewed subject plying edge faster solution limit directly regardless disruption possessed difficult preserve roots nitive chosen replanning relevant synchronizes focused survey trary tenth ditions total physical lator highly control exactly rapidly coming periodically trees constraints vices cation objective zeng existto quality mission wander processing stops starting switching checking shared rying sultanik favoring association reacting neighboring extended operating situations disconnection necessary makes speculate designing simulations oped progress lasts joint modulation approximate numbers inside descriptions regularly afforded roughly greedy military generate degree sections dense assurance demonstrate changed ranean expired interest throughout successful simulating characteristics apply technology stone step repeats tested react none feedback closing terms sight presence proach natural samples exist examples mobihoc delays ination regions columns disseminating range tools pictures flexibility fall recall copy power computationally uniquely incrementing lead located poll replan expressive describing mechanisms demonstrates individual laborate like unvisited sent techniques covered potentially concrete note timestamps line deployed platform narios lockheed observations track degrade motion spent arbitrary instead efficacy factors carries response domly providers", "type": "pdf", "text": "Network Awareness and the Philadelphia Area Urban Wireless Network Testbed Joseph B. Kopena, Vincent A. Cicirello, Maxim Peysakhov, Kris Malfettone, Andrew Mroczkowski, Gaurav Naik, Evan Sultanik, Moshe Kam, and William C. Regli In AI Technologies for Homeland Security: Papers from the 2005 AAAI Spring Symposium, pages 70-75. AAAI Press, March 2005. Abstract This paper overviews the Philadelphia Area Urban Wireless Network Testbed (PA-UWNT) project and several applications of artificial intelligence therein. PA-UWNT is a research and development effort in mobile and ubiquitous computing, focusing on communication and collaboration between first responders and other emergency personnel. Support systems in these environments face a number of challenges such as a lack of in-place infrastructure, frequent network disruptions, and limited bandwidth and power. The Testbed, consisting of robust networked computing platforms along with access to public and private locations, enables the project to test, evaluate, and develop new approaches to effectively supporting users in these domains. In this work, agents that reason on network state and available services in conducting information dissemination and collection tasks are proposed and evaluated.", "url": "https://www.cicirello.org/publications/SS05-01-010.pdf"},
	{"title": "Service-Based Computing on MANETs: Enabling Dynamic Interoperability of First Responders - IEEE Intelligent Systems - 2005", "tags": "", "type": "html", "text": "Service-Based Computing on MANETs: Enabling Dynamic Interoperability of First Responders Joseph Kopena, Evan Sultanik, Gaurav Naik, Iris Howley, Maxim Peysakhov, Vincent A. Cicirello, Moshe Kam, and William Regli IEEE Intelligent Systems, 20(5): 17-25, September/October 2005. doi:10.1109/MIS.2005.94 Special Issue on Artificial Intelligence for Homeland Security. Abstract Mobile ad hoc networks will form a critical part of the first-responder communications infrastructure. Empirical data shows how network-aware, autonomous, mobile agents can manage information services on live manet environments. A multidisciplinary team in Drexel University’s College of Engineering has been working with local law enforcement and transportation officials to identify problems in enabling police, fire, security, and other public protectors to effectively communicate and collaborate in first-response situations. Development of the Philadelphia Area Urban Wireless Network Testbed (PA-UWNT) is part of this effort. The PA-UWNT is a mobile ad hoc network (manet) comprising mobile computers (PDAs, tablets, and laptops) and Web service-based applications. Our experience in the PA-UWNT project indicates that constructing such systems will require new research developments in computer networking, agent and service-based computing, and security that integrate each of these disciplines at several fundamental levels. In this paper, we outline part of this approach through experiments demonstrating the utility of integrating the network and agent layers and enabling agents to reason about the current operating context. We posit that autonomous agents that can reason about the network’s slate and services offer an effective means of meeting the manet environment’s challenges.", "url": "https://www.cicirello.org/publications/cicirello2005ieeeis.html"},
	{"title": "Service-Based Computing on MANETs: Enabling Dynamic Interoperability of First Responders - IEEE Intelligent Systems - 2005", "tags": "service host hosts figure might registry available binding knowledge topology late connected interests query software science need users manets walk randomly grounding move process chestnut simulation likely student access migration teams challenges society university situation profile contact test electrical field semantic member discovery failure police technical system another results three provide travel random division executive large ability directly task execution closest vices many types link returns changing peysakhov city environments lets department java state migrate expiring video required probability board small ontologies alternative visit pass avoid model bundle table office edge communication dynamics module conditions single awareness five common itinerary work stephen providers packet object aaai correct ontology buildings provider capabilities personnel illustrates distributed conducted times design owlserviceregistry offering mobility desired scenario vice adapt significant iterations name leaving description redundant typical time applications tion layer feeds consult disconnected particular important effects largest designed user path search term richard susan governors registries complete different professor retrieve make properties node sultanik changes throughout reasoning type enable james range exists ground instances frequent interact membership walking resources performance locations unavailable near terrain moving devices inspired standards left arrives providing sonnel departments close minimize neighbor others educational pose walked success applied choose provides multiple perform message environment moves experiment flow similar oscar proceed kopena even wait cameras names requiring versity upon associate updating traffic less istry unit collect locate floor performing transport application requesters moment matching helicopter developing view longer benefits ally arrive center start target infrastructure parking quickly rent nearby case viii gene hostage datatype performed certain assumptions major tact tactical effect perceive globally point david tems interaction multiagent areas past population robotics foot possible right cicirello publications dispatch emergency language signal needs image varied bility visiting waiting related covery michael management placed operate dictates evaluate spawned eight robert known ment report efficiently hops networking radio second weights feed recover nature periodically relayed estimate fire quality switching neighboring decision undergraduate frequency instantly stationary definition every summary succeed mark react none method fail examples disconnects power lots located replan officers like published potentially purpose christina iteration command stockton seamlessly functions wastes references interacting leading watanabe building setting nonhomogeneous graduate understanding thus lege optional alphonse interdisciplinary glimpsed planning stop moore detail chapter chapters achieve least uncertainty arcs example result reconnect dual spanning connect estimating preferences committee metrology hopping querying queries logical destroyed blue qualities combined accelerates wrap congestion register addressing nine controls moved mohamed empty spring nonvoting transmission post leave predicted nonexistent making list obtaining fusion guage regional provided searching wirelessly directory representation prevent jamieson previously satellite selecting roof blocks lems ments handling magazine education doris charter delivered number property algorithm order ceased mapping entist mation specify handle traveling quinn underlying picnic distributes amultidisciplinary successor resurrected kelly iments inertia ularly accommodate portional peer electronic costly deployment product question produce walks future impractical logic cent prevents aerial abilities copies earlier members raise quite maintained representative puter settings markup outages maintaining ulation strating neering alan improve scales sensor coupled nications facilitate unexpectedly unpredictability jurisdictional infrastructureless choreography extra doan chose predict land possibility deliberately decides automatic istries specific rated suggested industrial conduct activities makoto interested respond formerly japan maintain lenging uncertain defines maximize worked marily notation events inefficiency naik opposite monitoring processor input creating alternatives rooftop actions items complexity sophisticated increased frequently jurisdiction guarantee ware ward battery accident routine nificant situational emerging cleon broken detection languages bandwidth consulting describes automated armed describe summarizes forwards becoming balconies offices voting anne arriving challenging unable offers actual last widely weight develop sharing rein volunteer stamford fixed parameters mathematically memory distance truck classes show drops minimal central early enhance ensures sensing green lowering equal ical municate timely modeling obstacles usage collected program issues rangachar looser kathleen stuck options broad specifically plan promising guages violet rendering deborah matches cars mellon carl failing matched multijurisdictional angela methods portion direct dinated gain aided architecture enables meant editor performers efficient anytime fellow inversely icant shut dick replace centralized schober outlined shown presented group pearing created logically workshop flooding dependable nities produced puting produces creates convergence values percent database candidate rest original vative heavily pletely submits diamond various inaccuracies affiliate evolutionary fitting simply tolerate mostly neous executing cessful transmitting assumption apter howley bees databases seamless hierarchy bill easy route delay flexible turning domain simultaneously deal gerald ordering autonomously interior smoothly peter sudden national ronments poses ligent business dots complicates transition advantages meet returning infrastructures naive represent performs commanders sites retrieved correctly later retrieves warning ronment michel possibly sigma ralph static metropolitan itaru count regarding graph profound piece reappearing parts relatively little sources maryland back papers retrieving wyndrum marie propagating class views contend sole digital practical length nodes approximately significantly showing burgess presents president synergy helping dropped invoke tracking appeared easily unaware join reduce inferences made literally director metal sense sensitive traditional murali underground skew server works anatomy extraneous targets products government world library periods brin together predicting knows characterized viding ationally change defining snapshots likewise turner seriousness machine skewed inoperable return instance subject main serve heterogeneous high solution publication vaqueros brian meter plinary equipment winston preserve comprises chosen relevant headquarters present since code paradigm mental ditions movements total tecture physical experienced highly macro certainly anderson rapidly sensors carlo online handles inform overwhelms adaptation facilitated danger parsing trees scene hypertextual tered composite disappearing released goals comprise dent benefit thereby itineraries starting device yervant nication shared checking components fact overcome association global rohit extended long george free strained conferences situations maintains disconnection stopped loads makes denotes started designing takers subway collaboration open symbol modulation excellence multihop numbers inside advocate pairs coordination loaded regularly afforded leaves jean military details coordinate ensure maps invited please collection look dense discrete assurance support internet allow ranean interoperation update expired interest successful simulating hostages takizawa ciently technology storing marc step location passing employ disconnect erate isdn selects loss terms price massachusetts sight presence dependent natural samples annie registration regions columns disseminating tools carnegie leah place event cations agency lead help site elements prone connecting date stephanie poll router hoffnagle reregistration discover individual resource tical", "type": "pdf", "text": "Service-Based Computing on MANETs: Enabling Dynamic Interoperability of First Responders Joseph Kopena, Evan Sultanik, Gaurav Naik, Iris Howley, Maxim Peysakhov, Vincent A. Cicirello, Moshe Kam, and William Regli IEEE Intelligent Systems, 20(5): 17-25, September/October 2005. doi:10.1109/MIS.2005.94 Special Issue on Artificial Intelligence for Homeland Security. Abstract Mobile ad hoc networks will form a critical part of the first-responder communications infrastructure. Empirical data shows how network-aware, autonomous, mobile agents can manage information services on live manet environments. A multidisciplinary team in Drexel University’s College of Engineering has been working with local law enforcement and transportation officials to identify problems in enabling police, fire, security, and other public protectors to effectively communicate and collaborate in first-response situations. Development of the Philadelphia Area Urban Wireless Network Testbed (PA-UWNT) is part of this effort. The PA-UWNT is a mobile ad hoc network (manet) comprising mobile computers (PDAs, tablets, and laptops) and Web service-based applications. Our experience in the PA-UWNT project indicates that constructing such systems will require new research developments in computer networking, agent and service-based computing, and security that integrate each of these disciplines at several fundamental levels. In this paper, we outline part of this approach through experiments demonstrating the utility of integrating the network and agent layers and enabling agents to reason about the current operating context. We posit that autonomous agents that can reason about the network’s slate and services offer an effective means of meeting the manet environment’s challenges.", "url": "https://www.cicirello.org/publications/IEEE-IS-2005.pdf"},
	{"title": "Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics - Journal of Heuristics - 2005", "tags": "", "type": "html", "text": "Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics Vincent A. Cicirello and Stephen F. Smith Journal of Heuristics, 11(1): 5-34, January 2005. doi:10.1007/s10732-005-6997-8 Abstract This paper investigates the utility of introducing randomization as a means of boosting the performance of search heuristics. We introduce a particular approach to randomization, called Value-biased stochastic sampling (VBSS), which emphasizes the use of heuristic value in determining stochastic bias. We offer an empirical study of the performance of value-biased and rank-biased approaches to randomizing search heuristics. We also consider the use of these stochastic sampling techniques in conjunction with local hill-climbing. Finally, we contrast the performance of stochastic sampling search with more systematic search procedures as a means of amplifying the performance of search heuristics.", "url": "https://www.cicirello.org/publications/cicirello2005jheur.html"},
	{"title": "Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics - Journal of Heuristics - 2005", "tags": "problem time vbss solution bias hbss algorithm scheduling solutions choice atcs number function setup tardiness decision weighted results jobs dispatch artificial algorithms average discrepancy values made starting intelligence iterations decisions choices process compared large instances proceedings times functions less nodes known current iterative deterministic section random table objective root instance node conference policy improvement comparison simulated domain compare degree annealing figure sequence combinatorial good polynomial bestsofar tree schedule problems unbiased first limited totalweight found might factor shown make sequencing power setups optimal solid thus version much aaai generated linear applications required feasible percent necessarily manufacturing assumption rank strong national added significantly international dynamic paths discrepancies optimization iteration biased framework constraint research operator inherent parameters case probability requires computer discriminatory designed possible context file ability constant foreach total single method benchmark depth space size applied configurations order distributed upon represents defined complexity genetic equal seeded provide mellon small presented workshop adds choosing procedure select improved computation machine second morgan since ranked branching processing though many uniformly higher superior terms innovative range carnegie specified leaf clearly note advice selection example rationale compute choose provides visited referred forth million satisfaction already domains probably experimentally experimental explore shows general amount various evaluation path looking ordering systems adding visiting rather roulette model tasks likely generally sort chosen position present global preferred ranking operation joint available project systematically every step configuration parameter factory currently allowed near appendix require analysis least variations fourteenth need list discriminating technical perform noted system even strongly larger successor iterates multistart particularly modified guaranteed satisfiability department specific chooses application tuning comparisons telescope takes actual significant overall raman nearly start whistling criteria issues specifically greater methods randomly done point visits applying listed evolutionary robotics completion constrained computational states plot sols class specification packaging existing approximately duedate sequenced report complete return different directly difficult plus repeat nature wheel control cmax benefit seed experiments makes appear showed numbers contexts generate fifteenth idea types cases weaker preliminary dependent work observation fraction runs dashed data observations implementation allowing half branch setting morton moving fairly science turn result aggressive behavior minimize sets representing decreases information illustration discuss notes generates empty area child selecting fails versus significance moves slightly variation tried speedup produce manner october policies effective extra design define stochastically performing remainder defines state element expected alternatives dominates gray taken entirely bresina call automated ieee unable starts last weight korf improving aspects description effort generating stronger severity overview refer watson modeling determined primary dmin boyan initial sixteenth simple potential described numerically format mathematics part generator eighth spread mean complex evaluated evaluating makespan deal chaotic business drastically nearest commonly typically averaged just contrary practical form practice thirteenth transactions interval evaluate snapshot customized viewed characterized prefers several main high task principles algorithmic highly execution structure online observed exhibit pointed highest fact discrepency industry equivalency extended seen necessary iteratively details allow interest characteristics previous winning reasoning degrees seconds children still exist drexel combinations versions force fall demonstrated computationally lead elements tightness exponential theoretical fewer dimacs development like accepted ranks proposed solving purpose trajectories tune operations distances cost advantage confidence instead references sufficiently machined properly biases sorts springer freuder dealing inspired devise apparent planning sorted stop returns statistical criterion independent achieve uncertainty subsequently formance aspect density truncated combines component loosely fifth brevity tation november couple rameter moved official assessment implement skipping others rome making polynomials european intentions volume outperformed success young production provided searching society ensuring beaumariage effectiveness multiple alleviated environment chine illustrates tendency channel outperforming focus american ultra gained similar went shape specify tackled underlying illustrated partial lncs morley ancy ions redundancy manufactured robust question discussed stored overly strongest movement thousand imposed environments body cessing mode optimize earlier implemented intense real maintaining intervals improve indistinguishable coupled leverage trick contracts simpler twentieth similarly ties quencing working possibility tunes contributing rows formulated prioritize suggested ninth formalization strategy formally hypothesis extending expanding discussion concern maximize decided builds press models completed gomes eliminates randomized succeeded another document straint increases routing desired seeding defense ference reported mechanism escape popular outweighed describe thing strength developing source repeated placing incomplete adler differing school things unattractive offers labeled engineering worse dmax suited dominated name fixed neighborhood updated away shop motivation simplicity bogged settling scalability anything woodruff admissible ends sorting analogous incorporating enhance evaluations center libraries kaufmann windows generic leafs short three excluded reintroduced broad formalized allotted utilized promising generation tion depends nonsystematic deemed lowest mentation tiny utilize refined addison explicitly computed localized direct estimator probes theme desire efficient randomness tentative great encountered nasa forbes organized sider statistics eleventh assumptions percentage emphasis theoretically trucks otherwise repeatedly fixing minutes history produced twice managing largest globally logistics inherently tend billion david optima move original handful clear alternative terminal enough insensitivity valuep simply projects viewing bine depending retrieval examining strict knowledge accurately ternational easy nificantly submitted assigned scheme necessitating sixth adaptive capability unlike term ginsberg mind acknowledgments operational chestnut practices advantages regarded series maximum vicinity phenomena naive scalable performs developed hold ignores later swapping prior programming disadvantage ignored test exhaust graph wiley acceptance final occasions frame little however averages mistakes exhibits papers symposium perhaps disruptive hentenryck views outperform bronsvoort statistically strictly avoid subset append assign expert advanced mechanical formly tables else issue researchers satisfied lower index sense schemes resulting distributions heavy operate validating explored exclusively john wider operates bands sequences mention literature library belief modifications forward change positive ment calibrating exploring harvey erations comparable retically proceeds sufficient expressed motivated dominating author weights expand prediction survey tenth mental hour certainly opposed determine anderson tendencies intelligent unsorted backtracking walsh cover dynamics clever negligible goals boxes quality intention twelve invoked interpreted exhausts examine ernst long seem biasing unless beyer lecture free strategies exploiting tightly increasing associated holds preemption separate forced coordination presentation funded embracing dispatching mckay multiplier modelling sections discrete talbot laboratory myopic demonstrate internet scheduled rule plications common similarity virtue proaches wide superimposed removal ones location opis employ trend comparative desirable selects attempts goal contract conclude susceptible samples fallible examples spectrum exact cooling flaw feature informed deepening agency suggest hits exists minimum mathematical existence schedulable", "type": "pdf", "text": "Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics Vincent A. Cicirello and Stephen F. Smith Journal of Heuristics, 11(1): 5-34, January 2005. doi:10.1007/s10732-005-6997-8 Abstract This paper investigates the utility of introducing randomization as a means of boosting the performance of search heuristics. We introduce a particular approach to randomization, called Value-biased stochastic sampling (VBSS), which emphasizes the use of heuristic value in determining stochastic bias. We offer an empirical study of the performance of value-biased and rank-biased approaches to randomizing search heuristics. We also consider the use of these stochastic sampling techniques in conjunction with local hill-climbing. Finally, we contrast the performance of stochastic sampling search with more systematic search procedures as a means of amplifying the performance of search heuristics.", "url": "https://www.cicirello.org/publications/HEURISTICS2005.pdf"},
	{"title": "Agent Survivability Through Power Awareness - IEEE Symposium on Multi-Agent Security and Survivability - 2005", "tags": "", "type": "html", "text": "Agent Survivability Through Power Awareness Maxim Peysakhov, Andrew Mroczkowski, Leonardo Urbano, Jacob Warren, Vincent A. Cicirello, William Regli, and Moshe Kam In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 31-38. August 2005. doi:10.1109/MASSUR.2005.1507045 Abstract Wireless mobile ad-hoc networks (MANETS) of personal digital assistants (PDAs) are a growing field of study due to potential applications in environments that lack a functioning communications infrastructure. Mobile computing platforms such as PDAs and tablet PCs offer software designers great challenges to the design of survivable software applications. One of these challenges pertains to limited power resources. Processor loads, large amounts of wireless network activity, and input/output (I/O operations can strain the limited battery life inherent with such mobile platforms. In this paper we demonstrate how power awareness of software agents can increase system robustness and survivability. This paper presents first steps in a direction that can derive large payoffs for decentralized coordination and collaboration on power-constrained computing platforms.", "url": "https://www.cicirello.org/publications/cicirello2005mass1.html"},
	{"title": "Agent Survivability Through Power Awareness - IEEE Symposium on Multi-Agent Security and Survivability - 2005", "tags": "aware hosts images resource level image host time number device picture unaware state manet task figure ipaq international available data alternative discharge tasks different idle devices handheld accessible renewable locally routing take load loads planning information interface mibench tions stock less actions longer required critical knowledge upgraded storage processed experiments work benchmark space resources saved energy suite standard experiment future another taken might tion section systems embedded batteries objective highest decision store operation problem capacity performance half much example plotted perform manets define performing annual scenario memory protocol otherwise point test table several since deviation constraints conference higher transmit consumption voltage type optimization profiles line value result sets blue powered need users configurations order requiring stored optimize army unit land remainder warrior secure scheduling color decide program connectivity computer performed elsewhere designed process user account average tery maximum related plot nodes management four plugged networking serve benchmarks intensive total make current variety single every loss terms ages minimum dashed iteration growth functions slower thus ceedings reserves analysis charger behavior external united backlight choose surveillance hard islped ments taking slightly period even algorithms ping local linear upon intense comparison conducted improve tiff units running represents times chose application benchmarking pack input flash ipaqs perfectly availability moment takes ergy pacity mobicom source throughput stability trapped significant measure equal brightness typical reducing logged greater hardware simulated saving card requires modern efficient levels shows minutes ferent dependable part values tend tensive equivalent electronics executing depending active july extend route drive relative compared possible june cally performs signal ethernet states perhaps approximately significantly else adapters made lower remotely integer high communication establish processes control intelligent backpack mission processing programs activity global operating transmissions zero roughly allow characteristics allocation types artificial location employ held approximations internal pictures sends routes vlsi noyes deployed greatest cmos quantity motion computations instead optimal references year scenarios remote near sorts upgrade charges extensions triple science achieve utility sleep pansion cisco minimize failures representing perimental erful decreases returned november communicate senses converting haps compute transmission speakers serious implement protocols posium area european tative success technical provided commercially behave provides reasoner lines sampled live banerjee formalizes peak message improvement concentrate special tween environment referred vious american entire accessed ultra usefully testing distributed classifying intelligence authors engaged conversions hundred cantly shutting tance decisions cessories tioned deployment particularly discussed stores drained ecuting workload ascending cumulative entity depletion equally honor screen catches lets autonomous points identical function implemented iccad swat read avoids maximizing applicable ulator real linearly firefighters driving eral detector networked sible equipped university effective allocations iors department warnings unnecessary burd chooses despite suggested sistency objectives interested wall forms refusing accurate compow decay discussion anywhere supply concern formulation defined motivating separately expected recognize calculations frains choices discarded ware increases found varying desired ference defense reported situation vice gram call diagram udani armed gorithm economical chart thing strength cant repeated someplace compile neighbors deplete results acquired last ital batch weight develop decrease iterations technologies detecting name overall fixed mathematically benefits shop approaching ences video drops propriate green ence grees ternal curves detailed refer short measured bihoc sigplan transmitted three multi formalized severely grows probability dates lowest discharging light computed redistribute formatted tinues priori consume sociation cryptographic minimizing planner cate stress contingencies organized choice certain small quick compact simple emulate disconnected presented pheronome dissipation necessitate described king workshop timing survival format particular done important formal square effects sonal spikes perceive option affecting envision general sumption mentioned adds qsort rest tems assignment heavily third interaction areas tionally analyzing evaluation suffer stimuli transmitting rank cayed profile hazardous easy former yesno bodied consideration simultaneously assigned dead drain cluded adaptive journal philadelphia composition sudden acquisition completion charge procedure noticeable series perceiving byzantine represent eration derstandable nearest prior legal useless warning richard static commonly beneficial final relatively nario importance additional choi ploy rate tonomous conserve existing setup avoid gate corridor transmits placed select reaches improves tially hope improved malfunctioned model validation udsm issue researchers loading peaks resulting traditional messages arrays server works alive curve lyze literature strings known composed russell angle sending periods graded ability everything together predicting minimizes fect twenty forward trigger ment efficiently erations tioning constant main fine timestamped continuous sufficient maximizes norvig sort preserve relevant focused shuts position comprised present transformer hour positioning capacities physical lamoureux lator consumer brief execution simulator nature prentice anderson demanding compound mize larly asilomar online empirical danger instilling branching observed outfit exhibit portable execute benefit flood quality accept except switching shared fact executed eliminate collecting long extended ficial unless tual audio necessary makes lighter started designing closer stay simulations unconditional joint conditional headphones lustrate approximate rules enhancement advocate drawback military details written five fifteenth migrating studying enhanced assurance paths vironments drop wired installed expires bhardwaj idea changes rule common interest definition summary cubic storing basicmath superimposed viation ulates phisticated swarms claimed desirable april selects fpga phase still overhead innovative drexel examples prolong logging force stated cial classical range tools uniform dark place demonstrated computationally cations bigger sell puts help exists runs mathematical clearly dozen preferable realistic create constants sent shipped purposes techniques crease eraged configuration penalty array delegating floating observations spend alarm terminated degrade costs programmable cost assistant february implementation stockton bluetooth currently swarm independently aironet", "type": "pdf", "text": "Agent Survivability Through Power Awareness Maxim Peysakhov, Andrew Mroczkowski, Leonardo Urbano, Jacob Warren, Vincent A. Cicirello, William Regli, and Moshe Kam In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 31-38. August 2005. doi:10.1109/MASSUR.2005.1507045 Abstract Wireless mobile ad-hoc networks (MANETS) of personal digital assistants (PDAs) are a growing field of study due to potential applications in environments that lack a functioning communications infrastructure. Mobile computing platforms such as PDAs and tablet PCs offer software designers great challenges to the design of survivable software applications. One of these challenges pertains to limited power resources. Processor loads, large amounts of wireless network activity, and input/output (I/O operations can strain the limited battery life inherent with such mobile platforms. In this paper we demonstrate how power awareness of software agents can increase system robustness and survivability. This paper presents first steps in a direction that can derive large payoffs for decentralized coordination and collaboration on power-constrained computing platforms.", "url": "https://www.cicirello.org/publications/MASS2005-power-aware.pdf"},
	{"title": "Designing Decentralized Software for a Wireless Network Environment: Evaluating Patterns of Mobility for a Mobile Agent Swarm - IEEE Symposium on Multi-Agent Security and Survivability - 2005", "tags": "", "type": "html", "text": "Designing Decentralized Software for a Wireless Network Environment: Evaluating Patterns of Mobility for a Mobile Agent Swarm Vincent A. Cicirello, Andrew Mroczkowski, and William Regli In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 49-57. August 2005. doi:10.1109/MASSUR.2005.1507047 Abstract Designing decentralized software applications for a wireless network environment offers harsh challenges to the software engineer. All of the usual difficulties associated with a distributed system are present, but are amplified by the inherent dynamics and uncertainty of the wireless network. This paper takes an agent-oriented software engineering perspective in considering how to design decentralized software systems for a mobile ad hoc network (MANET) of resource-constrained devices. Specifically, the authors codify within the context of a software design pattern the concept of an agent swarm. Swarms of mobile agents have been used in the development of applications to support coordination and collaboration in a live MANET test bed. Work is underway to transition some of this technology into use by public protectors as part of the Philadelphia area urban wireless network testbed. The objectives of this paper include motivating the need for a swarm-based approach to distributed software for wireless environments and discussing the critical issues involved with mobile agents swarming on a MANET. For example, one such design issue is the selection of migration patterns for use by the swarming agents. Several different types of itinerary patterns are evaluated within the context of a mobile agent swarm.", "url": "https://www.cicirello.org/publications/cicirello2005mass2.html"},
	{"title": "Designing Decentralized Software for a Wireless Network Environment: Evaluating Patterns of Mobility for a Mobile Agent Swarm - IEEE Symposium on Multi-Agent Security and Survivability - 2005", "tags": "host hosts data information fixed random state dynamic type performance current limited simulation conference number tion whiteboard example autonomous chooses gradient robots change international since experiments reorderable first visited application results simple particular visit possible known highly single update reusable much list choose logic less tional fixedagent ware neighbors migrate time efficient randomly section workshop migrates route deal communications likely topology testbed task make reorderableagent shared operating necessary destination terms drexel routes computing devices require least neighbor tries particularly robust already university defined another networks bandwidth team computer presented described visits offer knowledge choosing take relatively back nodes presents four solution itineraries many available failure every artificial reach problem individual failed instances gration faced good generated partitions delivering service changing order mapping even ping decisions requiring upon maintain routing services secure view case simulated ways architecture means important process third intermediary record synchronize july bile population term tain needs gradientagent management avoid select tablet made table report annotations components joint needed broadcast feature event broadcasts elements like reuse scenarios science accessible liotta component severe congestion volume technical multiple special sidering localization called experiment tions future opment manets employed discusses implemented maintaining equipped times ration department element monitoring latest developing adapt refer infrastructure gent plan hardware direct choice dependable formal necessarily general designed tems move mean user multiagent simply evaluation robot depending tern constrained performs developed additional perhaps related length monitor form mance large reached compromised deliver literature composed knows characterized ment computation multimedia hops sign networking heterogeneous radio high numagents prediction physical allocated nature control exactly synchronization objective wander conditions randomagent access collecting supports coordinates heuristic cougaar ensure assurance wired plications forwarding interest successful characteristics figure location employ reasoning react april outofdateness efficiency method natural terns cial range tools copy runs existence consequences exploration resource unvisited potentially platform walking track currently response references vivable tates remote building aridor poor thus destinations ceedings analysis authorities overload apparent cooperative ities size left returns ture providing collaboratively measurement formance variations policy minimize ordered failures aaai posture rationale destroyed discuss acceptable november communicate notes tute transmission leave besides implement others enormous users tests aside ableagent decomposition society sitates provides velopment identify message improvement modify moves personnel college slightly catalog american variation cusses block sary testing reachable intelligence lncs tributed local prevalence restricting conjunction costly ested consequence attributed ceases ough versely removes movement possibilities measuring equally points copies updating earlier academic members links representative ized swat circumstances differs real ploration retrying eral networked converging nications laboration cept infrastructureless units lightweight diminished extra working possibility shang deliberately empowers unnecessary transport specific despite consecutive martin interested spired remainder expanding benchmarking uncertain oxford integrity lessen java openview notation merge recipients alternatives logics ward weighed found varying ference taken reported languages plenary cess describes call ently thing strength devloping challenging sciences things basically last significant sharing worse whatever difficulty longer measure suited leads designs leaving parameters updated nectivity away show description updates refining malicious negative documenting sponse street daunting supporting delivery learned appropriately engineer equal plified restricted typical vidual measured obstacles usage ented packets multi connectivity specifically utilizes explicit reset completely requires study reliability tinues mroczkowski formation unknown sociation multirobot emergent sult enables rudimentary cussing great encountered january organized width travel facility certain board small cycles polling feasibly assumptions centralized sidered disconnected protocol shows major employs potential group repeatedly kind crafted munications creates affecting envision tive september uwnt annals rest amount built clear alternative designer increase determining ciples sigsoft areas extracted path predictable synchronizing transmitting mates sure impact easy islands plans sented dealt simultaneously extendable greatly handcraft robotics search responsibility plest operational chestnut cicirello march instructed chronization june maximum cally promise fied robotic hold later prior signal ronment computational richard static typically finally enforcement piece ecologically parts ficult little nized rather santa propagating averaged vanced lecting nuclear just human retry tamp tentially plop counter considerations existing approximately append merges reaches advanced orderable hope attempt soon usability balance easily model join grams tasks researchers suspected sense survivable removing resulting dictates physically field messages evaluate snapshot tackling explores ability menting portant menu synchronized edge sufficient communication directly intensive level illustrate adjusted equipment steps synchronizes true focused principles present problems kendall ubiquitous dozens code mental storage ering receivers repeat rescue allows initiative simulator social intelligent concerning mere online easier architectures sized periodically branching cation tered ongoing agement modular flood node unique stops fact association long eighteenth seem partition lecture free participants situations maintains makes speculate acteristic simulations connected appear face showed gamma sion lasts separate generations numbers rapid trustworthiness trivial awareness sever codified greedy fifteenth migrating extreme discrete solve myopic vironments allow interoperation changes detect spawns missing encourages repeats mised clude desirable bilities lost enable priate teams linking overhead baseline push innovative examples mobihoc ating localize regions specified perfoming causes recall place collective sium peated iasted toring lead sity sends crete filter massive additionally located exists date tendable viving dozen growing router lect sage create ciated monly sent sequence nates techniques intruders cies note timestamps link stead commonplace aware lockheed operations observations iteration studies continual quantity constructed confidence february resources groups instead intent carries stockton challenge locations domly gust", "type": "pdf", "text": "Designing Decentralized Software for a Wireless Network Environment: Evaluating Patterns of Mobility for a Mobile Agent Swarm Vincent A. Cicirello, Andrew Mroczkowski, and William Regli In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 49-57. August 2005. doi:10.1109/MASSUR.2005.1507047 Abstract Designing decentralized software applications for a wireless network environment offers harsh challenges to the software engineer. All of the usual difficulties associated with a distributed system are present, but are amplified by the inherent dynamics and uncertainty of the wireless network. This paper takes an agent-oriented software engineering perspective in considering how to design decentralized software systems for a mobile ad hoc network (MANET) of resource-constrained devices. Specifically, the authors codify within the context of a software design pattern the concept of an agent swarm. Swarms of mobile agents have been used in the development of applications to support coordination and collaboration in a live MANET test bed. Work is underway to transition some of this technology into use by public protectors as part of the Philadelphia area urban wireless network testbed. The objectives of this paper include motivating the need for a swarm-based approach to distributed software for wireless environments and discussing the critical issues involved with mobile agents swarming on a MANET. For example, one such design issue is the selection of migration patterns for use by the swarming agents. Several different types of itinerary patterns are evaluated within the context of a mobile agent swarm.", "url": "https://www.cicirello.org/publications/MASS2005-pattern.pdf"},
	{"title": "Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position - Genetic and Evolutionary Computation Conference - 2006", "tags": "", "type": "html", "text": "Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position Vincent A. Cicirello In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO'06), volume 2, pages 1125-1131. ACM Press, July 2006. doi:10.1145/1143997.1144177 Nominated for the Genetic Algorithms Track Best Paper Award. Abstract In this paper, we introduce a new crossover operator for the permutation representation of a GA. This new operator, Non-Wrapping Order Crossover (NWOX), is a variation of the well-known Order Crossover (OX) operator. It strongly preserves relative order, as does the original OX, but also respects the absolute positions within the parent permutations. This crossover operator is experimentally compared to several other permutation crossover operators on an NP-Hard problem known as weighted tardiness scheduling with sequence-dependent setups. A GA using this NWOX operator finds new best known solutions for several benchmark problem instances and proves to be superior to the previous best performing metaheuristic for the problem.", "url": "https://www.cicirello.org/publications/cicirello2006gecco.html"},
	{"title": "Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position - Genetic and Evolutionary Computation Conference - 2006", "tags": "mutation jobs average population search figure child deviation values parents individual setup number results first insert nodes algorithm generations time section value copies many children percentage important procedure international comparison shows setups sequence generated fitness upmx problems heuristic early tion right respect traveling table present since total found applications tend performance evaluated compare example initializing information searches wrapping random rate material model tions leftward high swap design elitism experiments permutations individuals repeated region schedules artificial generation study runs shown comparing effects point motion much result possible novel swapping need applied averages prevent length existing slid interval stochastic discussed likewise machine complete upon second edge solution different selected cities less hybrid positioning nature sequencing objective duedates dominates current call single smith retaining effectively dependent work discrepancy randomly small presented salesman note solving swaps general alone designed move amount converges locations optimal version size left strong independent ordering systems assembly minimize tation later prior others searched relatively contiguous rather previously hard perform permission packaging schedule moves select improved four alleles forth intelligence even retain drastic cycle sequenced together ator instance subject morgan function constructing stances preserve weights steps ulation improve times define make universal cross control tuned recombination grouped sampling processing guarantee taken reported necessary replaced partially uniformly ensure degree look string summary pair location employ case matched methods derive computer course place undergo noteworthy located sliding data inserting part percent process cost limited currently various independently nicely equivalent references evaluates building setting evaluation morton thus preventing fairly biased personal apparent selection science intermediate assigned evaluating detail solvers ated least robotics proven characteristic existed sition adaptive formance journal unlike national poses listing paired completion mind aaai highlighted pushing march ppsn component june wrap cludes couple generates rameter good dominate brings wise post uated richard needs making test chromosomes turing lutions encoding graph wiley loose varies final necessity wjtj however technical production importance provided miss cessed jersey averaged class digital hypothesize enhancing citation blocks specification improvement tracks vents formalize salesperson approximately duedate allele kicks counted significantly college copyright placed tendency focus thirteenth years formly experiment else action similar likely proceed made distributed classroom classified metaheuristics handle leveling system contrast john plore partial larger longest turned local segments literature composed rithms recombine intricacies moraglio particularly systematic climber generally recombines deriving future report removes topological retains constant lute earlier quite modified dramatically directly ideal already dominating differs difficult conducted bination plus chosen focused recomputed specialized preservation effective similarly chose dictate highly chance rates specific exactly plots pendent processed acknowledge forms handles viates counts cation granted concern randomization meaning lawrence represented defined element inefficiency separately closely tuning elitist expected completed quality alternatives except starting recombining probably examine discrepency industry seen serving worth unless nificant resentation takes limits situation diate vice middle reaction though ness lacking cess entirely appear hill leftmost automated fourth operation commercial slides joint separate strength available project source challenging ieee placing features overviewing bias five generate fifteenth last might weight tweaked sections solve systematically vital leaving scheduled motivation show generating effort anything graphs every successful cases slight start kaufmann equal curves short reducing mark opis modeling held reasoning comparative illustrative experimental none program transmitted rent three required selects loss largely broad formalized truly greater still natural probability lose innovative mellon determined slide completely requires primary dard redistribute cedure carnegie uniform orthogonal fall categories copy peated minimizing phases computationally chain initial restart salesrep observation great lead fraction encountered depth elements levels goldberg simple clearly erlbaum tours tight mentations looks bear group otherwise turbine workshop particular solely epistatic proposed person effect insertion lected dividual purpose necessarily atcs computing servers operations september array parallel spend parameter reevaluated profit rest factory applying advantage heuristically alternative eighth allowing instead carries stockton third challenge simply", "type": "pdf", "text": "Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position Vincent A. Cicirello In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO'06), volume 2, pages 1125-1131. ACM Press, July 2006. doi:10.1145/1143997.1144177 Nominated for the Genetic Algorithms Track Best Paper Award. Abstract In this paper, we introduce a new crossover operator for the permutation representation of a GA. This new operator, Non-Wrapping Order Crossover (NWOX), is a variation of the well-known Order Crossover (OX) operator. It strongly preserves relative order, as does the original OX, but also respects the absolute positions within the parent permutations. This crossover operator is experimentally compared to several other permutation crossover operators on an NP-Hard problem known as weighted tardiness scheduling with sequence-dependent setups. A GA using this NWOX operator finds new best known solutions for several benchmark problem instances and proves to be superior to the previous best performing metaheuristic for the problem.", "url": "https://www.cicirello.org/publications/GECCO2006.pdf"},
	{"title": "On the Design of an Adaptive Simulated Annealing Algorithm - CP Workshop on Autonomous Search - 2007", "tags": "", "type": "html", "text": "On the Design of an Adaptive Simulated Annealing Algorithm Vincent A. Cicirello In Proceedings of the International Conference on Principles and Practice of Constraint Programming First Workshop on Autonomous Search. AAAI Press, September 2007. Abstract In this paper, we demonstrate the ease in which an adaptive simulated annealing algorithm can be designed. Specifically, we use the adaptive annealing schedule known as the modified Lam schedule to apply simulated annealing to the weighted tardiness scheduling problem with sequence-dependent setups. The modified Lam annealing schedule adjusts the temperature to track the theoretical optimal rate of accepted moves. Employing the modified Lam schedule allows us to avoid the often tedious tuning of the annealing schedule; as the algorithm tunes itself for each instance during problem solving. Our results show that an adaptive simulated annealer can be competitive when compared to highly tuned, hand crafted algorithms. Specifically, we compare our results to a state-of-the-art genetic algorithm for weighted tardiness scheduling with sequence-dependent setups. Our study serves as an illustration of the ease with which a parameter-free simulated annealer can be designed and implemented.", "url": "https://www.cicirello.org/publications/cicirello2007cp.html"},
	{"title": "On the Design of an Adaptive Simulated Annealing Algorithm - CP Workshop on Autonomous Search - 2007", "tags": "neighborhood search parameters length time parameter initial current heuristic solutions random solution optimization benchmark setups move average jobs setup state operator acceptance control runs comparison intervals figure randomly insert confidence performance searches algorithms function different total defined seed operators shows values value ordering moves duedate metaheuristic computation objective starting experimental determined sequence instances atcs cost accepting variations pseudocode number even delosme several deviation empirical found longer evaluations three section process evolutionary evaluation require analysis independent result journal systems others class existing slightly else mutation stochastic scramble problems times difference crossover available target selects dependent computer adapting tabu solving percent heuristically alternative thermal july size science procedures completion initialize discuss need averages hard significance approximately significantly referred called order similar transactions system table since university tuned sequencing cmax quality slow processing experiments long controlled ieee geometric start artificial short applications acceptrate largely case still depends probability provide cooling completely course performer indicator simple clearly part outperforms simply swartz cybernetics balances behavior lated possible maximum controls later richard commonly volume take additional states just effectiveness perform salesperson illustrates model shorter made index sense metaheuristics traveling larger simulatedannealing cell decisions dominant generally machine report cent upon high optimize selected accepts swap present mixed make permutation decreasing specific equilibrium press duedates benefit seen designing approximate research school dynamic generate distance idea common overview kaufmann ulated equal refer evalsmax required feedback seconds options specifically versions mellon exact requires orsa methods distribution carnegie initialized performed choice exponential axis shown presented like proposed insertion option generateinitialstate configuration general computing studied implementation clear stockton currently challenge illustrating references functions sufficiently quickest analyzing pick complex fluctuate assumption near sake shortest appendix acknowledgements ternational version population apparent magnified selection perature turning sented looking placement detail touted tage greatly solvers makespan mined statistical rejecting robotics turn choosing wesley nealing heuristics empirically innovation minimize sets business michigan column initializing procedure advantages decreases series information standard dispatch notes generates added good ignores prior generated fitness implement computational pose graph wiley adjust relatively preserving wjtj little technical rather young production optimized worthy perhaps jersey provides marginal company selecting respects digital enhancing specification evolution noted automate decades college tries smaller reaches configurations focus nonlinear tracking variation division sons pairwise four decline property large lower intelligence illustrated john nealer lncs longest customized grated tions originators valid ularly world urgent sequenced discussed likewise exploring future provably complete comparable constant domization implementer jong second faster proceeds automation earlier morgan academic host implemented benchmarks catching cities icance already dominating level illustrate adjusted applicable difficult conducted positions real plus relevant reinserts rigorous hybrid improve shuffles position lutionary appears represents effective similarly intended competitor define execution social performing impressive automatic rows rapidly monotonically dell suggested application painting easier online strategy remainder forms maintain adaptation decay java pears randomization estimate negligible publishing closely distinguish sampling execute elitism labor amplification induce comparisons alternatives choices keijzer sophisticated ernst another automatically global permutations varying taken fancier initialization lecture free modifying maintains scaling decision though many call single extensive automated extensively absolute increasing describe summarizes fourth supported importantly generations project boltzmann view embracing adjusting details five lamrate last adapts boosting might adapt weight engineering modification disappears decrease dominated leads systematically yale updated higher allow motivation nearly simplicity learning schedules examination throughout factor interchanges severity characteristics center earliest layout ical typical initially grec step librium modeling nearby inexact generation tion goal natural conclude reduced seeded dynamically pennsylvania pentium analog theory dmin settle cide range optimally ways power bagchi phases boyan means computationally lead help tightness located certain minimum levels oretical data assumptions sional publishers decays trucks potential otherwise development formal refers effect purpose convergence globally lyzed distinct swaps point necessarily paper validated parallel dimension tems amount original limited advantage match arbitrary allowing increase instead recommended spread round listed various prohibitively reidel", "type": "pdf", "text": "On the Design of an Adaptive Simulated Annealing Algorithm Vincent A. Cicirello In Proceedings of the International Conference on Principles and Practice of Constraint Programming First Workshop on Autonomous Search. AAAI Press, September 2007. Abstract In this paper, we demonstrate the ease in which an adaptive simulated annealing algorithm can be designed. Specifically, we use the adaptive annealing schedule known as the modified Lam schedule to apply simulated annealing to the weighted tardiness scheduling problem with sequence-dependent setups. The modified Lam annealing schedule adjusts the temperature to track the theoretical optimal rate of accepted moves. Employing the modified Lam schedule allows us to avoid the often tedious tuning of the annealing schedule; as the algorithm tunes itself for each instance during problem solving. Our results show that an adaptive simulated annealer can be competitive when compared to highly tuned, hand crafted algorithms. Specifically, we compare our results to a state-of-the-art genetic algorithm for weighted tardiness scheduling with sequence-dependent setups. Our study serves as an illustration of the ease with which a parameter-free simulated annealer can be designed and implemented.", "url": "https://www.cicirello.org/publications/CP2007-Autonomous-Search-Workshop.pdf"},
	{"title": "The Challenge of Sequence-Dependent Setups: Proposal for a Scheduling Competition Track on One Machine Sequencing Problems - ICAPS Workshop on Scheduling a Scheduling Competition - 2007", "tags": "", "type": "html", "text": "The Challenge of Sequence-Dependent Setups: Proposal for a Scheduling Competition Track on One Machine Sequencing Problems Vincent A. Cicirello In Proceedings of the International Conference on Automated Planning and Scheduling (ICAPS) Workshop on Scheduling a Scheduling Competition. AAAI Press, September 2007. Abstract Designing a scheduling competition to attract researchers from the several fields interested in scheduling problems seems a challenging, and highly worthwhile effort. In this paper, we propose a design for one possible track of this proposed scheduling competition. Specifically, we propose a track aimed at one machine sequencing problems. We argue that any such track must include problems with sequence-dependent setups. Our proposed single machine sequencing track would additionally include a spectrum of objective functions of increasing optimization difficulty under sequence-dependent setups. We also offer a problem instance generator along with a set of benchmark problem instances for one potential competition problem—the weighted tardiness scheduling problem with sequence-dependent setups.", "url": "https://www.cicirello.org/publications/cicirello2007icaps.html"},
	{"title": "The Challenge of Sequence-Dependent Setups: Proposal for a Scheduling Competition Track on One Machine Sequencing Problems - ICAPS Workshop on Scheduling a Scheduling Competition - 2007", "tags": "setups duedate setup table time first jobs known function current solutions found mild search narrow wide severe algorithm times process loose moderate research icaps tight sequence completion vbss heuristic smith bagchi lateness squared order factor journal number total dependent exact tive evaluation size makespan independent heuristics systems tups dispatch articles distributed transactions bringing algorithms stochastic together pentico solution available uniformly annealing applications simulated mellon range carnegie data solving values atcs paper limited average discuss prior programming list related pinedo specification attempt even larger file wassenhove constraint different less since optimizing sampling processing crossover genetic ness documents operator parameters classes refer tion theory categories computing value original simply optimal aips complex manufacturing addition past biased require analysis version formed robotics example policy minimize lated series richard ignored diness remove optimizes hard just packaging salesperson college vere made intelligence field integration interval morley integrating local characterized linear report upon optimize level author ulers working informs nature processed suggested empirical cmax java events defined duedates wilhelm seem hill supported dynamic generate weight ramnath severity ence start artificial type review case depends dmin methods computer estimator tightness development produced percent network general operations parameter performance stockton equivalent half references numerous pertained bring branch facturing setting morton schedulers evaluated thus google easy hausting interdisciplinary submitted advancement turning science solvers ordering least imize result adaptive cedures procedures term computers sets business words truncated acknowledgments operational entered procedure constrained component june answer loosely information ning haps developed amounts rithm generated tidisciplinary adding solute others commonly test pose european lutions graph timization volume wiley success relatively bility preserving wjtj neural technical rather young production optimized provided back worthy duplicated perhaps previously jersey scope respects enhancing practical relax reimplemented bound multiple length tracks considerations significance schedule existing approximately management ments comprehensive copyright configurations inception formly plied improved output thanks metaheuristic tables property easily majority model likely traveling metaheuristics practitioners winner system hardest john engaged tributed curve benchmarked arate mention literature tance world iterated rights multistart sequenced modifications klein climber wandering computation exploring stored impractical return versity autonomous employed second coupling edge academia reviews tico implemented fectiveness expressed cirello regardless difficult guaranteed real weights plus dynasearch expand neering lists focused position mented errors facilitate rization university unclear potts feedforward define physical possibility torial execution categorization performing specific industrial allahverdi application painting mere online objectives abbreviated johnson nical constraints professional patch cover ately randomization annual estimate plementation temporal closely august schelberg tainly specifying node input induce twelve sizing keijzer prominent fact ernst association executed industry piecewise predecessor wjcj diversity ference taken reported dissertation takes free preferred cess reviewers fitted citeseer refinements velde appear tightly vast cuss sion approximate project source inside imum dover sciences lowing late school things embracing retaining actual steiglitz last boosting ultimate look modification dmax talbot installment name myopic changed hidden generating scheduler ally definition proaches successful apply grew equal restricted sigmoid grec step mark opis aldowaisan clude experimental tained repository three required preparation ially terms largely broad emphasizing mutator guide indexed work probability arise seeded combinations provide discrepancy gsia determined refined jective valuable primary computed dexed formulate gorithms specified acknowledging believed acronym quadratic freeman great lead encountered organization organized anonymous interests minimum small cently shows emphasis trucks climbing described turbine multidisciplinary like duced wjlj pertaining posed important estimation nottingham preparing refers council techniques effect insertion cies niques note purpose trajectories necessarily mentioned costs factory amount spent implementation clear increase third listed mean interaction attention latter category evolutionary fitting", "type": "pdf", "text": "The Challenge of Sequence-Dependent Setups: Proposal for a Scheduling Competition Track on One Machine Sequencing Problems Vincent A. Cicirello In Proceedings of the International Conference on Automated Planning and Scheduling (ICAPS) Workshop on Scheduling a Scheduling Competition. AAAI Press, September 2007. Abstract Designing a scheduling competition to attract researchers from the several fields interested in scheduling problems seems a challenging, and highly worthwhile effort. In this paper, we propose a design for one possible track of this proposed scheduling competition. Specifically, we propose a track aimed at one machine sequencing problems. We argue that any such track must include problems with sequence-dependent setups. Our proposed single machine sequencing track would additionally include a spectrum of objective functions of increasing optimization difficulty under sequence-dependent setups. We also offer a problem instance generator along with a set of benchmark problem instances for one potential competition problem—the weighted tardiness scheduling problem with sequence-dependent setups.", "url": "https://www.cicirello.org/publications/ICAPS-Competition-Workshop.pdf"},
	{"title": "An Interdisciplinary Course on Artificial Intelligence Designed for a Liberal Arts Curriculum - Journal of Computing Sciences in Colleges - 2008", "tags": "", "type": "html", "text": "An Interdisciplinary Course on Artificial Intelligence Designed for a Liberal Arts Curriculum Vincent A. Cicirello Journal of Computing Sciences in Colleges, 23(3): 120-127, January 2008. Abstract This article introduces a course the author recently designed; and which was first taught in Fall 2006. The course provides an introduction to the field of artificial intelligence (AI) focused at non-majors as part of a liberal arts curriculum. The course provides an overview of the foundational science and philosophy at the heart of AI from an interdisciplinary perspective. The course largely focuses on the diverse applications to many fields of endeavor, and the impact AI is beginning to have on areas of society as well as the potential future impact. The course draws together topics from diverse fields including computer science, philosophy, psychology, game theory, among others. One of the goals of the course is to engage students from disciplines outside the computing sciences, while drawing on the strengths of their individual backgrounds. A secondary objective is to raise awareness among students outside of the computing sciences that there is more to computer science than programming and mathematics (e.g., that some CS topics are highly interdisciplinary). A key teaching element of this course is that of utilizing prior knowledge for discussion context.", "url": "https://www.cicirello.org/publications/cicirello2008ccsce.html"},
	{"title": "An Interdisciplinary Course on Artificial Intelligence Designed for a Liberal Arts Curriculum - Journal of Computing Sciences in Colleges - 2008", "tags": "discussed general majors problem human group topic solving enrolled psychology class several courses readings elements largest studies retrieved academic design conference notion description common sept groups stockton videos strong mind making rather college literature student rationality intelligent eastern time program required truly collective presented visual google behavior computers business logical discuss questions provided related catalog exploring jcsc political film declared specific machines interested models designing available interest natural examples exercise physics consistent space major criminal history disciplinary scientific challenge definitions homeland least communications offered notions language faculty later others computational richard turing relatively little applied additional exposed covers permission grand ranging articles humans outlook taking undeclared copyright answers appeared sequel made sense impacts philosophers attracted engages ability table draw ethical inconsistent pioneering insect communication fictional scientists survey make brief social nature enrollment elective exercises drawn discussing sampling cognitive unique associated open consortium offers films concept minimal characteristics figure interactive alice broad specifically biology work focusing robocup formulate foundation distribution weak naturally copy brain evolving simple assumptions justice connections creatures logically particular purpose instead swarm interaction references springboard interacting allowed viewing biases addition audience adequately thus past possess personal inspired version cultural reserved trying dealt assigned unused accessible cited eyes weekly example result characters systems rational hand website fourteenth highlighted representing possible component exciting speaks information phrases freely recruits represent portrayals hollywood official spring chinese copying terse commonly test typically patterns list take parts theatrical sources importance divided title explained primarily jersey behavioral ensuring lines live mobile label room versus material freshmen inconsistency promotion smaller told american entire ___________________________________________ implication decline majority proceedings similar large distributed classroom underlying relevance traditional lively even contrast integration programmed opens biological sparking machinery larger brought eight sophomores encourage member everything creator particularly attributed occupational machine minor subject abilities copies publication quite colonies bureau different international spielberg read already tying institutions true comprised present facilitate dozens university media artificially juniors total futuristic possibility tied processes interesting requirement despite minute drew concerning online objectives properties entails accurate thought establishing granted concern cover oxford demonstrations extremely extraterrestrial spanned meaning builds represented gentle societies defined closely completed labor shared automatically another association long seem referring current diversity documentaries popular participate ingredient necessary noticed describes appear describe undergraduate commercial principle joint eliza project portrayal research view things details five ccsc ensure last significant collection internet idea graduates attract aspects effort figured learning video definition teach technology publicized short conducts reasoning whole embodies issues three games connection webpage promising images linking simulates lenat versions utilize math theory requires study literary direct range presentations tools ways modern falk writing theme categories entice irrational meant chatbot innate enrollments backgrounds organized date small fiction cycles tight growing shows techtalks robots discover curiosity like insights produced important proposed elementary potentially concrete challenges globally distinct interact seemingly public track stating original limited spent economics fulfilling latter unearth evolutionary", "type": "pdf", "text": "An Interdisciplinary Course on Artificial Intelligence Designed for a Liberal Arts Curriculum Vincent A. Cicirello Journal of Computing Sciences in Colleges, 23(3): 120-127, January 2008. Abstract This article introduces a course the author recently designed; and which was first taught in Fall 2006. The course provides an introduction to the field of artificial intelligence (AI) focused at non-majors as part of a liberal arts curriculum. The course provides an overview of the foundational science and philosophy at the heart of AI from an interdisciplinary perspective. The course largely focuses on the diverse applications to many fields of endeavor, and the impact AI is beginning to have on areas of society as well as the potential future impact. The course draws together topics from diverse fields including computer science, philosophy, psychology, game theory, among others. One of the goals of the course is to engage students from disciplines outside the computing sciences, while drawing on the strengths of their individual backgrounds. A secondary objective is to raise awareness among students outside of the computing sciences that there is more to computer science than programming and mathematics (e.g., that some CS topics are highly interdisciplinary). A key teaching element of this course is that of utilizing prior knowledge for discussion context.", "url": "https://www.cicirello.org/publications/p120-cicirello.pdf"},
	{"title": "A Study of Wireless Security Privacy and Forensics - CCSC:SC Student Paper E-Journal - 2008", "tags": "", "type": "html", "text": "A Study of Wireless Security Privacy and Forensics Demetrios Roubos, Shawn Casler, James Hedigan, Ryan Shaw, Suvineetha Herath, David Costantino, Vincent Cicirello, Robert Kachur, and Ajantha Herath CCSC:SC Student Paper E-Journal, 1, April 2008. Abstract Wireless networking has become an extremely common household technology in a matter of only a few years. Concerns for privacy have become more relevant than ever, with more cases of identity and data theft occurring everyday. Initially, consumer grade wireless technology was distributed without security being a major concern. Today, almost every consumer grade wireless router comes with either \"out-of-the-box\" encryption or with relatively easy to follow instructions on how to properly secure the household wireless infrastructure. In this paper we investigate wireless technology and the implications related to the privacy of the average user.", "url": "https://www.cicirello.org/publications/cicirello2008ccscsc.html"},
	{"title": "A Study of Wireless Security Privacy and Forensics - CCSC:SC Student Paper E-Journal - 2008", "tags": "networks access network user information users analysis default unencrypted points point connect analyze traffic connecting several significant freeware malicious connection richard geographic encrypted figure stumbler computer stockton google utility sniffing serious home college mapping login trusted host specific routing found people connected associated available program ssid public areas remote sniff documentation packet plaintext attacks typically regarding provided client easily product strongest evil today working earth state scanning collecting many kismet fashion ieee offers twin software transmitted logged work tools initial onion percentage capture stack laptop thus virtually impact version relative systems offered rational configuring density practices ethics test list however virtual private regional just reporting special existing focus text similar resulting broadcasting system websites mail cloned survey problems code represents threats victim risks wireshark password programs another seen free popular exported detection strength microsoft research yahoo inherent surprising spoofing overall internet unsophisticated windows typical risk problem wifi rendering exist logging broadcast hotspot methods range january anonymous plain checked potential rogue sent done seems ease part distinct authentication ultimately simply references plague building fellowships appreciate protected scanned poor moving prevention investigated addition active acknowledgements personal packages population defaults trying science pomona greatly snort much southern accessible beware dierks statistical providing role hosting unsafe hotspots example posted result reconnect dual realistically wreak casler behavior computers densely address mitigate advent procedure atheros intrusion legality loosely complicated freely rural developed recommendations transmission post signal commonly need publicly take final http trustees ietf joyriding eavesdropper affording respecting importance back proactive primarily symposium random benjamin trenton accomplish behavioral jersey havoc provides responsible routers fails living multiple attacker message steadfast environment studnets nodes approximately likened detected setup injection significantly referred username named illustrates education called jumpstart changing utilities number appeared https order surface large researchers made understand advisors educating ordinary intel futurte utilitarian operate bringing even contrast driven spots legitimate compromised whereby status lncs works turned city curve protection exploits mimics world conjunction known december ability particularly roaming implementing filled ethical generally anonymously hacker future regard shaw untrained surfing rating defending feel serve technologically radio employed second stands download different communication representative regardless ideal motivated already level differs conducted equipment real duality tool amazon task synchronizes lists attached oriented coupled appears running myspace total falling plays chance social looked dsniff tiered distinguished surveyed dell unauthorized communicating defeating increasingly credible acts accessing hiding loki linksys defined trends hopkins receiver vulnerability node highest unique device checking automatically students industry eliminate tradeoff pieces diversity endpoint current variety encrypt disabled email situations ettercap middle makes started services designing everyday appear face increasing progress troubleshooting featured commercial becoming documents promiscuously administration project transmissions loaded features amazing funded written eastern widely labeled look leads senate name illegible region secured updated benefits installed wired sniffer figures needed concept detect learning effort central anonymity derived green securing reading generic promiscuous vulnerabilities location compromise gateway employ tested quickly vince packets terms effortlessly greater case phase generation still laws goal lives lowest saving provide utilize reset completely card gmail regions insignificant north portion pattern enjoy foreign gain preferentially ways fall modern seldom occasionally course grown buddy converts nice happened puts lots unsuspecting proactively heads board clearly forensic intercepting protocol shown emphasis create combination configured marked like format populated particular instinctively history important detective purposes effect handshake configuration credentials purpose professionals obtainable principal aware candidate securely station studies correcting designed greatest breach factory manufacturers built implementation clear concentration allowing intent passive command unskilled administrative locations suggestions account tends", "type": "pdf", "text": "A Study of Wireless Security Privacy and Forensics Demetrios Roubos, Shawn Casler, James Hedigan, Ryan Shaw, Suvineetha Herath, David Costantino, Vincent Cicirello, Robert Kachur, and Ajantha Herath CCSC:SC Student Paper E-Journal, 1, April 2008. Abstract Wireless networking has become an extremely common household technology in a matter of only a few years. Concerns for privacy have become more relevant than ever, with more cases of identity and data theft occurring everyday. Initially, consumer grade wireless technology was distributed without security being a major concern. Today, almost every consumer grade wireless router comes with either \"out-of-the-box\" encryption or with relatively easy to follow instructions on how to properly secure the household wireless infrastructure. In this paper we investigate wireless technology and the implications related to the privacy of the average user.", "url": "https://www.cicirello.org/publications/P-0017-final.pdf"},
	{"title": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Problem for Soft Computing - Applications of Soft Computing: Updating the State of the Art - 2009", "tags": "", "type": "html", "text": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Problem for Soft Computing Vincent A. Cicirello In Applications of Soft Computing: Updating the State of the Art, volume 52 of Advances in Soft Computing, pages 189-198. Springer, 2009. doi:10.1007/978-3-540-88079-0_19 Abstract In this paper we present a set of benchmark instances and a benchmark instance generator for a single-machine scheduling problem known as the weighted tardiness scheduling problem with sequence-dependent setups. Furthermore, we argue that it is an ideal benchmark problem for soft computing in that it is computationally hard and does not lend itself well to exact solution procedures. Additionally, it has a number of important real world applications.", "url": "https://www.cicirello.org/publications/cicirello2009asc.html"},
	{"title": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Problem for Soft Computing - Applications of Soft Computing: Updating the State of the Art - 2009", "tags": "setups duedate setup table time first found mild severe narrow wide jobs algorithm current solutions loose moderate tight process search machine heuristic vbss factor journal distributed times sequence even stochastic uniformly annealing simulated july proceedings total objective sequencing single mellon range carnegie data values atcs manufacturing analysis version size average heuristics systems policy completion dispatch specification order larger algorithms file several function problems cmax defined sampling processing crossover genetic available operator parameters refer depends value original limited stephen optimal evaluation morton biased require makespan independent robotics adaptive procedures discuss prior others list technical packaging approximately property model metaheuristics interval local agents report international potts working informs processed suggested easier empirical java induce hill dynamic weight severity start artificial case probability dmin methods tightness workshop solving operations september parameter factory implementation challenge functions references branch setting tionally offer addition turning science greatly solvers result formance national minimize sets business aaai truncated operational procedure constrained march component tups june loosely maximum information tation cludes developed generated adding richard ignored commonly test pose european graph wiley preserving wjtj neural rather applied young production remove previously jersey tonomous respects enhancing effectiveness reimplemented bound length lems considerations significance comprehensive college smaller configurations improved output metaheuristic tables majority system john morley curve benchmarked tions summer literature veloso iterated december multistart sequenced modifications characterized climber pentico generally computation exploring stored impractical rachamadugu autonomous upon second reviews optimize implemented different puter ized author stances less weights plus dynasearch expand lists position since twentieth feedforward design define transformed possibility make intelligent allahverdi application painting online abbreviated stance moderately benchmarking sized patch cover randomization formulation optimizing agement duedates node input twelve starting sizing keijzer conference ernst industry wilhelm reported preferred makes fitted refinements appear automated absolute tightly vast smith separate project research uation school embracing last boosting dmax myopic hidden classes generating magnify discrepancies definition proaches characteristics ence apply center equal restricted sigmoid grec opis experimental three required largely review truly mutator tion work seeded limiting heidelberg combinations provide discrepancy gsia spectrum determined refined jective computer estimator acknowledging berlin bagchi encountered january organized ation minimum small exhausting shown presented feasible trucks plex climbing described turbine development exploration pertaining extrapolate produced preparing refers insertion note purpose trajectories winter necessarily general costs amount spent stockton currently mean evolutionary fitting simply", "type": "pdf", "text": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Problem for Soft Computing Vincent A. Cicirello In Applications of Soft Computing: Updating the State of the Art, volume 52 of Advances in Soft Computing, pages 189-198. Springer, 2009. doi:10.1007/978-3-540-88079-0_19 Abstract In this paper we present a set of benchmark instances and a benchmark instance generator for a single-machine scheduling problem known as the weighted tardiness scheduling problem with sequence-dependent setups. Furthermore, we argue that it is an ideal benchmark problem for soft computing in that it is computationally hard and does not lend itself well to exact solution procedures. Additionally, it has a number of important real world applications.", "url": "https://www.cicirello.org/publications/ApplicationsOfSoftComputing.pdf"},
	{"title": "On Self-Selected Pairing in CS1: Who Pairs with Whom? - Journal of Computing Sciences in Colleges - 2009", "tags": "", "type": "html", "text": "On Self-Selected Pairing in CS1: Who Pairs with Whom? Vincent A. Cicirello Journal of Computing Sciences in Colleges, 24(6): 43-49, June 2009. Abstract In recent years, we have seen an increased use of pair programming in CS-1 courses. Widespread evidence shows pair programming as beneficial at all levels of programming skill. During three academic years, we studied what students in CS-1 choose when given the option to either pair program or to program independently. We explore which students choose to pair and how often, and examine the majors and academic years of the self-selected pairs. Among our objectives is to learn about student pair preferences to help guide the assignment of partners when mandatory pair programming is used. We show that Math majors are more likely than Computer Science/Information Systems (CS/IS) majors to prefer pair programming in CS-1. Math majors prefer pairing with Math majors. CS/IS majors more often choose to pair with non-majors, perhaps indicating self-chosen mentoring roles.", "url": "https://www.cicirello.org/publications/cicirello2009ccscne1.html"},
	{"title": "On Self-Selected Pairing in CS1: Who Pairs with Whom? - Journal of Computing Sciences in Colleges - 2009", "tags": "assignments chose number year submitted paired table least major take eight cumulative significant time work pairings course approximately less since half science need roles skill another sections nearly first data instructor largest northeastern rather class pilot freshmen undeclared majority similar jcsc requirement conference probably seem frequency courses compatible shown group core groups opportunity choosing partner taught information nine educational related provides just embrace permission syntax copyright told four made classroom programmed sophomores ability together logic several feel reviews earlier level sigcse improve code switch total algorithmic enrollment interested cover concepts seniors retention many single consortium instructors results extreme ensure surprising compatibility majoring common interest start guidance problem study writing copy apprehensive summarize individual perceived outside solving mathematics percent increase independently references discourage offer examining addition require personal encountering plans turning looking weeks aspect subsequent enrolled compared upperclassmen business column loops alternate overcoming integrate withdrew novel liberal controls notes faculty institution prior leave copying female others possibly richard test aside varies helps session provided title random motivate hard live comforted ranging schedule material encouragement significantly assign college career advanced improves entire attempt relationships ___________________________________________ balance reinforce guidelines manipulate proceed testing distributed coursework contrast women recommending operates remind member particularly thoroughly dominant implementing topics generally reminded complete constant copies solution publication sufficient different textbook already author chosen unit present oriented errors influenced mixed appears juniors uncommon extra working make declared jacobson determine interesting specific rows chooses semester diagonal reversed indications granted objective decided worked extremely elective java represented element expected completed offering discovered prominent primitive concurrent recommend indicative worth current structured examined lecture arts situations decision makes started entirely appear underclassmen vast describe summarizes thing commercial separate rules objections research sophomore embracing written ccsc offers last might engineering discrete incorrectly name benefits needed idea rule proper willingly minimal throughout every early overview previous cells titled forming software happy largely attempts evenly still collaborative comprising speculates junior insight combinations provide convince requires direct teaching formation gain physics introverted homework initial consistent date small section originated influence protocol eighty imply important sequence effects seems perceive note covering beck part integrated tend general public ready spend amount match resources concentration allowing enough stockton someone simply account demographics", "type": "pdf", "text": "On Self-Selected Pairing in CS1: Who Pairs with Whom? Vincent A. Cicirello Journal of Computing Sciences in Colleges, 24(6): 43-49, June 2009. Abstract In recent years, we have seen an increased use of pair programming in CS-1 courses. Widespread evidence shows pair programming as beneficial at all levels of programming skill. During three academic years, we studied what students in CS-1 choose when given the option to either pair program or to program independently. We explore which students choose to pair and how often, and examine the majors and academic years of the self-selected pairs. Among our objectives is to learn about student pair preferences to help guide the assignment of partners when mandatory pair programming is used. We show that Math majors are more likely than Computer Science/Information Systems (CS/IS) majors to prefer pair programming in CS-1. Math majors prefer pairing with Math majors. CS/IS majors more often choose to pair with non-majors, perhaps indicating self-chosen mentoring roles.", "url": "https://www.cicirello.org/publications/p43-cicirello-ccscne09-1.pdf"},
	{"title": "Collective Bin Packing: An Active Learning Exercise - Journal of Computing Sciences in Colleges - 2009", "tags": "", "type": "html", "text": "Collective Bin Packing: An Active Learning Exercise Vincent A. Cicirello Journal of Computing Sciences in Colleges, 24(6): 117-123, June 2009. Abstract Active learning has become an important part of effective computer science pedagogy. Active learning helps to keep students engaged in the learning process and is useful at all levels of computer science education from introductory courses on programming through more advanced upper level topics and graduate level coursework. In this paper, we present an active learning exercise that we developed for use in courses on artificial intelligence for demonstrating heuristic search concepts as well as concepts related to swarm intelligence. We have also found the exercise useful in an interdisciplinary course for non-majors to demonstrate some of the problem solving approaches of computer science. It is also applicable to courses on discrete mathematics. The exercise that we call Collective Bin Packing is an adaptation of the well-known combinatorial optimization problem known as bin packing. During the exercise, students take turns deciding upon individual problem solving steps. A follow-up class discussion draws out the algorithmic elements of the students’ collective reasoning process. An interactive Java application is used to facilitate the group problem solving exercise.", "url": "https://www.cicirello.org/publications/cicirello2009ccscne2.html"},
	{"title": "Collective Bin Packing: An Active Learning Exercise - Journal of Computing Sciences in Colleges - 2009", "tags": "items item sigcse chose ordering algorithms scheduling provided student section experience capacity size least heuristics bins explain conference many common place choice first mathematics designed variable northeastern example business others choose multiple classroom jcsc constraint instance solution sufficient actions majors overview applications guide feature space move wireless optimal explanation offer thus cooperative systems column discuss liberal making provides permission suitable taking copyright placed channel number order satisfaction essays different author tool heart chosen monthly problems specific engage objectives discussing screenshot archived arts necessary consortium placing features details fixed figure time specifically natural provide copy help certain mathematical shown like particular instructor multiprocessor largest value arbitrary references springboard allowed objects conducting depending diverse virtually analysis selection plans intermediate applicability placement providing strong independent achieve utility turn choosing advertisements subsequent close computers minimize familiar rationale constrained information emerge adopted scalable instructions visualization saddle institution exceed copying richard educational commonly puzzles finite originally onto confusion additional training reichlmayr title remove random sheets accomplish length label material avoid referred college called told ___________________________________________ proceedings influencing musical made specify foundations distributed sense steered plethora happily worksheets system converge field siam analyze larger works brought thinking engages encourage generalize decisions imperative seemed television composer systematic multimedia machine serve second copies publication function implemented directly international selected malkevitch difficult sort summarizing relevant focused university working recreating make commented brief allows nature prentice control requirement decreasing suggested quantitative coming closest granted objective observed oxford elective generalized encouraged exercises facilitates represented gentle closely choices networks long matching seem current notion partition variety taken actively relationship think discovering middle structures classic commercial engagement strength available ieee research school ccsc graphically maps widely adapt labeled engineering difficulty solve memory attract motivation concept admit interest supporting offerings early summary cases breaks wide learned derives deeper software held displays tips designate phase parentheses conclude facilitating probed insight examples theory requires direct teaching derive receiving modern occasionally believed means initial freeman dimensions date small outlines data minority shows major describing presented feasible connections described behaviors effects preparing files potentially request purpose logistics point integrated network highlight general intends database operations parallel animations original limited implementation match tricks stockton currently response user simply", "type": "pdf", "text": "Collective Bin Packing: An Active Learning Exercise Vincent A. Cicirello Journal of Computing Sciences in Colleges, 24(6): 117-123, June 2009. Abstract Active learning has become an important part of effective computer science pedagogy. Active learning helps to keep students engaged in the learning process and is useful at all levels of computer science education from introductory courses on programming through more advanced upper level topics and graduate level coursework. In this paper, we present an active learning exercise that we developed for use in courses on artificial intelligence for demonstrating heuristic search concepts as well as concepts related to swarm intelligence. We have also found the exercise useful in an interdisciplinary course for non-majors to demonstrate some of the problem solving approaches of computer science. It is also applicable to courses on discrete mathematics. The exercise that we call Collective Bin Packing is an adaptation of the well-known combinatorial optimization problem known as bin packing. During the exercise, students take turns deciding upon individual problem solving steps. A follow-up class discussion draws out the algorithmic elements of the students’ collective reasoning process. An interactive Java application is used to facilitate the group problem solving exercise.", "url": "https://www.cicirello.org/publications/p117-cicirello-ccscne09-2.pdf"},
	{"title": "On the Role and Effectiveness of Pop Quizzes in CS1 - ACM Technical Symposium on Computer Science Education - 2009", "tags": "", "type": "html", "text": "On the Role and Effectiveness of Pop Quizzes in CS1 Vincent A. Cicirello In Proceedings of the 40th ACM Technical Symposium on Computer Science Education, SIGCSE'09, pages 286-290. ACM Press, March 2009. doi:10.1145/1539024.1508971 Also published in ACM SIGCSE Inroads, 41(1):286-290, March 2009. Abstract In this paper, we explore the potential important role that unannounced (or \"pop\") quizzes can play in CS-1. \"Pop\" quizzes generate continual feedback to both the student and the instructor of the course. They also encourage students to avoid missing class unless necessary. We present the results of a three year study on the effectiveness of \"pop\" quizzes in CS-1. Our results demonstrate that students who experience \"pop\" quizzes in CS-1 score higher on exams than do their counterparts who did not experience \"pop\" quizzes. This appears especially true for upperclassmen, particularly for juniors. The use of \"pop\" quizzes in CS-1 also improves performance on programming assignments for juniors. CS/IS majors and Math majors both receive a greater benefit from \"pop\" quizzes than do other non-majors.", "url": "https://www.cicirello.org/publications/cicirello2009sigcse.html"},
	{"title": "On the Role and Effectiveness of Pop Quizzes in CS1 - ACM Technical Symposium on Computer Science Education - 2009", "tags": "exam table quiz sections course significant semester grade points juniors major rate academic take least grades element programs junior freshmen nearly learning prior seniors seen data increase marginally nine perhaps scored summarizes differences value approximately undeclared sophomores less increased overall time review provide distribution section shows group percent upperclassmen taught passed covers level credits difference seem courses curved first core mathematics general withdraws analysis average compared business accounted rather college years number likely status dominant several copies author pedagogical total empirical concepts underclassmen jors common dents physics help percentage groups concentration attendance half pass senior metrics formance systems chemistry ming information evidence others possibly wrote count concentrations provided averages psychology related enhancing perform permission achieved even literature missed topics serve communication difficult since make experienced highly declared cover extremely dent completed woit letter sophisticated primitive examine marine mechanism decision though strategies single retaining difficulty enhanced show every early overview pair curves gramming program biology copy excel organized summarize matured randomly shown like history failed effect values integrated studies factors currently variable reduction references objects completing offer record sure thus personal require correlation much object shortly statistical implying compare strong existed weekly result communications journal scoring learn unmarked loops possible sample integrate compares practices withdrew combined cally quarter notes putting developed faculty institution post troduction helped richard sults blank applied choose prevent factoring averaged hard human sampled just live digital citation tured statistically improvement room significance peculiar ments comprehensive taking withdraw copyright career education advanced helping focus improved mance four manipulate order reduce proceed large mation made testing distributed classroom analyze legitimate arrays larger wait brought mention misses graded elimination together menting indirectly niors exploring cacy complete constant subject mores second earlier documented claim selected combine motivated comparison curbing already cheating chosen unit lists scores tional design efits explanations possibility categorize certainly interesting performing requirement specific enrollment pretation manipulating maple online objectives hypothesis coming counts calculus granted decided java spanned ther represented plementation expected refine consistently except enroll another eliminate alizing augment unexcused lecture validate surprised ness occurred cess many entirely designing showed assist makeup sion commercial separate declare available seven developing accounting sciences sophomore view studying doubt decrease discrete improving failure name aloud scheduled needed majoring concept ences stronger throughout factor summary coverage terparts slight ence effectively start grumbling passing forming problem nounced terms largely specifically guide promising method work plagiarism conclude reduced knowing requires explicitly redistribute computed categories regular meant consistent continuously lead encountered anonymous minimum prepared replace earned bear marked matlab discover individual sequence effects purposes crease ematics largest covering part frequent tinual point descriptors computing servers ready spend mentioned profit amount process requirements limited advantage assignment confidence stockton third favor various intend tolerate demographics", "type": "pdf", "text": "On the Role and Effectiveness of Pop Quizzes in CS1 Vincent A. Cicirello In Proceedings of the 40th ACM Technical Symposium on Computer Science Education, SIGCSE'09, pages 286-290. ACM Press, March 2009. doi:10.1145/1539024.1508971 Also published in ACM SIGCSE Inroads, 41(1):286-290, March 2009. Abstract In this paper, we explore the potential important role that unannounced (or \"pop\") quizzes can play in CS-1. \"Pop\" quizzes generate continual feedback to both the student and the instructor of the course. They also encourage students to avoid missing class unless necessary. We present the results of a three year study on the effectiveness of \"pop\" quizzes in CS-1. Our results demonstrate that students who experience \"pop\" quizzes in CS-1 score higher on exams than do their counterparts who did not experience \"pop\" quizzes. This appears especially true for upperclassmen, particularly for juniors. The use of \"pop\" quizzes in CS-1 also improves performance on programming assignments for juniors. CS/IS majors and Math majors both receive a greater benefit from \"pop\" quizzes than do other non-majors.", "url": "https://www.cicirello.org/publications/SIGCSE2009.pdf"},
	{"title": "Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm - International Florida Artificial Intelligence Research Society Conference - 2010", "tags": "", "type": "html", "text": "Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm Vincent A. Cicirello In Proceedings of the Twenty-Third International Florida Artificial Intelligence Research Society Conference, FLAIRS-23, pages 14-19. AAAI Press, May 2010. Abstract Dispatch scheduling policies offer a computationally inexpensive approach to many scheduling problems as an alternative to more processor intensive search algorithms. They are especially useful in dynamic situations where problem solving may be temporally constrained. However, dispatch heuristics have also been effectively used for guidance within more intensive search algorithms, expanding their applicability well beyond simple myopic job or task selection. In this paper, we present a new crossover operator for genetic algorithms (GA) where a permutation representation is employed. Our new operator directly integrates problem-dependent knowledge in the form of a dispatch scheduling policy into the crossover step of a GA which is usually a problem-independent recombination. Our novel crossover operator, Heuristic Sequencing Crossover (HeurX), recombines elements of M parents into a single child and is specifically designed for steady-state GAs. We empirically demonstrate its effectiveness on a strongly NP-Hard scheduling problem known as Weighted Tardiness Scheduling with Sequence-Dependent Setups. We compare our approach to a generational GA using a problem-independent crossover operator. We show the potential power of integrating problem-dependent knowledge via a dispatch heuristic into what is traditionally a problem independent problem solver.", "url": "https://www.cicirello.org/publications/cicirello2010flairs.html"},
	{"title": "Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm - International Florida Artificial Intelligence Research Society Conference - 2010", "tags": "heurx local time population jobs number solutions seconds cost average longer short optional size setup random proc first length table tuning instances tion operators sequence values result restarting members control patch found available figure conf runs applying selection compared times element results worst typical children parameter evolutionary executing addition rather pinedo approximately duedate order traveling several optimize solution position current optimization benchmark range bagchi percentage comparing restarts eligible iteration process parent require procedures term procedure integrate added provides root perform smaller select lower mutation member pentico different unordered comparison ulation heap deviation specific suggested application objective cmax locally defined execute project pairs parameters benefits early start removal applications deviates experimental type guide restart small replace fewer shows setups workshop done produces salesman atcs array value confidence challenge evaluation combinatorial version greatly utilizing systems minimize ordered completion tups decreases discuss prior fitness computational test ents remove mately schedule referred focus entire property model shorter likely large even knowns stochastic recombine particularly produce computation erations instance employed earlier publication benchmarks selected intervals improve since construction highly processes determine despite structure objectives accurate duedates benefit recommend permutations long call increasing showed smith source individuals evals inherent last significant decrease iterations solve higher nearly minimal factor every apply restricted heapify mark required promising generation requires study computer place minimum indicator data shown presented described produced effect colony point general computing increase mostly half ations references numerous sufficiently poor docode evaluated thus fined grate inspired analysis percolating apparent magnified advancement science competitive placement formed makespan strong providing ordering least turn choosing ators adaptive metaphor journal variations aspect domized assembly computers retuned enabling column truncated possible constrained grating pseudocode series information cally tation rivest couple eration compute later generated duce richard making tradeoffs need ilar contributes graph wiley final relatively bility preserving wjtj little diness applied production provided additional perhaps previously marginal human lend selecting respects enhancing outperform statistically management suitable taking college copyright placed called helping outperforming variation lags neumann decline narrow tasks specify signed index sense metaheuristics transactions deviating selections sertion integration john presenting evaluate encoded larger works vals netic tions sequences erator literature native ditional iterated rights ability urgent sequenced moraglio dominant systematic stant requiring machine report strongest topological constant minor cessing upon points second high edge function limit regardless fittest approximation already differs lingle ideas less linearly plus scales focused comprised lutionary mented specialized tors represents running effective tional total intended design define chose quencing allows certainly chance performing maximal decreasing dell pendent ducing lengths tuned easier backtracking properties maining quirements lenging empirical adaptation johnson constraints reflect identification java extremely sizes randomization myopically estimate lawrence state negligible sampling quality input induce highest comparisons processing alternatives reinsertion complexity discovered conference automatically association reinserting desired unless nificant dering initialization takes maintains bines ness replaces makes structures replaced combining store closer hill extensive automated absolute associated iteratively operation tistically ineffectively imum repeated opic zero presentation view details holland widely weight replacing pletion overall neighborhood updated uninformed pert changes magnify common fidence lier creasing steady severity characteristics previous wide lution scribe watson grec employ reach reasoning comparative desirable program selects inexact largely terms enable preliminary case grows phase still natural method briefly depends double simulated davis priority lowest exist hardness pentium caro versions utilize exact addison jective icaps theory dmin methods pensive logarithmic sume ditionally naturally uniform orthogonal believes nate course reduces believed categories demonstrated undergo enables architecture explore initial salesrep leaf performed hits tightness summarize randomly choice goldberg poli erlbaum disconnected necessitate otherwise individual survival runtime particular monly important iterating epistatic cies insertion erators starkweather largest critical purpose constructs necessarily tune tend candidate validated structural parallel track provements dimension chen optima move original constructed limited advantage spread treats performance stockton valued simply", "type": "pdf", "text": "Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm Vincent A. Cicirello In Proceedings of the Twenty-Third International Florida Artificial Intelligence Research Society Conference, FLAIRS-23, pages 14-19. AAAI Press, May 2010. Abstract Dispatch scheduling policies offer a computationally inexpensive approach to many scheduling problems as an alternative to more processor intensive search algorithms. They are especially useful in dynamic situations where problem solving may be temporally constrained. However, dispatch heuristics have also been effectively used for guidance within more intensive search algorithms, expanding their applicability well beyond simple myopic job or task selection. In this paper, we present a new crossover operator for genetic algorithms (GA) where a permutation representation is employed. Our new operator directly integrates problem-dependent knowledge in the form of a dispatch scheduling policy into the crossover step of a GA which is usually a problem-independent recombination. Our novel crossover operator, Heuristic Sequencing Crossover (HeurX), recombines elements of M parents into a single child and is specifically designed for steady-state GAs. We empirically demonstrate its effectiveness on a strongly NP-Hard scheduling problem known as Weighted Tardiness Scheduling with Sequence-Dependent Setups. We compare our approach to a generational GA using a problem-independent crossover operator. We show the potential power of integrating problem-dependent knowledge via a dispatch heuristic into what is traditionally a problem independent problem solver.", "url": "https://www.cicirello.org/publications/FLAIRS2010.pdf"},
	{"title": "Method for Comparing Solid Models - Patent US7761265 - 2010", "tags": "", "type": "html", "text": "Method for Comparing Solid Models William C. Regli and Vincent A. Cicirello U.S. Patent #7,761,265 B2, July 2010. Abstract A method for determining a similarity of a first solid model to a second solid model is disclosed. The method includes the steps of: selecting a set of features for representing the first solid model; extracting features corresponding to the selected set of features from the first solid model; constructing an undirected model dependency graph of the first solid model based on the selected set of features; extracting features corresponding to the selected set of features from the second solid model; constructing an undirected model dependency graph of the second solid model based on the selected set of features; comparing the undirected model dependency graph of the first solid model with the undirected model dependency graph of the second solid model; and outputting a numerical measure indicative of the similarity of the first solid model to the second solid model.", "url": "https://www.cicirello.org/publications/cicirello2010patent.html"},
	{"title": "Method for Comparing Solid Models - Patent US7761265 - 2010", "tags": "query node step subgraph manufacturing nodes umdg graphs feature plurality algorithm number process preferred umdgs smaller claim edges least isomorphism matrix said found information return isomorphic description group extracted search false true invention space constructed selection mapping design machining database plans mismatched data value predetermined interactions else swap comprising sheet knowledge parts heuristic common storing computing root larger stored ieee time consistency tree evaluation embodiment pseudocode identifying present structure density check order shape skilled function application represented input diagram indexed user random output large transactions known recognition determine referring binding line recognizer ture independent choose tures similar partitioning labels complexity labeled worst produces unbound retrieval relative retrieving made fewest edge storage associated greedy bestresult initialized lecs fbmach analysis returns result previously block intelligence attributes embodiments mapped another initialization engineering neighborhood artifact determined portion computer plateau initial shown described history largest enough facturing possible procedure index pairings total manu type elements exists describing limited devices predeter planning object mined manual procedures machin generated incorporated list child smallest moves illustrates upon employed chooses interested state comparisons takes cess call implies understood results incorporating pair required measures greater case priority performed choice shows employs percentage simply depending interdependency subgraphs ordering coding systems compared test little manufactur existing form select machine subject several level comprises conference many ratio degree extract every degrees drexel range connecting queue restarts swaps operations histograms thus larity apparent sorted size recognizes ordered returned instructions assessment intersection need respect therefore technical applied divided medium representation appended scope recorded referred called proceedings mation testing even spirit polynomial inven boundary sible respective performing automatic maintain pref dispersed describe algo proximity distance backtracks capp mappings detailed modeling paring torpedo generation consis utilizes matched computed pattern computes means indexing certain corre particular values matrices addition databases robotics cited choosing assembly term udmg entered stage calls publications infor added rithm structed typically thereon related bound tangible grant mechanical reduce surface topology resulting evaluate status knowl sponding calculated chosen make brief falling exactly properties accessing comprise mnew herein appreciated simi association variety denotes single geometry iteratively available zero generate evalu ensure iterative drawings types tested reasoning desirable terms provisional exist reduces initializes ation located exponential existence threshold axis like branches histogram tency award parameter cost illustrating references machined remote branch building setting arbi calculate shortest internally require left science detail califor much ated entitled simulta balanced example heuristics close sets histo forall bestresultthus neighbor entering executions trials snew faces structive tation standard generates andappli compute repeating making article conforming materials claims exchange mechani formats united production searching commercially society bills fails identify undi improvement marefat referenced suitable career ciaccia recognizers vandenbrande cessor responding inter handle reachable anal bulk hash ping matter conjunction iterated rights decisions manufactured outcome avail product discussed inconsistent requiring points proce automation judgment quite maintained read already conducted less condition improve nications facilitate university exemineridwin represents times similarly intended ognizer accord adjacent obtains intercommunication kaufman embeddable extending machinable distrib johnson shin allowable arrangements expected puters creating actions trarily automatically subtraction numeri characterizing increases notion creation structures describes metric presently documents bindings research mouse neighbors might dure longer overall plural absence concept show comput minimal ends statement associ estimated equal struc reducing applications forming measured criteria quickly interactive illustrative compris three broad deformation elinson ullmann tion extraction provide tiny primary requires joshi cedure aided modern nate consistent intemet abandoning simple protocol sional manually format putations solely solidmodel refers perceived classify critical incon hiiei part numeric ferred tive structural designed dimension tems applying clear path husk complex foregoing recog departing respec sure personal accurately ullmanndfs domain compare implying journal matic national subsequent tern paired seleeted govem alternate cally inafter observers retrieved graphics meaningful later accomplished prior adding bracket count regarding inventive sultthusfar rather states intranet sheets human views uuuuuuuuauugguuuuuuuuuuuuuuuu hole dency instrumentalities interdepen practice reaches likely exceeded field machinery government asme ment generally multimedia complete auto opera dimensional enterprises proceeds publication international different alter adjusted numerals deter task retrieve rected morphic sgaaouz solidmodels beta keyboard initiative control sought heaps lcsgradientdescent vary counts cover predicate drawing assemblies conditions binds components access primitive examine examiner extended current partition seeend xevl conferences initullmann sponsored store face increasing vast fourth calculation commercial pairs horizontal leaves interdepencies buckets look naval support changed locating changes vertical throughout summary compu reading technology repository relate problem bestresultthusfar still reduced versions federally columns uted foundation murao commu course precise mitigated restart incremental leaf sistent depth prone dimensions date fewer basing inserting development mining estimation manufacture correspondto purposes techniques equivalently potentially purpose interact partitioned error prescribed craig track greatest quantity computations spent match groups termi performance currently locations normally", "type": "pdf", "text": "Method for Comparing Solid Models William C. Regli and Vincent A. Cicirello U.S. Patent #7,761,265 B2, July 2010. Abstract A method for determining a similarity of a first solid model to a second solid model is disclosed. The method includes the steps of: selecting a set of features for representing the first solid model; extracting features corresponding to the selected set of features from the first solid model; constructing an undirected model dependency graph of the first solid model based on the selected set of features; extracting features corresponding to the selected set of features from the second solid model; constructing an undirected model dependency graph of the second solid model based on the selected set of features; comparing the undirected model dependency graph of the first solid model with the undirected model dependency graph of the second solid model; and outputting a numerical measure indicative of the similarity of the first solid model to the second solid model.", "url": "https://www.cicirello.org/publications/US7761265.pdf"},
	{"title": "A Flexible and Extensible Approach to Automated CAD/CAM Format Classification - Computers and Graphics - 2013", "tags": "", "type": "html", "text": "A Flexible and Extensible Approach to Automated CAD/CAM Format Classification Vincent A. Cicirello and William C. Regli Computers & Graphics, 37(5): 484-495, August 2013. doi:10.1016/j.cag.2013.03.007 Special Section on 3D Object Retrieval. Abstract There are hundreds of distinct 3D, CAD and engineering file formats. As engineering design and analysis has become increasingly digital, the proliferation of file formats has created many problems for data preservation, data exchange, and interoperability. In some situations, physical file objects exist on legacy media and must be identified and interpreted for reuse. In other cases, file objects may have varying representational expressiveness. We introduce the problem of automated file recognition and classification in emerging digital engineering environments, where all design, manufacturing and production activities are \"born digital.\" The result is that massive quantities and varieties of data objects are created during the product lifecycle. This paper presents an approach to automated identification of engineering file formats. This work operates independent of any modeling tools and can identify families of related file objects as well as variations in versions. This problem is challenging as it cannot assume any a priori knowledge about the nature of the physical file object. Applications for these methods include support for a number of emerging applications in areas such as forensic analysis, data translation, as well as digital curation and long-term data management.", "url": "https://www.cicirello.org/publications/cicirello2013cag.html"},
	{"title": "A Flexible and Extensible Approach to Automated CAD/CAM Format Classification - Computers and Graphics - 2013", "tags": "distance files leda headers compression trailers graph classifier measure weighted drexel first example neighbors nearest accuracy correctly different available jhove item dataset graphics training types repository correct experiment similar class compressed type value kolmogorov additional known bytes query time information predicted entire complexity curves window case requires part various compared classifiers size even compressor rather length model several experiments graphs examples technical algorithm system algorithms found small compressibility complete selected similarity cases deflate achieve provides results overall measures approximation since variety versions kolomogorov performance version precision less models dictionary ieee last generating program classify average search national existing validation code preservation interesting intelligent associated common scale computing keogh shortest solid testcases science multiple proceedings predict collage another classes early specifically tion differences distinguishing presented droid developed just practical majority table machine task true clustering conference conditional geometric higher records still concatenation theory clearly challenge predictions need parser applied previously stored upon performing application strategy java difference features nearly filetypes pair unknown computer computes otherwise exceptions general process compare systems test patterns identifying back random perhaps bound specification nodes compressors large classified library computation edge international motivated highly determine cross closest estimate node access look detect apply enable combinations power development comparing note normalized implementation edges instead understanding much turn neighbor exciting couple compute pose shape thousands classifying larger huffman pronom gzip produce comparison university accurate input tory dominates detection metric supported counterpart significant machining leads parameters developers provide means randomly levels sliding simple shows percentage refers managing requirements alternative simply unlike possible procedure language computational final averaged management decades simulation lower ment likewise second maximizes directly level make upper closely global though strategies single uniformly collection laboratory needed reading internal signature postscript recall filepart event techniques cost half hall detail newspaper sets faced subtle unrelated faces discuss generates reader specifications amounts implement others making list article united representation society delimiting selecting acis environment automate gicl college smaller called variation property byte underlying genomes robust nist framework powerful minor earlier representative tool improve boundary today extra define universal aircraft specific despite lengths protein defined cilibrasi portions brooks default weightings filetype source lifecycle develop fixed string concept motivation video comput surrogate supporting vote libraries windows manage refer davis limiting enables reliance initial performed campana organized group described timing produced tens designed amount dissimilarity complex diverse addition past profile trans essential scalable later abrams adding possibly richard turing brown form material significantly else classifies made additive server knijff modifications asme testcase discovery commonalities high testset relevant appears execution processes structure online properties distinguish polyglot quality except seen supports denoted makes speculate appear showed open sion approximate details ensure noncomputable please modification demonstrate throughout tighter compress compressible feature lead expect elements date create individual like fileg published sequence challenges aware lookup efficacy stockton reuse sufficiently allowed ephemeral slower fbmach combinatorial agreement dealing thus google cooperative standards planning sorted applies charged chapter telling least notable archiving measurement jpeg federation spond characterize forensics fifth combined standard converting dominate syntactic excluding myriad export pressibility originally external argmax modeler http reasoners discriminating provided choose dating lines perform formalizes noted forum modify burkovski stewardship detected ments slightly focus signatures years sentational narrow order proceed pressed gaines distributed kopena anal seventh strongly integration appearing farris authors engaged hundred successor retain authori kinds cantly tions matter restrict native regularities sabbatical choosin particularly identifiers sciencedirectcomputers attributes measuring body sigkdd identical thilmany symmetry quite elsevie already conducted percentages guaranteed real differed contemporary ictai characterisation october arms unix centric equipped fleischhauer workflows simpler meters scripting similarly working possibility tied complicating automatic chooses assimilation objectives maintenance remainder benchmarking validators coincidentally discussion strated inferring operability element discussing airframes expected recognize processor peabody frequently document scenario ference fication wrappers taken limits retention validate discovering languages team call similarities wilson startling summarizes predominantly textures converter lonardi developing school cambridge offers weight insufficient uncompressed imaging longer median pongor mcwherter detecting naher memory show edition ences kramer gupta symmetric racy stronger esponding daunting bajcsy ensures overview effectively start massively ncsa equal detailed initially measured extracting experimental modest artifact largely options greater mantech identifies images rendering utilizes lowest explicit light institutes completely tooling leased computed formatted manuf portion pattern consume lapadat openjdk occasionally architecture suffers explore indexing efficient consistent proe whenwe january organizing certain statistics disassembly replace recognizing constantly originated influence prefect wereselected answering emphasis combination package king nearer tree particular archive history computable done pled important effects puting outside effect flukes critical values investigations necessarily mech integrated highlight alone sifting encapsulated browser ilarity chen applying increase differ interaction latter tium visit evolutionary user equivalent whichthere executing extracted evaluation suffer depending husk record noticeably rank rities proliferate engineers whichever accurately easy extend oping submitted redesign looking evaluating greatly ters choosing bounding journal assembly term empirically enabling adjoining column sample march executable integrate advantages statesa meet votes eration added recommendations prior train needs image searches typically take parts relatively methodological little sources relates origin explained primarily states symposium harvesting client human views spans strictly considerations retained transitioning realm comprehensive decade select congress improves mechanical convert attempt improved striking autom context join text tasks likely issue robustness vera sense resulting distributions altered contrast greenway status works curve explores operated skip benchmarked sequences mehlhorn literature world government strings kooper sinha kocsor ability implementations predicting implementing defining vrml generally corporate grauer constant tacked office supplementary expressed littman interactively regardless artifacts elsevier mchenry sustainability predicts lists sciverse recrea header present harvard tenth total deutsch algorithmic chance initiative impressive klenk evident opteron occurrences interpreting vary empirical sieger character reflect extremely ther heidemann mitchell allied mission highest unique archives prominent examine overcome executed extended seem referring ratanamahatana examined measurements stat manager necessary texture airplanes simulations closer evolve texts vast ratio calculation circumvent joint project mainly pairs frequency zero capturing retrievala five generate extreme paredis oracle redesigned numerator failure flying internet implements mass learning recreated proprietary missing every coverage wide technology superior artificial shokoufandeh migration comment step mark repeats cicir software processors revolution compatible seconds relate trailersg terms disadvantages review typhoon preliminary dependent inability conformanceto conclude invariant force extension", "type": "pdf", "text": "A Flexible and Extensible Approach to Automated CAD/CAM Format Classification Vincent A. Cicirello and William C. Regli Computers & Graphics, 37(5): 484-495, August 2013. doi:10.1016/j.cag.2013.03.007 Special Section on 3D Object Retrieval. Abstract There are hundreds of distinct 3D, CAD and engineering file formats. As engineering design and analysis has become increasingly digital, the proliferation of file formats has created many problems for data preservation, data exchange, and interoperability. In some situations, physical file objects exist on legacy media and must be identified and interpreted for reuse. In other cases, file objects may have varying representational expressiveness. We introduce the problem of automated file recognition and classification in emerging digital engineering environments, where all design, manufacturing and production activities are \"born digital.\" The result is that massive quantities and varieties of data objects are created during the product lifecycle. This paper presents an approach to automated identification of engineering file formats. This work operates independent of any modeling tools and can identify families of related file objects as well as variations in versions. This problem is challenging as it cannot assume any a priori knowledge about the nature of the physical file object. Applications for these methods include support for a number of emerging applications in areas such as forensic analysis, data translation, as well as digital curation and long-term data management.", "url": "https://www.cicirello.org/publications/CAG-2013.pdf"},
	{"title": "Welcome to CCSC Eastern 2012 - Journal of Computing Sciences in Colleges - 2013", "tags": "", "type": "html", "text": "Welcome to CCSC Eastern 2012 Vincent Cicirello and Aakash Taneja Journal of Computing Sciences in Colleges, 28(3): 1-2, January 2013.", "url": "https://www.cicirello.org/publications/cicirello2013ccsce.html"},
	{"title": "Welcome to CCSC Eastern 2012 - Journal of Computing Sciences in Colleges - 2013", "tags": "college stockton richard conference papers thanks quality tutorials many information region sessions john high nifty audience offering educators poster dean students heather national committee services days thank helped michelle interest elizabeth mary steering ithaca meinke local computer topics additionally organizing several like everyone ideas juniata dave university paper year bonaventure areas scenic professional offer enrichment helen ccsce state sister addition seaview lightning excited excellent younger community muhlenberg atlantic submitted steven roubos schaeffer waterfront restaurants role entertainment hosting golf variety offered hotel george panel themed enabling grateful posters staff possible golfing reviewers single discuss administration stroll developed faculty provost programming offers frostburg making town goelman storybook invited please develop suited flinn marymount susan presenters laurie acres support thematic importance scheduled idea session situated miles wisdom duration benjamin related throughout smithville supporting just green historic wide madison michael special environment chang andrianoff play hovemeyer heinrich education janet competition hope nearby vince umuc anewalt demetrios jane mcgrath made classroom griscom hood pineland field primary adams jennifer city james enjoy planned presentations educator ramapo theme place event together quaint chair restaurant exploring harvey jcsc levels board sharma span donna steward pedagogy growing geographic lindsay karen members amruth keynote ideal workshop villanova accepted kumar important fritz amthauer focused present judges amusement student engaging onkar talks reserve workshops track make marist interesting listed engage various york timothy", "type": "pdf", "text": "Welcome to CCSC Eastern 2012 Vincent Cicirello and Aakash Taneja Journal of Computing Sciences in Colleges, 28(3): 1-2, January 2013.", "url": "https://www.cicirello.org/publications/ccsc2012welcome.pdf"},
	{"title": "Experiences with a Real Projects for Real Clients Course on Software Engineering at a Liberal Arts Institution - Journal of Computing Sciences in Colleges - 2013", "tags": "", "type": "html", "text": "Experiences with a Real Projects for Real Clients Course on Software Engineering at a Liberal Arts Institution Vincent A. Cicirello Journal of Computing Sciences in Colleges, 28(6): 50-56, June 2013. Abstract A Real Projects for Real Clients Course (RPRCC) is a course that provides students with the opportunity to develop a solution to a real problem. Students interact directly with a real client, and work on solving a problem for that client. RPRCCs are examples of service learning. Within the computing sciences, there has been a recent surge in the integration of RPRCCs into the curriculum. They are argued to offer an increased industrial awareness, and to help retain computing majors, especially among women. In this paper, we present our experiences with a senior-level computer science course on software engineering (SE) at a liberal arts institution. We have found that recruiting so-called \"real clients\" from within the liberal arts college setting is surprisingly easy; and that once you have established an initial set of clients is mostly self-sustaining. We demonstrate that an RPRCC enables students to develop their skills in teamwork and applied problem solving. The RPRCC offers the SE course a framework where students gain experience applying a variety of software architectures, design patterns, and other important SE concepts; and simultaneously develop teamwork skills.", "url": "https://www.cicirello.org/publications/cicirello2013ccscne1.html"},
	{"title": "Experiences with a Real Projects for Real Clients Course on Software Engineering at a Liberal Arts Institution - Journal of Computing Sciences in Colleges - 2013", "tags": "learning team project teams system courses support student semester assessing development community related academic average faculty others objective provide individual requirements providing integrate discuss assessment external additional members effective physical specific objectives grade progress idea collaborative teaching data northeastern contributions senior developed provided explained recruited proceedings jcsc sabin points level relevant sigcse application discipline conference research reflection coverage apply time issues required enable means first instructor challenges therapy match outcomes knowledge addition soft past agile systems subsequent compared staff connolly retrieved spring female dedicated educational need list success final helps scope client class permission material significantly copyright focus made coursework traditional strongly integrating member share workstations office manner comparison essay problems control structure recognize benefit offering document supports consortium phillips developing instructors school institutional higher submit documenting experiential throughout types hours center recipient deliverables recruitment specifically natural simulated contract architecture encountered organized responses architectural small section disciplinary part public organizations reuse half references maclean interacting scenarios conducting building record electronically understanding dealing coincide optional geolocate version submitted assigned drive deal strong independent apportioning manual civic weekly timeframe offered integral national departments close develops minimize words visualizing familiar procedure mounted constrained freshman component meet difficulties series days information straining november deliverable historical language interpersonal recommendations meaningful manageable later incorporated adding copying implement richard delivering area commonly test clearer take trickled therefore little sources technical title layered symposium ignore infuses live pilot multiple reviewing checkpoints suitable summaries select education gains attempt collaborator division disappointment ___________________________________________ gained collaborators majority write likely specify vera distributed sense classroom relevance field farris engaged larger explores functionality grades local world bibliography asked peer iticse particularly topics discussed soliciting positive ethical instruction complete movement topical feel motivates undertake high copies publication documented visualize sufficient maintained traffic textbook ideas less maintaining tool institutions improve true comprised specialized equipped apportion hour clearinghouse working revisions allocated brief assessments nature exams activities engage strategy maintenance forms maintain upper granted observed reflect ongoing facilitates strengthen initiatives midpoint defined environmental closely completed mission undertaken animal demonstration safeguard professionalism complexity access activity outset participated another long majors actively perspective expectations caution demonstrating maintains middle languages many single increasing assist ranking commercial available rules incorporate view retaining results ccsc commands campus significant enhanced solve assessed scheduled needed concept show aspects inventory common offerings evaluator incorporating summary delivery encourages allocation cases previous wide teach refer risk assignments frameworks usage extracting fair type degrees measures greater case generation profits capstone focusing limiting feasibility allocate requires study direct settle solar ways transcript fall copy demonstrated werner transcriptions lead depth assess additionally located choice date voice prepared friendly tight dozen growing presented enrich ramsey potential combination negotiate king minutes commitment particular history sent formal respondents effects managing ground covering acknowledged critical professionals whiteboard integrated general database studies designed costs ceiling process assignment implementation electric groups resources enough instead seeking radford performance stockton various administrative interaction user integrates", "type": "pdf", "text": "Experiences with a Real Projects for Real Clients Course on Software Engineering at a Liberal Arts Institution Vincent A. Cicirello Journal of Computing Sciences in Colleges, 28(6): 50-56, June 2013. Abstract A Real Projects for Real Clients Course (RPRCC) is a course that provides students with the opportunity to develop a solution to a real problem. Students interact directly with a real client, and work on solving a problem for that client. RPRCCs are examples of service learning. Within the computing sciences, there has been a recent surge in the integration of RPRCCs into the curriculum. They are argued to offer an increased industrial awareness, and to help retain computing majors, especially among women. In this paper, we present our experiences with a senior-level computer science course on software engineering (SE) at a liberal arts institution. We have found that recruiting so-called \"real clients\" from within the liberal arts college setting is surprisingly easy; and that once you have established an initial set of clients is mostly self-sustaining. We demonstrate that an RPRCC enables students to develop their skills in teamwork and applied problem solving. The RPRCC offers the SE course a framework where students gain experience applying a variety of software architectures, design patterns, and other important SE concepts; and simultaneously develop teamwork skills.", "url": "https://www.cicirello.org/publications/cicirello-ccscne2013-SE.pdf"},
	{"title": "A CS Unplugged Activity for the Online Classroom - Journal of Computing Sciences in Colleges - 2013", "tags": "", "type": "html", "text": "A CS Unplugged Activity for the Online Classroom Vincent A. Cicirello Journal of Computing Sciences in Colleges, 28(6): 162-168, June 2013. Abstract In this paper, we present a group, asynchronous problem solving exercise designed to introduce non-computer science students to a variety of concepts from artificial intelligence and operations research. The exercise is designed to be a Computer Science (CS) Unplugged activity suitable for the online classroom. CS Unplugged is a methodology for teaching CS concepts using hands-on interactive activities without using a computer. CS Unplugged activities are often used to introduce CS concepts to novices, such as elementary, middle, or high school students; but can also be effective at engaging the non-CS undergraduate student. By definition, CS Unplugged seems at odds with online education, as the participants in the exercise are necessarily using computers. We present an interactive activity motivated by CS Unplugged, but implemented within an asynchronous threaded discussion board. The activity is based on the well-known Bin Packing problem, and is specifically an extension of an existing active learning exercise known as Collective Bin Packing but adapted to the online classroom. The activity is designed for an undergraduate interdisciplinary course as part of a liberal arts curriculum.", "url": "https://www.cicirello.org/publications/cicirello2013ccscne2.html"},
	{"title": "A CS Unplugged Activity for the Online Classroom - Journal of Computing Sciences in Colleges - 2013", "tags": "shelf items student group groups sigcse actions item optimal solution least scheduling objects others extra make team reasoning swarm northeastern combinatorial object independent bins possible post list provided collectively explain turns fewest algorithms jcsc instance directly took experiences engage state conference current placing shelves common optimization capacity place first individual history wireless looking much ordering example heuristics column exceed regarding take class multiple permission college copyright channel made underlying integrating retain table particularly topics essays several sufficient members different chosen lists monthly semesters problems chose floor processes social specific evident thought observed java shared access majors found actively takes necessary nest describe consortium wasp attracts ensure weight solve wide start initially natural provide direct feature mathematical space major deciding presented like network general move implementation simply illustrating mostly exceeding references allowed interacting leading accuracy building path depending moving successfully insects analysis cooperative size left drive trans achieve utility turn minds result advertisements involvement humanities offered connect enrolled computers minimize business rationale violating integrate series discuss scalable november correct retrieved developed hold prior copying kuno programming possibly richard area dedicated puzzles need finite intentions onto article final little divided back mistakes choose training reichlmayr title primarily remove random sheets related provides motivate just effectiveness length obviously kept environment material form avoid taking smaller select advanced number ___________________________________________ pertains easily block proceedings influencing proceed went musical vera distributed removing resulting converge supplement reached analyze indication farris engaged wait works brought categorized local valid scrap encourage iticse imperative modifications question television composer spirit health indirectly systematic likewise places names machine logic adjustments upon points copies updating publication visualize function limit interactivity colonies credit communication illustrate maximizing conducted weights fill focused principles since facilitate university influences design working algorithmic commented possibility endeavor interesting control requirement structure application manipulating partitioning communicating objectives interested strategy maintenance remarks closest maintain counts coherent adaptation constraints granted oxford facilitates discussing grouped completed quality offering grade maximally choices commentary degrades another long archived partition pasting think middle structures many single commercial solved individuals ieee research details ccsc fills offers worry courses actual maps degree significant engineering look discrete difficulty fixed playing demonstrate memory attract changes resides minimal interest programmatic supporting replying mask simulating coverage summary overview comment time applications software reach discussions decide conf program fair guide still goal teams work lose conclude readings math theory requires portion range distribution unknown identity copy believed demonstrated event proc freeman lead encountered cutting choice board clues date small data section experience percentage feasible indirect king kind adapting particular solely important twice effects preparing instructor elementary explaining files topic largest mathematics logistics remark integrated tend database organize parallel limited assignment heaviest intent stockton astute anticipate interaction", "type": "pdf", "text": "A CS Unplugged Activity for the Online Classroom Vincent A. Cicirello Journal of Computing Sciences in Colleges, 28(6): 162-168, June 2013. Abstract In this paper, we present a group, asynchronous problem solving exercise designed to introduce non-computer science students to a variety of concepts from artificial intelligence and operations research. The exercise is designed to be a Computer Science (CS) Unplugged activity suitable for the online classroom. CS Unplugged is a methodology for teaching CS concepts using hands-on interactive activities without using a computer. CS Unplugged activities are often used to introduce CS concepts to novices, such as elementary, middle, or high school students; but can also be effective at engaging the non-CS undergraduate student. By definition, CS Unplugged seems at odds with online education, as the participants in the exercise are necessarily using computers. We present an interactive activity motivated by CS Unplugged, but implemented within an asynchronous threaded discussion board. The activity is based on the well-known Bin Packing problem, and is specifically an extension of an existing active learning exercise known as Collective Bin Packing but adapted to the online classroom. The activity is designed for an undergraduate interdisciplinary course as part of a liberal arts curriculum.", "url": "https://www.cicirello.org/publications/cicirello-ccscne2013-unplugged.pdf"},
	{"title": "Profiling the Distance Characteristics of Mutation Operators for Permutation-Based Genetic Algorithms - International Florida Artificial Intelligence Research Society Conference - 2013", "tags": "", "type": "html", "text": "Profiling the Distance Characteristics of Mutation Operators for Permutation-Based Genetic Algorithms Vincent A. Cicirello and Robert Cernera In Proceedings of the Twenty-Sixth International Florida Artificial Intelligence Research Society Conference, pages 46-51. AAAI Press, May 2013. Abstract In this paper, we consider the permutation representation of genetic algorithms, and more generally, local search algorithms. We use a variety of permutation distance measures to profile the behavior of the most commonly used mutation operators for permutation-based genetic algorithms. Our operator profiles are also applicable to other local search algorithms, such as simulated annealing, as the most common permutation mutation operators are also commonly found as neighborhood operators for other metaheuristics in a search of the space of permutations. In addition to using several existing distance measures, we introduce two specific instances of the edit distance measure. Our aim is to offer the GA, and local search practitioner, guidance in the selection of mutation and neighborhood operators.", "url": "https://www.cicirello.org/publications/cicirello2013flairs.html"},
	{"title": "Profiling the Distance Characteristics of Mutation Operators for Permutation-Based Genetic Algorithms - International Florida Artificial Intelligence Research Society Conference - 2013", "tags": "fitness random reinsertion problem swap permutations deviation absolute elements exact average scramble solution interchange measure relative length reversal position problems element candidate match child number small insertion crossover figure minimum parent algorithm conference tion distances landscape correlation tance needed produced produces transform solutions optimal independent journal tation table change different concept children section operations bitstring evolutionary pearson disruptive cycle known produce selected adjacent tations choices current landscapes pairs pair depends randomly science need easily order large member serve upon employed representative positions parents effective application moderately locally represented defined another campos single changes type optimization dependent natural recall meant choice data point computing costs limited evaluation depending assumption knowledge thus population ordering perturbation essence heuristics unlike national lated namely possible cific developed others typically count searching primarily producing selecting correlating strictly form assign smaller wagner focus similar likely mapping surface practitioner strongly positional categorized erator storer generally computation removes constant function linearly ulation relevant reinserts positioning design define structure exchanges association though many call appear operation available numbers fischer ieee leads coefficient cially correlated away string generating annealing interchanges refer claimed selects case study scatter first offspring simple reference create otherwise gecco important seems solving critical purpose swaps move domly references functions resent assures substrings optimas deviations evolves diverse moving successfully grow impact inspired community analysis easy advancement drive proven choosing characteristic sition adaptive systems plateaus variations aspect subsequent compared enabling mitigate borhood acknowledgments faced constrained pseudocode information discuss eration good recommendations compute swapping generated perturb programming richard delivering needs contributes graph respect volume aside parts preserving applied tant rather smallest additional prevent undo related provides class lend fails views respects captures multiple perform improvement salesperson approximately material ments grant college copyright practice improves overlooked years responding metaheuristic ingly else mimic turbation shape made lower didate vera traveling peaks resulting traditional practitioners sertion invalid valleys farris breeding authors machinery escaping larger tions representations relabeling strings rights recombine modifications characterized ment constraint strongest return shed equally main autonomous points second identical stands morgan expressed regardless motivated ideal hamming domains stances less chosen eral principles shuffles present lutionary termed specialized genetics influences quencing make informs allows nature reverses intelligent fink pendent formalization valenzuela discussion concern reflect meaning ther height dent recognize quality concepts conceptualize consistently prets subsets keijzer examine neatly indicative extended matching characterizing notion resentation perspective examined volves mechanism preferred riety ness structures summarized krasnogor increasing implies supported smith generations project someplace frequency school scheduling retaining dynamic unusual results extreme holland might widely egory isting genotype difficulty discrete improving demonstrate region allow learning bitstrings definition overview reinsertions cases wide shapira apply effectively kaufmann lution superior software held experimental nearby three required terms broad promising work probability terchange filing light extension computed direct pattern computer computes malized power enables removals consistent conceptual organized sider span originated profiled publishers combination discover imply individual king like resource created workshop nearer capture proposed refers tabu effect forrest correction potentially lected normalized part necessarily reorderings tend general tive paper challenged sistently fications culation smooth applying process cost assignment increase stockton mean acterizes challenge determining latter locations cher perturbations methodology simply", "type": "pdf", "text": "Profiling the Distance Characteristics of Mutation Operators for Permutation-Based Genetic Algorithms Vincent A. Cicirello and Robert Cernera In Proceedings of the Twenty-Sixth International Florida Artificial Intelligence Research Society Conference, pages 46-51. AAAI Press, May 2013. Abstract In this paper, we consider the permutation representation of genetic algorithms, and more generally, local search algorithms. We use a variety of permutation distance measures to profile the behavior of the most commonly used mutation operators for permutation-based genetic algorithms. Our operator profiles are also applicable to other local search algorithms, such as simulated annealing, as the most common permutation mutation operators are also commonly found as neighborhood operators for other metaheuristics in a search of the space of permutations. In addition to using several existing distance measures, we introduce two specific instances of the edit distance measure. Our aim is to offer the GA, and local search practitioner, guidance in the selection of mutation and neighborhood operators.", "url": "https://www.cicirello.org/publications/cicirello-FLAIRS2013.pdf"},
	{"title": "On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators - International Conference on Bioinspired Information and Communications Technologies - 2014", "tags": "", "type": "html", "text": "On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators Vincent A. Cicirello In Proceedings of the 8th International Conference on Bio-inspired Information and Communications Technologies, pages 28-35. EAI, December 2014. Abstract Local search algorithms, such as simulated annealing, tabu search, and local hill climbers attempt to optimize a solution to a problem by making locally improving modifications to a candidate solution. They rely on a neighborhood operator to restrict the search to a typically small set of possible successor states. The genetic algorithm mutation operator, likewise, enables the exploration of the local neighborhood of candidate solutions within the genetic algorithm’s population. In this paper, we profile window-limited variations of several commonly employed neighborhood operators for problems in which candidate solutions are represented as permutations. Window-limited neighborhood operators enable tuning the size of the local neighborhood-e.g., to balance cost of search step against likelihood of getting stuck in a local optima. Window limits potentially can even be adjusted dynamically during search-e.g., to give a stagnated search a \"kick.\" We provide profiles of the distance characteristics of window-limited variations of several of the more common permutation neighborhood operators.", "url": "https://www.cicirello.org/publications/cicirello2014bict.html"},
	{"title": "On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators - International Conference on Bioinspired Information and Communications Technologies - 2014", "tags": "fitness selected random position different average length element permutations swap deviation absolute original interchange measures elements relative independent neighbor form table reversal scramble positions randomly profiling algorithms edit reinsertion measure insertion evolutionary tance limit results annealing exact landscape journal previously produce constant define rows landscapes showed offspring match optimal behavior prior number order upon relevant design selects optimization case tion depends correlation indices compute respect schedule sertion particularly computation removes chosen reinserts transform control adjacent current pairs minimum general move equivalent parent depending aaai tation generated count rather searching disruptive selecting strictly approximately smaller wagner easily surface large shape metaheuristics strongly tions erator known rithms ability characterized ance defining modified shuffles blend tors magnitude make rapidly properties objective defined exchanges found desired structures numbers available ieee dynamic modification discrete region string needed refer nearby restricts work scatter first section influence otherwise produces erators swaps point computing operations limited methodology extent ations references functions setting offer tionally evaluation deviations near solid july circular require community analysis population extend drive jones ture essence ordering characteristic ators nealing sition adaptive plateaus lated business borhood faced constrained characterize pearson june cific represent discuss keywords developed excessively good leave programming richard needs candidates adjust therefore relatively preserving tant representation primarily states society perhaps rate serpell lend turbations respects effectiveness digital practical perform kept special tween salesperson ments suitable assign college justed called improves focus turns characterizes tables metaheuristic guidelines likely similar made lower didate vera traveling handle peaks intelligence explored farris positional city categorized representations cell strings fect implications seemed change delosme ment generally likewise exploring overly constrains movement shed measuring subject equally autonomous points automation earlier members representative regardless ideal cities hamming less sort hybrid focused present termed parents cept mixed tional positioning influences diminishes informs allows automatic bioinspired decreasing reverses structure intelligent suggested application lengths formalization remainder moderately discussion extremely height teristics dent sentative quality conceptualize consistently except choices populations discovered crossover reside association seen seem increases variety examined escape leys riety makes summarized many entirely confirm controlled appear associated increasing iteratively blended florida project imum research frequency spect school uniformly scheduling adjusting details generate abound imagine ensure might degree correlates decrease difficulty leads yale fixed memory concept approaching generating learning sitioning propriate definition interchanges czogalla cases shapira rotation ulated target layout artificial ical guidance nonnumerical verses usage desirable experimental type three required relation terms ements specifically blends inclusive natural probability analog examples light icaps theory primary extension study scape pattern havior specified ditionally malized categories means proc explore efficient bigger consistent january additionally organized ation choice certain sider span theoretical data space ticularly originated shown duces combination king resource duced workshop nearer capture particular produced important proposed refers effect correction seems solving veloped critical normalized weakly tune reorderings integrated descriptors tend september challenged paper track smooth costs distances assignment february increase efficacy abolute performance stockton mean locations domly", "type": "pdf", "text": "On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators Vincent A. Cicirello In Proceedings of the 8th International Conference on Bio-inspired Information and Communications Technologies, pages 28-35. EAI, December 2014. Abstract Local search algorithms, such as simulated annealing, tabu search, and local hill climbers attempt to optimize a solution to a problem by making locally improving modifications to a candidate solution. They rely on a neighborhood operator to restrict the search to a typically small set of possible successor states. The genetic algorithm mutation operator, likewise, enables the exploration of the local neighborhood of candidate solutions within the genetic algorithm’s population. In this paper, we profile window-limited variations of several commonly employed neighborhood operators for problems in which candidate solutions are represented as permutations. Window-limited neighborhood operators enable tuning the size of the local neighborhood-e.g., to balance cost of search step against likelihood of getting stuck in a local optima. Window limits potentially can even be adjusted dynamically during search-e.g., to give a stagnated search a \"kick.\" We provide profiles of the distance characteristics of window-limited variations of several of the more common permutation neighborhood operators.", "url": "https://www.cicirello.org/publications/cicirello-bict-2014.pdf"},
	{"title": "Genetic Algorithm Parameter Control: Application to Scheduling with Sequence-Dependent Setups - International Conference on Bioinspired Information and Communications Technologies - 2015", "tags": "", "type": "html", "text": "Genetic Algorithm Parameter Control: Application to Scheduling with Sequence-Dependent Setups Vincent A. Cicirello In Proceedings of the 9th International Conference on Bio-inspired Information and Communications Technologies, pages 136-143. EAI, December 2015. Abstract Genetic algorithms, and other forms of evolutionary computation, are controlled by numerous parameters, such as crossover and mutation rates, population size, among others depending upon the specific form of evolutionary computation as well as which operators are employed. Setting the values for these parameters is no simple task. In this paper, we develop a genetic algorithm with adaptive control parameters for an NP-Hard scheduling problem known as weighted tardiness scheduling with sequence-dependent setups. Our genetic algorithm uses the permutation representation along with the non-wrapping order crossover and insertion mutation operators. We encode the control parameters within the members of the population and evolve these during search using Gaussian mutation. We demonstrate this approach out-performs a manually tuned genetic algorithm for the problem, and that it converges upon effective parameter values very early in the run.", "url": "https://www.cicirello.org/publications/cicirello2015bict.html"},
	{"title": "Genetic Algorithm Parameter Control: Application to Scheduling with Sequence-Dependent Setups - International Conference on Bioinspired Information and Communications Technologies - 2015", "tags": "instances duedate evolved time generations tight loose benchmark elements manual rate setup figure optimal fitness medium random times average runs performance nwox number member results higher optimization selection compared algorithms deviation generation thus analysis final averaged select instance solution less problems cross experiments permutations available ieee fixed tion probability shows process edges popi relative aaai standard prior related lower positional stochastic function chosen position since though heuristic single operator dynamic show dependent work uniform small parent impact ters least systems behavior minimize jobs tation computational commonly rather applied averages class just statistically significance slightly entire traveling transactions tanaka tions valid popsize different relevant rameters investigate total rates element tuning elitism found reported many adapt significant neighborhood distance annealing common equal experimental required case overhead requires study range initial lead first section salesman general tive original exception equivalent addition knowledge july greatly providing compare example journal assembly computers completion right maximum discuss added generated test need graph child sults additional directed perform trol approximately focus attempt similar signed even server retain representations local iterated table produce machine future report efficiently points edge optimize directly comparison positions reinserts eter displace university design bioinspired lengths adaptation objective sequencing java defined sampling unique access current absolute showed associated bias uniformly retaining solutions weight solve figures apply start pair artificial reducing applications three seconds simulated dynamically exact reset matched explicitly computed computer elite undergo explore choice randomly minimum date percentage individual like sequence hinterding solving colony computing operations paper value amount assignment locations tends landscape ations functions references allowed aleti tential popj offer evaluation morton strate evolves rank eling near preventing biased proportional require baker size profiling left flexible science simultaneously detail metrics drive magnifies solvers statistical weeks independent achieve turn bining haystack unlike procedures empirically embedded paired hand initializing possible logical decreases cally wktk normality eration keywords rameter observe shifting luke ignores designated implement skipping programming concluding needs typically eiben garbage lutions wrapping wiley take parts therefore relatively ficult preserving proportionate technical production provided rics producing previously serpell hard ensuring compiler respects effectiveness enhancing tentially bound multiple obviously evolution existing schedule moves automate ments recommends comprehensive explain illustrates smaller recommendation tially variants tracking variation tables pairwise thetical roulette property model mutating anticipated validation mapping vales large researchers made vera distributed metaheuristics impacts schemes intel sian sertion john farris integrating cantly cycle native steadily viewed recombine fect dominant filled defining ment likewise regard stabilize removes movement retains copied subject eliminating several implementer serve autonomous ferences jong employed high generalizations earlier implemented expressed maintained intensive ideal stances plus ulation successive intervals rigorous xeon eral present forthcoming specialized nagata appears represents transform trast influences define somehow harder viable universal mutated certainly deliberately wheel interesting sought reverses processed ducing conduct productive online remainder remarks vary discussion randomizes calculus isomorphism allowable extremely randomization optimizing represented negligible pointers araki inefficiency duedates exchanges induce processing alternatives reinsertion except asymmetric phenotypically sophisticated another eliminate unusually long seen augment routing varying variety taken initialization supports liao unaltered scaling clairvoyant ideally nostrand appear automated classic ually metric increasing progress putation operation partially rameterized tedious project frequency separation details generate fills solver offers travelling preservative pronounced ensure oracle boosting look worse equidistant discrete difficulty longer suited overall metaoptimization region memory idea classes rule learning graphs settles polymorphous wilcoxon derived analogous characteristics cases dramatic separated generalizes bilevel earliest target ulated lution refer spins removal short nonnumerical mark modeling desirable feedback selects terms children tighter ements tionary greater plan still depends baseline priority exist combinations mellon determined utilize branke hotspot methods differences bootstrap carnegie naturally recall reduces categories place sentation minimizing bagchi themi architecture simplest efficient salesrep consistent performed encountered evolving subgraph ation tightness summarize goldberg span data theoretical tell precedence eters shown presented displacements potential described otherwise exploration king ubuntu workshop adapting profiles published constrain gecco formal effects epistatic outside effect spinning seems option largest note handbook convergence numeric error necessarily tune descriptors lation tend targeting sublimation distances applying cost computations cpus advantage alternative arbitrary threads allowing differ stockton third mean mains variable simply normally", "type": "pdf", "text": "Genetic Algorithm Parameter Control: Application to Scheduling with Sequence-Dependent Setups Vincent A. Cicirello In Proceedings of the 9th International Conference on Bio-inspired Information and Communications Technologies, pages 136-143. EAI, December 2015. Abstract Genetic algorithms, and other forms of evolutionary computation, are controlled by numerous parameters, such as crossover and mutation rates, population size, among others depending upon the specific form of evolutionary computation as well as which operators are employed. Setting the values for these parameters is no simple task. In this paper, we develop a genetic algorithm with adaptive control parameters for an NP-Hard scheduling problem known as weighted tardiness scheduling with sequence-dependent setups. Our genetic algorithm uses the permutation representation along with the non-wrapping order crossover and insertion mutation operators. We encode the control parameters within the members of the population and evolve these during search using Gaussian mutation. We demonstrate this approach out-performs a manually tuned genetic algorithm for the problem, and that it converges upon effective parameter values very early in the run.", "url": "https://www.cicirello.org/publications/cicirello-bict-2015.pdf"},
	{"title": "Welcome to CCSC Eastern 2015 - Journal of Computing Sciences in Colleges - 2016", "tags": "", "type": "html", "text": "Welcome to CCSC Eastern 2015 Vincent Cicirello and Aakash Taneja Journal of Computing Sciences in Colleges, 31(3): 1-2, January 2016.", "url": "https://www.cicirello.org/publications/cicirello2016ccsce.html"},
	{"title": "Welcome to CCSC Eastern 2015 - Journal of Computing Sciences in Colleges - 2016", "tags": "stockton university thanks papers john programming nifty quality conference region paper david hovemeyer college sandro meinke state sessions audience offering local computer variety steve committee posters services many additionally days thank information organizing faculty high helped frostburg contest like everyone ideas acceptance interim dave student talks elizabeth mary steering michael tutorials york year janet helping bonaventure competition scenic hope nearby vince professional offer umuc enrichment helen anewalt ccsce zheng sister jane seaview lightning underwent excited excellent younger made hood muhlenberg atlantic submitted steven schaeffer waterfront restaurants registration educators poster primary dean adams jennifer city entertainment panels hosting james students enjoy planned presentations golf offered salle hotel national george place event themed quaint grateful restaurant staff possible golfing reviewers exploring harvey jcsc levels board donna administration several stroll referee developed wright karen bloomfield chenyan town goelman storybook villanova invited please develop highley fritz juniata suited marymount susan presenters present judges support amusement idea session miles wisdom engaging benjamin interest rate smithville supporting just make historic wide madison special towson listed chang andrianoff", "type": "pdf", "text": "Welcome to CCSC Eastern 2015 Vincent Cicirello and Aakash Taneja Journal of Computing Sciences in Colleges, 31(3): 1-2, January 2016.", "url": "https://www.cicirello.org/publications/ccsc2015welcome.pdf"},
	{"title": "The Permutation in a Haystack Problem and the Calculus of Search Landscapes - IEEE Transactions on Evolutionary Computation - 2016", "tags": "", "type": "html", "text": "The Permutation in a Haystack Problem and the Calculus of Search Landscapes Vincent A. Cicirello IEEE Transactions on Evolutionary Computation, 20(3): 434-446, June 2016. doi:10.1109/TEVC.2015.2477284 Abstract The natural encoding for many search and optimization problems is the permutation, such as the traveling salesperson, vehicle routing, scheduling, assignment and mapping problems, among others. The effectiveness of a given mutation or crossover operator depends upon the nature of what the permutation represents. For some problems, it is the absolute locations of the elements that most directly influences solution fitness; while for others, element adjacencies or even element precedences are most important. Different permutation operators respect different properties. We aim to provide the genetic algorithm or metaheuristic practitioner with a framework enabling effective permutation search landscape analysis. To this end, we contribute a new family of optimization problems, the permutation in a haystack, that can be parameterized to the various types of permutation problem (e.g., absolute versus relative positioning). Additionally, we propose a calculus of search landscapes, enabling analysis of search landscapes through examination of local fitness rates of change. We use our approach to analyze the behavior of common permutation mutation operators on a variety of permutation in a haystack landscapes; and empirically validate the prescriptive power of the search landscape calculus via experiments with simulated annealing.", "url": "https://www.cicirello.org/publications/cicirello2016evc.html"},
	{"title": "The Permutation in a Haystack Problem and the Calculus of Search Landscapes - IEEE Transactions on Evolutionary Computation - 2016", "tags": "distance adjswap swap insertion reversal number random edge since expected neighborhood results scramble edit permutations edges optimal positions cyclic annealing compute length table adjacent rate reinsertion average thus order evaluations kendall strong large first version correlation define metric neighbors pair case acyclic converges acceptance extremely though computing performance size function interchange three probability computed original possible change deviation pairs solutions selection neighbor others perform points modified less significant measures computer small point ordering single information similar royal earlier found measure study values candidate journal rather bound schedule lower cycle predicts exactly properties temperature onemax needed minimum swaps functions proportional metrics pairwise lengths slow features fixed concept target equal otherwise rank maximum prior derivations deep displacement positional constant several transform total higher work connecting runs half near science indices tation applied multiple converge algorithms dominant strongest specific replaces research last string promising section important effects induced equivalent impact related directed form else index longest member ideal hamming relevant rankings objective except seen current studying changed changes wide road exact theory exponential cost leading deviations interprets example searching significance smaller focus crosses requiring equally quite counting represents direction despite forms locally another characterizing summarizes retaining decrease leads breaks ronald specifically requires direct enables means consistent randomly replace cycles shows major runtime deceptive general inversion rest increase latter simply account interior adaptive systems endpoints performs displaced later computational explained statistically retained likely curve satisfies deriving complete integer second high limit chosen contribution undirected long increasing associated operation available numbers independence generate degree removal focusing drexel examples flat space reversals like parameter value limited studied numerous poor thermal excellent require sorted much poorly essence result formance reversing minimize aaai discuss controls replacements exchange contiguous illustrates shorter metaheuristics impacts larger matter tance costly discussed removed removes conducted linearly reinserts university chooses reverses suggested productive maintain defines optimizing exchanges correlations difference complexity indicative routing campos escape summarized school counterpart scheduling widely insufficient longer nearly show generating refer time applications acceptrate experimental required identified options grows analog mellon bounds dividing differences confirmed ways reverse choice precedence combination workshop formal outside salesman largest mathematics tend move clear third analyzing retrieval swartz july population schema communications paired column sample pseudocode represent developed test graph exhibits states perhaps divide subsequence formalize material approximately setup improves topology rotations encoded focuses literature known ability defining computation machine return suggests regardless selected approximation canonical plus lists position control decreasing structure exhibit mitchell adopt mutant association showed ranking calculation swapped collection learning definition every singleton cases apply integers review lost invariant carnegie weak expect depth theoretical perfect schiavinotto reference capture ranks epistatic proposed rotational note instances greatest lookup match instead stockton plagued exception references sufficiently machined contributions understanding combinatorial terrain assigning solid appendix pool community adapted advancement placement providing statistical independent infinite least balances plateaus computers learn representing decreases standard generates good dominate enumeration predicted escapes need eiben originally article contributes troduced volume therefore preserving provided representation rtype compiled society previously serpell divides provides molecular multiply identify salesperson moves figurative hopeless gaussian referred copyright irrelevant adjacency decline acterize shape specify adjusts intel slowly relevance intelligence system sertion orders retain categorized covariance isolating representations cell iments bubble stochastic harmonic particularly satisfaction tended powerful regard expanses retains measuring rating autonomous puted identical mode implemented complement ized comparison basin maintaining affected tool ulation upmx conflicting ecda muhlenbein ensemble levy running times genetics design chose predict sevaux bioinspired monotonically industrial application interested equilibrium remainder moderately randomizes isomorphism java formulation exclusive state defined models tuning sampling picks atomic conceptualize alternatives choices items randomized perfectly sudoku matching desired demonstrating scaling generaterandominitialstate sitions downto structures filling implies predominantly strength spaced challenging deception cambridge offers surprising employing difficulty yale parameters memory scientist approaching motivation aspects minimal stronger surrogate early effectively start detects steepness guidance forming prohibitive complementary nearby climb parameterizing stuck broad manso greater plan tion indexed slope approximated addison matched primary pattern settle increment openjdk categories minimizing boyan explore efficient initial born great performed january dominance tively tell influence originated denote presented displacements theoretically invariance lutton speeds inverted described duced nearer gecco solely refers tabu correction induces request ease handbook convergence globally generator elsewhere integrated causing september recommender inated requirements amount alternative substituting siders variance prohibitively rand evaluation suffer depending record complex assumption strict jump gaining afterwards adequately sure devised binatorial personal accurately easy former senior formed jones scheme robotics choosing characteristic unlike subsequent term mization cency bins overcoming ppsn pearson meet cally accomplishes nearest observe shifting correctly swapping rithm programming simplifying commonly puzzles typically final varies little identifying additional packing deceived disruptive confirms maxevals just class outward respects digital spans captures false rotated permission obviously tracks existing avoid placed reaches wagner tracking improved mance surpasses easily model surface made classification peaks removing explored reached siam interval flipping valleys serves sending generalize recombine implementations continuum delosme wandering mantere likewise decomposable efficiently sigapp networking reeves morgan inducing dramatically expressed triploid cities accepts level orderings expand professor true code appears suduko mixed memetic pairings transformed magnitude make informs surveyed rapidly attraction easier nordic observed height moderate closely august precedencesedges execute accept quality node wander bridge asymmetric scrambled fact examine scrambles global extended free preferred middle necessary makes connected multiset face holds progress partially approximate frequency tiobjective exhaustive variant adjusting dynamic ensure adapts lamrate equidistant discrete scapes hypothetical coefficient demonstrate drop allow detect life tunable interest throughout interchanges gradual characteristics separated layout artificial sarma approximations desirable whole terms enable ements dependent randomize still samples insight combinations cooling regions steep isolated range logarithmic climbs derive naturally uniform disallow recall scatter wherever yielding lead help subgraph additionally goldberg span rigorously mendelian deciding development demonstrates imply individual ubuntu profiles published reinserted purposes techniques equivalently publisher levenshtein argmin solving purpose challenges normalized line scale differential minima operations paper smooth costs encompassing distances implementation february succinctly verges boolean currently inversions variable intend", "type": "pdf", "text": "The Permutation in a Haystack Problem and the Calculus of Search Landscapes Vincent A. Cicirello IEEE Transactions on Evolutionary Computation, 20(3): 434-446, June 2016. doi:10.1109/TEVC.2015.2477284 Abstract The natural encoding for many search and optimization problems is the permutation, such as the traveling salesperson, vehicle routing, scheduling, assignment and mapping problems, among others. The effectiveness of a given mutation or crossover operator depends upon the nature of what the permutation represents. For some problems, it is the absolute locations of the elements that most directly influences solution fitness; while for others, element adjacencies or even element precedences are most important. Different permutation operators respect different properties. We aim to provide the genetic algorithm or metaheuristic practitioner with a framework enabling effective permutation search landscape analysis. To this end, we contribute a new family of optimization problems, the permutation in a haystack, that can be parameterized to the various types of permutation problem (e.g., absolute versus relative positioning). Additionally, we propose a calculus of search landscapes, enabling analysis of search landscapes through examination of local fitness rates of change. We use our approach to analyze the behavior of common permutation mutation operators on a variety of permutation in a haystack landscapes; and empirically validate the prescriptive power of the search landscape calculus via experiments with simulated annealing.", "url": "https://www.cicirello.org/publications/ieee-tevc-2016.pdf"},
	{"title": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library - Harvard Dataverse - 2016", "tags": "", "type": "html", "text": "Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library Vincent A. Cicirello Harvard Dataverse, doi:10.7910/DVN/VHA0VQ, June 2016. Abstract This set of benchmark instances for the problem known as Weighted Tardiness Scheduling with Sequence Dependent Setups originated in 2003 as part of the Ph.D. Dissertation research of Vincent A. Cicirello from Carnegie Mellon University’s Robotics Institute. This benchmark set includes the instances, the current best known solutions, a problem generator, and links to relevant publications.", "url": "https://www.cicirello.org/publications/cicirello2016hd.html"},
	{"title": "Searching for a Permutation in a Haystack - International Symposium on Combinatorial Search - 2017", "tags": "", "type": "html", "text": "Searching for a Permutation in a Haystack Vincent A. Cicirello In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 177. AAAI Press, June 2017. Previously Published Papers Track. Abstract We provide an overview of the Permutation in a Haystack problem, which serves as a tool for fitness landscape analysis, as well as in search algorithm design. The Permutation in a Haystack enables defining a search landscape for permutation optimization problems that abstracts the permutation features, which impact solution fitness, such as absolute element positions, edges, and pairwise element precedences. In this way, it allows the local search algorithm designer to explore a wide variety of landscape characteristics in a problem independent manner. We introduced the Permutation in a Haystack problem in a paper recently published in IEEE Transactions on Evolutionary Computation (Cicirello, 2016). In that paper, we also introduced the Search Landscape Calculus, an analytical framework for analyzing the fitness landscape induced by a local search operator via local rates of change of fitness. We then applied the tools to an analysis of several common permutation mutation operators on a wide variety of permutation search landscapes, and validated the findings empirically using simulated annealing. Graphical Abstract", "url": "https://www.cicirello.org/publications/cicirello2017SoCS1.html"},
	{"title": "Searching for a Permutation in a Haystack - International Symposium on Combinatorial Search - 2017", "tags": "distance metric functions tions optimal references calculus objective enable rank terrain tion thus vera traveling impacts science metrics farris study scape essence interprets computer systems behavior landscapes cency biometrika elements increasing information choice tation ement available features school king capture chosen timization measure experimenting kendall university parameterized define stockton salesperson figurative", "type": "pdf", "text": "Searching for a Permutation in a Haystack Vincent A. Cicirello In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 177. AAAI Press, June 2017. Previously Published Papers Track. Abstract We provide an overview of the Permutation in a Haystack problem, which serves as a tool for fitness landscape analysis, as well as in search algorithm design. The Permutation in a Haystack enables defining a search landscape for permutation optimization problems that abstracts the permutation features, which impact solution fitness, such as absolute element positions, edges, and pairwise element precedences. In this way, it allows the local search algorithm designer to explore a wide variety of landscape characteristics in a problem independent manner. We introduced the Permutation in a Haystack problem in a paper recently published in IEEE Transactions on Evolutionary Computation (Cicirello, 2016). In that paper, we also introduced the Search Landscape Calculus, an analytical framework for analyzing the fitness landscape induced by a local search operator via local rates of change of fitness. We then applied the tools to an analysis of several common permutation mutation operators on a wide variety of permutation search landscapes, and validated the findings empirically using simulated annealing. Graphical Abstract", "url": "https://www.cicirello.org/publications/SoCS2017-PrevPub-Cicirello.pdf"},
	{"title": "Variable Annealing Length and Parallelism in Simulated Annealing - International Symposium on Combinatorial Search - 2017", "tags": "", "type": "html", "text": "Variable Annealing Length and Parallelism in Simulated Annealing Vincent A. Cicirello In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 2-10. AAAI Press, June 2017. doi:10.1609/socs.v8i1.18424 Abstract In this paper, we propose: (a) a restart schedule for an adaptive simulated annealer, and (b) parallel simulated annealing, with an adaptive and parameter-free annealing schedule. The foundation of our approach is the Modified Lam annealing schedule, which adaptively controls the temperature parameter to track a theoretically ideal rate of acceptance of neighboring states. A sequential implementation of Modified Lam simulated annealing is almost parameter-free. However, it requires prior knowledge of the annealing length. We eliminate this parameter using restarts, with an exponentially increasing schedule of annealing lengths. We then extend this restart schedule to parallel implementation, executing several Modified Lam simulated annealers in parallel, with varying initial annealing lengths, and our proposed parallel annealing length schedule. To validate our approach, we conduct experiments on an NP-Hard scheduling problem with sequence-dependent setup constraints. We compare our approach to fixed length restarts, both sequentially and in parallel. Our results show that our approach can achieve substantial performance gains, throughout the course of the run, demonstrating our approach to be an effective anytime algorithm. Graphical Abstract", "url": "https://www.cicirello.org/publications/cicirello2017SoCS2.html"},
	{"title": "Variable Annealing Length and Parallelism in Simulated Annealing - International Symposium on Combinatorial Search - 2017", "tags": "time runs figure second lengths instances significant case long reannealing longer optimal available solution dominates restarts statistically instance single solutions early differences independent approximately number local multistart speedup tardiness found neighborhood figures average variations weighted random multiple shorter total first near relative strongly computation high times control processing levels increase outperforms evolutionary size nealing behavior information duration balance else algorithm distributed restarting araki execute many nearly dependent tion boyan section setups sequence half completing evaluation rank swartz thus much journal heuristics jobs neighbor others commonly test typically graph rather exhibits smin states improved property signed longest stochastic optimize earlier limit position permutation tuned forms observed benefit completes except associated deficiencies sharing solve parameters factor every evaluations risk experimental optimization enable benchmark consistent expect shown general equivalent offer menon proportional version placement metrics providing systems estimating computers minimize completion later implement varies overtake related maxevals practical tracks versus significance existing duedate referred smaller similar large metaheuristics propose mutation million algorithms server tions tance known iterated delosme machine constraint parallelized reanneals identical function different already less intervals errors similarly design define cross java extremely exhibit portions distinguish betz quality eliminates difference asymmetric starting crossover examine increases current supports genetic heuristic controlled hill ieee research adjusting dynamic last decrease leads impossible whenn wilcoxon apply experimentally artificial superior curves short applications acceptrate reach required seconds specifically overtakes work exist provide mellon cooling exact carnegie computer enables means randomly exponential allel influence luby shows percentage colony values scale tive computing value process threads references functions aleti rand path record assumption marginally virtually league impact accurately analysis adapted advancement selection science simultaneously formed curately greatly solvers weeks stretches ordering example result formance haystack procedures domized huang enabling borhood subramaniam decreased tually logical decreases pseudocode cally andoi wktk normality phenomena discuss represent standard performs resolve graphics developed good ignores fitness heating computational preceed need modeled originally staggered ceptance obtaining outperformed final loose cessive preserving technical production additional quires society cessed averaged hard respects enhancing outperform perform obviously ludwin ranging erated material form achieved significantly taking slightly copyright called reaches simulation entire attempt gains metaheuristic ingly gained gested anticipated letters order reduce likely made lower metal vera traveling intel distributions intelligence system operate even distributes hardest farris trading operates progressively moser tanaka tournament cell motivations tial rithms rights periods sequenced minimizes zuckerman characterized accordingly linear satisfaction pentico likewise rudolph requiring efficiently report removes ified return approximating catches autonomous cessing employed preprocess tics quite inducing directly guarantees cirello accepts maximizing tically adjusted difficult transforming reinserts strating anew eter xeon improve rarely problems since university mixed units satisfiability repeat extra predict declines sports social automatic deviation decreasing requirement monotonically application evident online backtracking ysis stance extending increasingly depend vary maintain periodically calculus annealer objective sequencing terized randomization plementation defined tuning optimality sampling expected exchanges dent completed slow shortening actions shared increased conference association global timize ference variety taken reported executes mechanism takes generaterandominitialstate impacted though summarized exploiting call speculative confirm boring automated metric absolute showed progress cuss implies smith approximate numbers juan project operator zero late school details huge stability beforehand offers actual ensure lamrate boosting widely ital weight surprising incorrectly inate yale support higher periments shop memory countering shaped proximately approaching learning rahimian magnify losme mirrored common stronger schedules creasing proaches cases learned lution target massively layout gramming guidance quickly reasoning type nearby relation fpga stuck greater attempts grows exhibited double probability dates limiting dynamically matches analog determined utilize failing refined approximates internal hotspot methods priori range gorithms gain naturally finishes reduces pheromone curring categories minimizing demonstrated bagchi stress cient explore vegas efficient cool organized minimum sider tively data theoretical threshold tight mentations major described individual king like ubuntu workshop munications runtime gpgpus refers tabu solving critical purpose unexpected sellmann ficulty point network integrated operations paper restarted observations cutes ically sublimation move cpus limited advantage spent edges match allowing efficacy considern converges stockton favor cheng determining michalewicz", "type": "pdf", "text": "Variable Annealing Length and Parallelism in Simulated Annealing Vincent A. Cicirello In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 2-10. AAAI Press, June 2017. doi:10.1609/socs.v8i1.18424 Abstract In this paper, we propose: (a) a restart schedule for an adaptive simulated annealer, and (b) parallel simulated annealing, with an adaptive and parameter-free annealing schedule. The foundation of our approach is the Modified Lam annealing schedule, which adaptively controls the temperature parameter to track a theoretically ideal rate of acceptance of neighboring states. A sequential implementation of Modified Lam simulated annealing is almost parameter-free. However, it requires prior knowledge of the annealing length. We eliminate this parameter using restarts, with an exponentially increasing schedule of annealing lengths. We then extend this restart schedule to parallel implementation, executing several Modified Lam simulated annealers in parallel, with varying initial annealing lengths, and our proposed parallel annealing length schedule. To validate our approach, we conduct experiments on an NP-Hard scheduling problem with sequence-dependent setup constraints. We compare our approach to fixed length restarts, both sequentially and in parallel. Our results show that our approach can achieve substantial performance gains, throughout the course of the run, demonstrating our approach to be an effective anytime algorithm. Graphical Abstract", "url": "https://www.cicirello.org/publications/SoCS2017-Cicirello.pdf"},
	{"title": "Student Developed Computer Science Educational Tools as Software Engineering Course Projects - Journal of Computing Sciences in Colleges - 2017", "tags": "", "type": "html", "text": "Student Developed Computer Science Educational Tools as Software Engineering Course Projects Vincent A. Cicirello Journal of Computing Sciences in Colleges, 32(3): 55-61, January 2017. Abstract In a one semester course on software engineering for upper level computer science students, students typically learn the fundamental software processes spanning the software development lifecycle – from requirements specification through architectural design, implementation, testing, and evolution, along with the software tools that support the development activities. Courses in software engineering often incorporate semester long team projects, where students collaborate on a software development project. Thus, in addition to developing the technical skills associated with software development, the software engineering course is a common place where computer science students develop their skills in teamwork and collaboration, as well as in communications. The nature and type of projects in such courses varies. Some integrate projects where students develop software for \"real clients\" such as on campus departments, or local non-profits, while others have been increasing exposure to open source development with students contributing to existing open source projects. In our software engineering course, we have recently introduced course projects where teams of students specify, design, and implement software that assists computer science students in learning fundamental computer science topics. In this paper, we present our experience with such CS learning tool projects, including a discussion of the impact on student outcomes in a senior-level course on software engineering. We compare this experience to our prior use of \"real projects for real clients\" in this same course. We find that students who participate in the CS learning tool projects perceive an increase in learning progress on fundamental principles, theories, and factual knowledge, as compared to their peers in course sections with \"real projects for real clients,\" with an equivalent effect on teamwork and collaboration skills. Most surprisingly, the students who develop CS learning tools report a significantly higher level of progress on industrial relevant skill development as compared to the students who develop so called \"real projects for real clients.\"", "url": "https://www.cicirello.org/publications/cicirello2017ccsce.html"},
	{"title": "Student Developed Computer Science Educational Tools as Software Engineering Course Projects - Journal of Computing Sciences in Colleges - 2017", "tags": "project related significant rprcc topic knowledge system nationwide perceptions points different application idea problem additional choose clients objective teaching important solving soft version test provides world member jcsc comparison institutions sigcse working specific difference strengthening conference variety genetic view results eastern aspects hours interactive required enable collaborative work choice combination individual game player user stack evaluation gaining least search enabling meet discuss assessment dedicated little rather provided averages desktop previously mobile permission material service copyright proceedings relevance workstations rprccs high academic directly logs experiences chosen principles effective objectives maintain cover strengthen grade another seen reported popular assist consortium surprising needed experiential figure target deliverables operators copy organized data group format refers perceived week professionals groups references allowed interacting bring recognized areas setting projector understanding documentation applies assigned agile relative average midway adaptive communications systems behavior develops preferences procedure mounted freshman executions taught information liberal accomplishes deliverable retrieved observe correctly institution later adding copying female programming possibly needs static list onto users success final title explained conveying expanded ratings marginal averaged rprc live selecting enhancing practicing reviewing improvement form college select education focus attempt number ___________________________________________ combinational algorithm similar likely made specify distributed underlying intelligence mutation field explored conversions acquiring peer iticse ability together outcome implementing topics positive prototype framework future logic several upon mode undertake copies earlier publication communication regardless textbook discretion already ideas careers unit intervals improve essay focused termed since university mixed apportion reaching total design extra department algorithmic make allocated brief frontier social interesting control structure rated exams acknowledge activities writes sized discipline granted professional worked state meeting moderate proposal closely benefit critically node highest karnaugh receives crossover activity taken examined free arts surprised vice expression middle though replaced theories summarizes undergraduate partially resulted commercial phillips numbers reflecting rules instructors features school adjusting ccsc reflection maps might enhanced improving demonstrate implements drop benefits assessed memory submit show disappear fundamentally sorting throughout factor offerings incorporating summary cases apply center teach start derives artificial typical time applications forming rewarding assignments graphical feedback measures terms games specifically case meets contract capstone examples provide allocate requires direct cope theme protect deepening consistent suggest quizzed help assess coinciding first date small friendly assessing potential otherwise particular done produced effects person equivalently ground challenges part contribute interact scale platform differential general security database observations animations studies ceiling process advantage confidence radford boolean performance stockton various interaction simply", "type": "pdf", "text": "Student Developed Computer Science Educational Tools as Software Engineering Course Projects Vincent A. Cicirello Journal of Computing Sciences in Colleges, 32(3): 55-61, January 2017. Abstract In a one semester course on software engineering for upper level computer science students, students typically learn the fundamental software processes spanning the software development lifecycle – from requirements specification through architectural design, implementation, testing, and evolution, along with the software tools that support the development activities. Courses in software engineering often incorporate semester long team projects, where students collaborate on a software development project. Thus, in addition to developing the technical skills associated with software development, the software engineering course is a common place where computer science students develop their skills in teamwork and collaboration, as well as in communications. The nature and type of projects in such courses varies. Some integrate projects where students develop software for \"real clients\" such as on campus departments, or local non-profits, while others have been increasing exposure to open source development with students contributing to existing open source projects. In our software engineering course, we have recently introduced course projects where teams of students specify, design, and implement software that assists computer science students in learning fundamental computer science topics. In this paper, we present our experience with such CS learning tool projects, including a discussion of the impact on student outcomes in a senior-level course on software engineering. We compare this experience to our prior use of \"real projects for real clients\" in this same course. We find that students who participate in the CS learning tool projects perceive an increase in learning progress on fundamental principles, theories, and factual knowledge, as compared to their peers in course sections with \"real projects for real clients,\" with an equivalent effect on teamwork and collaboration skills. Most surprisingly, the students who develop CS learning tools report a significantly higher level of progress on industrial relevant skill development as compared to the students who develop so called \"real projects for real clients.\"", "url": "https://www.cicirello.org/publications/cicirello-ccsce-2016.pdf"},
	{"title": "Impact of Random Number Generation on Parallel Genetic Algorithms - International Florida Artificial Intelligence Research Society Conference - 2018", "tags": "", "type": "html", "text": "Impact of Random Number Generation on Parallel Genetic Algorithms Vincent A. Cicirello In Proceedings of the Thirty-First International Florida Artificial Intelligence Research Society Conference, pages 2-7. AAAI Press, May 2018. Abstract In this paper, we present a parallel genetic algorithm (pGA) with adaptive control parameters and permutation representation for weighted tardiness scheduling with sequence-dependent setups, an NP-Hard problem. This pGA provides a linear to slightly superlinear speedup relative to its sequential counterpart. As part of our research, we explore the effects of different random number generation algorithms on the runtimes of both sequential and parallel GAs. GAs and other forms of evolutionary computation rely so heavily on random number generation that our results show that we can obtain a 20% increase in the speed of a pGA, and an over 25% increase in the speed of a sequential GA, simply by careful choice of random number generator-both the underlying generator as well as algorithms for specific number types such as Gaussian often needed for mutating real-valued genes. Graphical Abstract", "url": "https://www.cicirello.org/publications/cicirello2018flairs.html"},
	{"title": "Impact of Random Number Generation on Parallel Genetic Algorithms - International Florida Artificial Intelligence Research Society Conference - 2018", "tags": "ziggurat population static polar size mutation total time crossover fixed threads threadlocalrandom method search setup problem instances faster tion much single subpopulation figure migration popsize prngs prng uniform first implementation fitness rate instance since times shows performance compared multiple local solution less thread generating benchmark splittablerandom values average statistical pgas prior existing duedate order rates cross deviation gaussians java araki difference varying many numbers implements dependent double provide requires runs runtime parameter optimal popi least gration lated tsang standard varies applied smin large sian nwox member stochastic alba high members congruential position plots vary generations ieee operator solve common factor integers selects work probability simulated computer proc elements small simple setups like insertion process edges parent equivalent leading selection science huang computers minimize summing logical information language pseudorandom exclude others programming volume loose child proportionate rather exhibits length significance approximately select entire four lower isolation impacts million interval server tions tial iterated table exploring report constant split comparison positions real chosen intervals problems design define tuned objectives maintain sampling flood benefit quality unique populations seed concurrent eliminate found reported executes maintains filling smith available juan bias uniformly dynamic generate solutions adapt region support higher annealing sudholt equal short reducing applications subpopulations three gens overhead totpopsize dynamically exact isolated operators initial lead evolving randomly data sukha percentage combination manually ferent solving colony convergence general tend highlight applying advantage instead variable cheng ations functions references evolved evaluation evolves rank combinatorial near thus preventing excellent splitmix require proportional splittable analysis version former apparent icantly magnified advancement left andmi drive greatly solvers strong weeks ters turn nealing communications journal haystack heuristics systems variations unlike procedures behavior paired completion sets borhood jobs tups fast odically initialize normality performs dotmix developed ances compute ignores later generated excluding implement multithreading displaces skipping perturb computational simplifying test need dieharder originally wrapping graph wiley external tails preserving little sults optimized smallest provided choose training fects symposium passes ensuring class just respects effectiveness enhancing directed outperform perform versus form management inherit multipopulation ments avoid inconsistency showing significantly copyright reaches configurations variation cores context decline model mapping researchers terministic testing vera index signed tioner system converge john plore farris larger positional tanaka cantly eight valid world rights share decisions ability costly recombine sequenced pentico likewise machine efficiently preceding removes eliminating several autonomous upon second jong ported identical gurat morgan mutatingci function directly communication cirello tablerandom icance stances maintaining reinserts rameters rigorous task xeon lists survey rarely university seminumerical harder universal diminishes mutated plays wheel bers requirement calrandom application online strategy adaptation calculus sizes randomization pact concurrently lawrence represented worker agement negligible pointers defined element inefficiency tuning genes investigating expected quent execute elitism slow adopt alternatives processing reinsertion except degrades shared conference association fundamental unusually permutations ulations current diversity ference biasing liao supports demonstrating landscapes languages ness riety though fluctuating makes heuristic ideally absolute increasing showed creases describe strength tedious individuals features school solves extreme offers ensure adapts boosting degree weight sharing equidistant luque difficulty longer suited measure leads neighborhood cially migrate memory classes nearly spawns bauer schedules wilcoxon grees libraries pair voss spins removal employ held tested quickly required feedback excluded loss measures optimization terms greater overtakes phase efficiency contention parallelization exist versions doubles mellon addison substantially theory dividing internal hotspot periodic methods uling direct carnegie gain naturally optimally reduces sentation minimizing explains inherits bagchi undergo enables established efficient restart consistent atomiclong tightness prone minimum levels date theoretical tight influence speeds tives basins lelism individual king ubuntu workshop island nearer solely important sequence epistatic equivalently effect spinning managing critical determines scientific frequent numeric error point necessarily aware candidate tive operations value distances amount original cpus treme spent bitstring arbitrary encounter outperforms stockton mean ligible tific locations latter", "type": "pdf", "text": "Impact of Random Number Generation on Parallel Genetic Algorithms Vincent A. Cicirello In Proceedings of the Thirty-First International Florida Artificial Intelligence Research Society Conference, pages 2-7. AAAI Press, May 2018. Abstract In this paper, we present a parallel genetic algorithm (pGA) with adaptive control parameters and permutation representation for weighted tardiness scheduling with sequence-dependent setups, an NP-Hard problem. This pGA provides a linear to slightly superlinear speedup relative to its sequential counterpart. As part of our research, we explore the effects of different random number generation algorithms on the runtimes of both sequential and parallel GAs. GAs and other forms of evolutionary computation rely so heavily on random number generation that our results show that we can obtain a 20% increase in the speed of a pGA, and an over 25% increase in the speed of a sequential GA, simply by careful choice of random number generator-both the underlying generator as well as algorithms for specific number types such as Gaussian often needed for mutating real-valued genes. Graphical Abstract", "url": "https://www.cicirello.org/publications/cicirello-flairs2018.pdf"},
	{"title": "JavaPermutationTools: A Java Library of Permutation Distance Metrics - Journal of Open Source Software - 2018", "tags": "", "type": "html", "text": "JavaPermutationTools: A Java Library of Permutation Distance Metrics Vincent A. Cicirello Journal of Open Source Software, 3(31), Article 950, November 2018. doi:10.21105/joss.00950 Abstract Permutations can represent a wide variety of ordered data. For example, a permutation may represent an individual’s preferences (or ranking) of a collection of products such as books or music. Or perhaps a permutation may represent a route for delivering a set of packages. Permutations can also represent one-to-one mappings between sets (e.g., instructors to courses at a fixed time). There are applications where measuring the distance between a pair of permutations is necessary. For example, a recommender system may assess the similarity of two individuals’ preferences for music to make song recommendations. Depending upon the application, the permutation features most important to distance calculation may be the absolute positions of the elements (e.g., one-to-one mappings), the adjacency of elements (e.g., the routing example), or general precedence of pairs of elements (e.g., music preferences). Thus, it is no surprise that there are many permutation metrics in the research literature. The motivation and origin of this library is our research on fitness landscape analysis for permutation optimization. In a permutation optimization problem, solutions are represented by permutations of some set, and the objective is to maximize or minimize some function. For example, a solution to a traveling salesperson problem is the permutation of the set of cities that corresponds to the minimal cost tour. During our research, we developed a Java library of permutation distance metrics. Most of the distance metrics in the literature are described mathematically with no source code available. Thus, our library offers convenient access to efficient implementations of a variety of metrics with a common programmatic interface. The library also provides metrics on sequences (strings and arrays of various types); where unlike a permutation, a sequence may contain multiple copies of the same element. The source repository (https://github.com/cicirello/JavaPermutationTools) contains source code of the library, programs that provide example usage of key functionality, as well as programs that reproduce results from papers that have used the library. API documentation is hosted on the web (https://jpt.cicirello.org/).", "url": "https://www.cicirello.org/publications/cicirello2018joss.html"},
	{"title": "JavaPermutationTools: A Java Library of Permutation Distance Metrics - Journal of Open Source Software - 2018", "tags": "search ieee evolutionary proceedings population genetic algorithms international conference transactions computer computation kendall pseudo edit volume measure congress addison operators scatter deviation stockton optimal functions maintain calculus combinatorial correlation citations information summarizes computational sorting evolution measures review work mutation exact table cyclic edge runtime license match references bution conducting cover evaluation locally evolves annual rank diverse interchange audience august ceedings pool require profiling deals squared reinsertion much infinite fundamental communications runtimes haystack ference computers compared landscapes ness aaai right possible radix metric istics florida generations developing compute later school studying need technologies discrete difficulty solve neighborhood memory searching generating learning society tunable related statement molecular just summary characteristics practical subsequence target artificial management software release wagner experimental type required variation metaheuristic model mutating seminal attempts similar tion biology nonbinary natural gene simulated metaheuristics classification peaks creative intelligence siam valleys authors longest scape retain functionality tions commons tance rithms acyclic generally reversal requiring machine organized first exponential theoretical schiavinotto space points morgan different reversals profiles comparing archive effects ranks techniques tabu lutionary correction problems instances normalized generator mixed point memetic seminumerical tional operations imization informs elevation inverse applying distances satisfy bioinspired structure spatially lengths extending properties", "type": "pdf", "text": "JavaPermutationTools: A Java Library of Permutation Distance Metrics Vincent A. Cicirello Journal of Open Source Software, 3(31), Article 950, November 2018. doi:10.21105/joss.00950 Abstract Permutations can represent a wide variety of ordered data. For example, a permutation may represent an individual’s preferences (or ranking) of a collection of products such as books or music. Or perhaps a permutation may represent a route for delivering a set of packages. Permutations can also represent one-to-one mappings between sets (e.g., instructors to courses at a fixed time). There are applications where measuring the distance between a pair of permutations is necessary. For example, a recommender system may assess the similarity of two individuals’ preferences for music to make song recommendations. Depending upon the application, the permutation features most important to distance calculation may be the absolute positions of the elements (e.g., one-to-one mappings), the adjacency of elements (e.g., the routing example), or general precedence of pairs of elements (e.g., music preferences). Thus, it is no surprise that there are many permutation metrics in the research literature. The motivation and origin of this library is our research on fitness landscape analysis for permutation optimization. In a permutation optimization problem, solutions are represented by permutations of some set, and the objective is to maximize or minimize some function. For example, a solution to a traveling salesperson problem is the permutation of the set of cities that corresponds to the minimal cost tour. During our research, we developed a Java library of permutation distance metrics. Most of the distance metrics in the literature are described mathematically with no source code available. Thus, our library offers convenient access to efficient implementations of a variety of metrics with a common programmatic interface. The library also provides metrics on sequences (strings and arrays of various types); where unlike a permutation, a sequence may contain multiple copies of the same element. The source repository (https://github.com/cicirello/JavaPermutationTools) contains source code of the library, programs that provide example usage of key functionality, as well as programs that reproduce results from papers that have used the library. API documentation is hosted on the web (https://jpt.cicirello.org/).", "url": "https://www.cicirello.org/publications/cicirello2018joss.pdf"},
	{"title": "Classification of Permutation Distance Metrics for Fitness Landscape Analysis - International Conference on Bioinspired Information and Communication Technologies - 2019", "tags": "", "type": "html", "text": "Classification of Permutation Distance Metrics for Fitness Landscape Analysis Vincent A. Cicirello In Proceedings of the 11th International Conference on Bio-inspired Information and Communication Technologies, pages 81-97. Springer Nature, March 2019. doi:10.1007/978-3-030-24202-2_7 Abstract Commonly used computational and analytical tools for fitness landscape analysis of optimization problems require identifying a distance metric that characterizes the similarity of different solutions to the problem. For example, fitness distance correlation is Pearson correlation between solution fitness and distance to the nearest optimal solution. In this paper, we survey the available distance metrics for permutations, and use principal component analysis to classify the metrics. The result is aligned with existing classifications of permutation problem types produced through less formal means, including the A-permutation, R-permutation, and P-permutation types, and has also identified subtypes. The classification can assist in identifying appropriate metrics based on optimization problem feature for use in fitness landscape analysis. Implementations of all of the permutation metrics, and the code for our analysis, are available as open source.", "url": "https://www.cicirello.org/publications/cicirello2019bict.html"},
	{"title": "Classification of Permutation Distance Metrics for Fitness Landscape Analysis - International Conference on Bioinspired Information and Communication Technologies - 2019", "tags": "edge deviation cyclic table edit permutations kendall reinsertion acyclic first squared length search number interchange five exact match reversal element undirected computing strongly subtype forms landscapes three computed elements cost ieee genetic correlates operators section evolutionary city cities eigenvalues randomly example compute mutation positions common tion minimum space edges deviations journal represent prior directed form positional cycle transform adjacent press correlations highest found absolute source time measures greater thus tation graph rtype random mapping transactions known high earlier relevant position since specific components many research measure needed classes runtime eigenvectors normalized swaps distances rank combinatorial pseudo strong matrix communications variations sets possible exclude others counterclockwise arranged related provides class identify slightly congress adjacency focus variation four easily eigenvalue algorithm order shorter algorithms longest library computation instance points directly chosen reinserts represents define calculus java circle crossover vertex last might longer fixed pair ronald work scape subgraph reference shows reversals general lookup implementation instead functions analyzing equations impact version essence mization sample added implement enumeration radius programming need count originally relatively precedences rather previously divide sampled subsequence formalize interpret called wagner pairwise block lower index binary interval proportion local tance satisfies bubble cumulative defining likewise removes complete vant second lists genetics make sevaux nature structure suggested properties moderately maintain objective extremely represented defined asymmetric starting vertices another long extended runtimes initialization ness tour operation operator separation scheduling dynamic generate equidistant coefficient neighborhood parameters higher string characteristics apply euclidean equal viation repository required terms enable simulated invariant provide primary triangle consistent lead replace cycles simple mendelian precedence originated potential otherwise important refers effect rotational insertion levenshtein largest instances point operations greatest costs original groups treating extent equivalent references conducting offer depending itory pass squares possess ternational easy population size selection profiling left much relative providing infinite least interprets choosing coding haystack heuristics experimentation term computers compared minimize boldface replicate aaai jobs right biometrika faced soviet fast sures returning fifth initialize wrap discuss font displaced later subdivides however additional provided divided choose representation producing rate molecular peat mergesort selecting practical captures bound multiple evolution modify erated salesperson moves inconsistency referred illustrates smaller delayed changing jacobi property context model likely similar nonbinary made topology testing specify traveling sense classified metaheuristics peaks removing relevance intelligence even siam acter valleys plication iterates categorized respectively tions erator gests pcas strings iterated ability continuum linear discussed change noisy ment produce removed machine efficiently cite strongest rotate codes measuring constant upon puted mutations morgan function sufficient implemented modified quite combine counting swap aligns hamming conducted sort tool directions mixed tors memetic effective times total tional transformed informs elevation circularly clockwise equation interesting bioinspired exactly consecutive spatially interested formally atsp insertions adaptation discussion anywhere defines maximize locally contribution lesser stick state portions sampling execute specifying atomic difference except minus increased examine executed examines neighboring seen variety plementations campos relationship though replaces structures makes entirely radix single extensively associated summarizes versal fourth implies dataset sion ement florida fischer pairs features isomorphic counterpart uniformly falsely results studying widely insufficient fits sections discrete difficulty cially concept generating learning minimal graphs tunable ally sorting interchanges summary figure slight wide start ciently kaufmann mappings artificial refer ones short step applications excludes software maximization desirable replicating type relation excluded review still identifies analog saving imations theory requires explicitly study variability weak fall scatter physics sult minimizing wherever enables bors indexing explore doklady observation quadratic suggest help additionally ation travel choice specifics small exponential theoretical data schiavinotto shown invariance inserting described hunt duced profiles capture comparing particular effects iterating reinserted minimization correlate techniques purposes tabu erators correction galloway sums covering mathematics values weakly distinct generator elsewhere stead necessarily induced observations correcting value cluding applying inverse process move bitstring alternative amortized stockton third inversions determining visit simply account", "type": "pdf", "text": "Classification of Permutation Distance Metrics for Fitness Landscape Analysis Vincent A. Cicirello In Proceedings of the 11th International Conference on Bio-inspired Information and Communication Technologies, pages 81-97. Springer Nature, March 2019. doi:10.1007/978-3-030-24202-2_7 Abstract Commonly used computational and analytical tools for fitness landscape analysis of optimization problems require identifying a distance metric that characterizes the similarity of different solutions to the problem. For example, fitness distance correlation is Pearson correlation between solution fitness and distance to the nearest optimal solution. In this paper, we survey the available distance metrics for permutations, and use principal component analysis to classify the metrics. The result is aligned with existing classifications of permutation problem types produced through less formal means, including the A-permutation, R-permutation, and P-permutation types, and has also identified subtypes. The classification can assist in identifying appropriate metrics based on optimization problem feature for use in fitness landscape analysis. Implementations of all of the permutation metrics, and the code for our analysis, are available as open source.", "url": "https://www.cicirello.org/publications/cicirello-bict2019.pdf"},
	{"title": "Kendall Tau Sequence Distance: Extending Kendall Tau from Ranks to Sequences - Industrial Networks and Intelligent Systems - 2020", "tags": "", "type": "html", "text": "Kendall Tau Sequence Distance: Extending Kendall Tau from Ranks to Sequences Vincent A. Cicirello Industrial Networks and Intelligent Systems, 7(23), Article e1, April 2020. doi:10.4108/eai.13-7-2018.163925 Abstract An edit distance is a measure of the minimum cost sequence of edit operations to transform one structure into another. Edit distance can be used as a measure of similarity as part of a pattern recognition system, with lower values of edit distance implying more similar structures. Edit distance is most commonly encountered within the context of strings, where Wagner and Fischer’s string edit distance is perhaps the most well-known. However, edit distance is not limited to strings. For example, there are several edit distance measures for permutations, including Wagner and Fischer’s string edit distance since a permutation is a special case of a string. However, another edit distance for permutations is Kendall tau distance, which is the number of pairwise element inversions. On permutations, Kendall tau distance is equivalent to an edit distance with adjacent swap as the edit operation. A permutation is often used to represent a total ranking over a set of elements. There exist multiple extensions of Kendall tau distance from total rankings (permutations) to partial rankings (i.e., where multiple elements may have the same rank), but none of these are suitable for computing distance between sequences. We set out to explore extending Kendall tau distance in a different direction, namely from the special case of permutations to the more general case of strings or sequences of elements from some finite alphabet. We name our distance metric Kendall tau sequence distance, and define it as the minimum number of adjacent swaps necessary to transform one sequence into the other. We provide two O(n lg n) algorithms for computing it, and experimentally compare their relative performance. We also provide reference implementations of both algorithms in an open source Java library.", "url": "https://www.cicirello.org/publications/cicirello2020inis.html"},
	{"title": "Kendall Tau Sequence Distance: Extending Kendall Tau from Ranks to Sequences - Industrial Networks and Intelligent Systems - 2020", "tags": "algorithm alphabet length size hash arrays primitive time runtime first section array objects object faster figure rank mapping transactions table endorsed systems sort character pairs average volume issue lengths lines copies queue compute second integers results discordant characters journal return defined comparing line unicode implemented generate inversions thus sorted correlation load just class proceedings large long sorting previous performance example search tail component empty count previously existing fagin order linear computation function appears specific notation experiments found available factor queues step experimental requires implementation evolutionary bucket left independent swapping remove random smaller block index iterates satisfies constant comparison applicable mapped position code represents head equation unique comparisons consistently varying knight operation ieee duplicate worse ascii types pair storing equal initially greater double means fewer clearly described done note original differ functions optimal require interpretation metrics replicate possible right generated representation congress four likely byte bits binary larger occurrence eight library upon body international regardless positions less true times ties suggested sizes conference preferred research five longer leads classes cases short specifically still undefined identity copy randomly data float shows otherwise penalty point parameter sufficiently explanation depending complex easy result term maximum generates reader leave duplicates searches finally list therefore applied provided related mergesort obviously form setup ments significantly straightforward entire shorter handle siam interval tuples circuit representations bubble integer simplifies nested modified shuffled transforming lists primitives exactly interested maintain represented difference components default unless genetic structures call appear fischer unequal summation loop uniformly last adapt buckets sections discrete coefficient worst higher allow show impose definition lookups characteristics refer repository type required loss tion extension methods triangle computer scatter reverse lead char exists assumptions combination like inversion iteration value costs requirements satisfy arbitrary instead references evaluates properly evaluation path assumption calculate strict definitions sorts hashmap addition pass whichever version adapted former population extend permits profiling simultaneously much deal statistical ordering achieve infinite equivalents least exchanging communications haystack heuristics unlike ordered preferences licensed sets collisions unlimited loops biometrika compares indices executions information concordant initialize encode performs notes added converting developed hold later prior rithm fitness adding chaining programming whered test need amend check graph relatively ofwagner rather javapermutationtools medium lent duplicated society achievable averaged relax custom false evolution handling realm subset reproduction referred explain copyright illustrates practice lexicographical american variants attempt soon variation tables metaheuristic else redefinition easily model ungrouped made vera distributed indiscernibles hashed negativity metaheuristics impacts classification propose resulting intelligence mutation system even strongly appearing farris server narrower cell literature known rithms rehashing side change overrides places machine equals comparable instance rehash identical high symmetry sufficient limit directly selected counting real clock orderings relevant license entry convenient scales translates present termed problems sortedness memetic running effective extra ranked transformed diminishes informs tied sevaux determine consecutive concerning application adaptations attribution forms exceeds vary counts adaptation sizem calculus cover nonsensical differently meaningless breaking exchanges processor conditions shared access association eliminate seen variety attribute iterate longermeets though many confirm showed describe florida expressing horizontal view dynamic starts ensure might solutions modification suppose technologies support memory figures sequential concept nearly figured vertical learning negative graphs common interest throughout lies sions every early ensures normal wide apply calculating windows editing artificial kendalltausequencedistance yields applications software illustrative three excluded cast problem terms optimization review enable proof meets method work hashcode reduced creative inequality versions doubles determined math hotspot range distribution commons specified operators consult power enables simplest observation expect songs connecting small exponential preferably transforms wrapper simple presented create potential package king accepted published core twice tabu correction mathematics normalized necessarily floating populates applying accrues advantage february alternative unchanged zoom enough stockton fulfilling latter landscape", "type": "pdf", "text": "Kendall Tau Sequence Distance: Extending Kendall Tau from Ranks to Sequences Vincent A. Cicirello Industrial Networks and Intelligent Systems, 7(23), Article e1, April 2020. doi:10.4108/eai.13-7-2018.163925 Abstract An edit distance is a measure of the minimum cost sequence of edit operations to transform one structure into another. Edit distance can be used as a measure of similarity as part of a pattern recognition system, with lower values of edit distance implying more similar structures. Edit distance is most commonly encountered within the context of strings, where Wagner and Fischer’s string edit distance is perhaps the most well-known. However, edit distance is not limited to strings. For example, there are several edit distance measures for permutations, including Wagner and Fischer’s string edit distance since a permutation is a special case of a string. However, another edit distance for permutations is Kendall tau distance, which is the number of pairwise element inversions. On permutations, Kendall tau distance is equivalent to an edit distance with adjacent swap as the edit operation. A permutation is often used to represent a total ranking over a set of elements. There exist multiple extensions of Kendall tau distance from total rankings (permutations) to partial rankings (i.e., where multiple elements may have the same rank), but none of these are suitable for computing distance between sequences. We set out to explore extending Kendall tau distance in a different direction, namely from the special case of permutations to the more general case of strings or sequences of elements from some finite alphabet. We name our distance metric Kendall tau sequence distance, and define it as the minimum number of adjacent swaps necessary to transform one sequence into the other. We provide two O(n lg n) algorithms for computing it, and experimentally compare their relative performance. We also provide reference implementations of both algorithms in an open source Java library.", "url": "https://www.cicirello.org/publications/eai.13-7-2018.163925.pdf"},
	{"title": "Optimizing the Modified Lam Annealing Schedule - Industrial Networks and Intelligent Systems - 2020", "tags": "", "type": "html", "text": "Optimizing the Modified Lam Annealing Schedule Vincent A. Cicirello Industrial Networks and Intelligent Systems, 7(25), Article e1, December 2020. doi:10.4108/eai.16-12-2020.167653 Abstract Simulated annealing is a metaheuristic commonly used for combinatorial optimization in many industrial applications. Its runtime behavior is controlled by an algorithmic component known as the annealing schedule. The classic annealing schedules have control parameters that must be set or tuned ahead of time. Adaptive annealing schedules, such as the Modified Lam, are parameter-free and self-adapt during runtime. However, they are also more complex than the classic alternatives, leading to more time per iteration. In this paper, we present an optimized variant of Modified Lam annealing, and experimentally demonstrate the potential significant impact on runtime performance of carefully optimizing the annealing schedule.", "url": "https://www.cicirello.org/publications/cicirello2020inis2.html"},
	{"title": "Optimizing the Modified Lam Annealing Schedule - Industrial Networks and Intelligent Systems - 2020", "tags": "original cost length version number problem random solution function runs value acceptance restarts neighbor statistically permutation algorithm parallel results transactions faster average systems rate temperature computing proceedings lengths endorsed exponentiations much neighborhood search issue volume even java found target table conference first local upon difference longer distance short international experiments polynomial source onemax lamrate line iteration root section test just else library high long restart compute times genetic neighbors case shows shown vectors approximately since solutions work versions optimal information boundmax applications acceptrate differences computes values prior large bits return integer problems code variety vector common software like placement haystack generates lines mutation last iterations savings path relative pseudocode averages related class likely computation adjusted github permutations current cases space near decreases implemented define defined ieee generating experimental generation depends minimizing process evolutionary depending journal column rather symposium delosme several different decision open generate ensure solve previous uniform initialized lead elements accepted sequence network advantage implementation variable shortest planning selection size metrics independent multiple referred called similar fiber distributed algorithms stochastic multistart product automation optimize less hybrid monotonically benchmarking generaterandominitialstate operator actual might overall start three specifically probability computer openjdk combination effects part increase wireless equivalent optimizations choosing rithm adjust final bound form report constant main physical extremely benefit single confirm available exponentiation update figure repository fpga enable cooling foreign optimally cool data maven parameter track match references energy inspired ture statistical particle multiplication minimize representing transmission others need adjustment applied choose precisely compiled gaussian order traveling linear produce earlier quite maintained maximizing acoustic sensor effective design rates cache replaces replaced metric summarizes optical research glass fixed early effectively windows pair equal analog provide boyan initial efficient levels simple important critical integrated designed enough evaluation accepting documentation deal compare assembly compared added developed train finally graph exhibits optimizes ludwin strictly advanced metal longest exponentially change complete communication hamming chosen tenth investigate total determine decreasing observed execute substantial accept generalization underwater programs executed global supports operating releases transportation hill increasing showed operation inside trivially loop details extreme discrete changed implements basics changes learning artificial whole integers terms exact internal range tools expect exponential theoretical instances paper cools balancing swarm functions slower properly navigate maintainers thus require permits stop science returns spends least turn uncertainty measurement example balances close flip website licensed unlimited entering suite istics initialize exploit discuss controls reader dominate reproduce leave fitness implement predetermined provided searching medium society previously reinforcement usages significance modify nology moves reproduction copyright named smaller focus arithmetic gained liang shorter shape testing metaheuristics propose intelligence system farris larger iterates functionality matter isolating representations cell electronic share redundancy discussed reproducibility speedup climber requiring subproblems measuring implementer autonomous updating puter comparison swap positions october collect recomputed technique simpler tional extra chose zhichao metallurgy automatic specific conduct application stable partitioning strategy forms decay maximize locally represented element tuning expected sampling picks slow comparisons simulink increased anomaly another deterministic increases ference taken takes modifying dancy biomedical speculative gradle multiplications uavs view white things stability realize adapt engineering downloaded decrease technologies yale updated novelty hidden classes nearly show description settling rahimian updates mirrored central evaluations ence appropriately kaufmann earliest massively urban markov risk forming quickly decide program modest temperatures images double matches creative approximated mellon bounds requires prebuilt methods settle priori commons consult stress desire explore electricity great encountered randomly choice small caching influence cloud presented feasible speeds otherwise package king stresses logically workshop particular gpgpus produced puting handbook colony numeric general sigspatial restarted reject discards optima rest alternative encounter build valued interaction latter reduction simply mostly projects analyzing offer tionally investigated happen swartz grow devised kirkpatrick salsa route trying oceans evaluating ordering isolate spacing national spreads enabling bitvector right sample maximum daryanavard later heating computational needs typically turing regarding take celebration varies parts relatively zamli dinh reporting digital existing significantly straightforward fibers simulation discount zhang convert attempt soon balance four easily unaware modifiedlamoriginal spatial reduce python made topology lower vera classification resulting flipping evaluate server restarting simulatedannealing inference progressively tournament minimized literature ability implementations minimizes implementing defining ment efficiently instance dimensional cotton second maximizes claim expressed regardless roots picking license mixed positioning imported modifiedlam social concerning attribution increasingly vary counts periodically calculus objective accessing released betz quality concepts processing stops crossover access eliminate seen linearity store appear definitely associated joint numbers boltzmann zero regularly unusual achieving harifi internet installed decompose detect multiplied interest istic lakes coverage apply technology layout removal location reach maximization desirable type relation feedback seconds connection phase exhibited efficiency still examples terminate classical isolated distribution specified carnegie cached reward fraction fake adequate fewer cismaru publishers decays lelism development individual ubuntu published manufacture iterating proposed minimization bioinformatics vlsi scale deployed swaps tune operations spend observations studied groups allowing instead expensive stockton currently challenge landscape", "type": "pdf", "text": "Optimizing the Modified Lam Annealing Schedule Vincent A. Cicirello Industrial Networks and Intelligent Systems, 7(25), Article e1, December 2020. doi:10.4108/eai.16-12-2020.167653 Abstract Simulated annealing is a metaheuristic commonly used for combinatorial optimization in many industrial applications. Its runtime behavior is controlled by an algorithmic component known as the annealing schedule. The classic annealing schedules have control parameters that must be set or tuned ahead of time. Adaptive annealing schedules, such as the Modified Lam, are parameter-free and self-adapt during runtime. However, they are also more complex than the classic alternatives, leading to more time per iteration. In this paper, we present an optimized variant of Modified Lam annealing, and experimentally demonstrate the potential significant impact on runtime performance of carefully optimizing the annealing schedule.", "url": "https://www.cicirello.org/publications/eai.16-12-2020.167653.pdf"},
	{"title": "Chips-n-Salsa: A Java Library of Customizable, Hybridizable, Iterative, Parallel, Stochastic, and Self-Adaptive Local Search Algorithms - Journal of Open Source Software - 2020", "tags": "", "type": "html", "text": "Chips-n-Salsa: A Java Library of Customizable, Hybridizable, Iterative, Parallel, Stochastic, and Self-Adaptive Local Search Algorithms Vincent A. Cicirello Journal of Open Source Software, 5(52), Article 2448, August 2020. doi:10.21105/joss.02448 Abstract Discrete optimization problems are often of practical real-world importance as well as computationally intractable. For example, the traveling salesperson, bin packing, and longest common subsequence problems are NP-Hard, as is resource constrained scheduling, and many single-machine scheduling problems. Polynomial time algorithms for such problems are unlikely to exist, and the best known algorithms that guarantee optimal solutions have a worst-case exponential runtime. It is thus common to use stochastic local search and other metaheuristics. Stochastic local search algorithms begin at a random search state, and apply a sequence of neighbor transitions to nearby search states. This includes perturbative algorithms like simulated annealing and hill climbers, where each search state is a complete candidate feasible solution, and a mutation operator makes a small random modification to move to another local candidate solution; and also includes constructive algorithms like stochastic samplers, where each search state is a partial solution that is iteratively transformed into a complete solution. Stochastic local search algorithms do not guarantee optimal solutions. However, they often find near-optimal solutions in much less time than systematic search. They also offer an anytime property, where solution quality improves with runtime. Chips-n-Salsa is a Java library of customizable, hybridizable, iterative, parallel, stochastic, and self-adaptive local search algorithms. Its focus is discrete optimization, but also supports continuous optimization. The library provides a variety of solution representations, including BitVector and IntegerVector classes, indexable vectors of bits and integers, respectively, along with corresponding mutation operators. The library utilizes our significant prior research on permutation optimization problems, providing an extensive set of mutation operators for permutations, including window-limited mutation. It uses the JavaPermutationTools (JPT) library for efficiently representing solutions to such problems. For continuous problems, Chips-n-Salsa provides a RealVector class, Gaussian mutation, Cauchy mutation, and uniform mutation. The library includes optimization problems useful for benchmarking metaheuristic implementations, such as the well-known OneMax problem, BoundMax (generalization of OneMax to integers), the Permutation in a Haystack problem, and polynomial root finding. The repository (https://github.com/cicirello/Chips-n-Salsa) contains the library source code, and programs with examples of key functionality. API and other documentation is hosted on the web (https://chips-n-salsa.cicirello.org/). The library can be integrated into projects using maven via GitHub Packages.", "url": "https://www.cicirello.org/publications/cicirello2020joss.html"},
	{"title": "Chips-n-Salsa: A Java Library of Customizable, Hybridizable, Iterative, Parallel, Stochastic, and Self-Adaptive Local Search Algorithms - Journal of Open Source Software - 2020", "tags": "conference proceedings evolutionary genetic artificial international aaai problem intelligence sampling adaptive multiple algorithm metaheuristics biased national information distance schedules applications easily computer computation hybrid handbook parallel forms architectures combinatorial impact processing solvers multicore computers florida features school boosting need neighborhood society form number generation traditional mellon theory integrating carnegie jenetics implementations enables restart first several portfolio climbing approximation license computing design execution specific performance methologies variable climbers developments references functions calculus conducting evaluation randomization concurrently diverse flowshop audience ceedings adapted planning profiling selection creating pling emili randomized sustainable robotics notable global permutations ization routing communications varying heuristics systems variations procedures minimize enabling fourteenth heuristic operational combining hybrids exploiting june exploit project retrieved ieee fifteenth computational european iterative samplers isting volume technologies homogeneous putationally acceptance support basics hidden companion optimized provided parallelism learning generating papers speed symposium related potvin statement customizing summary enhancing types characteristics robles libraries length generic target schedule gramming markov developer copyright practice software advanced release type thirteenth review property connection tionary dependent guide tion natural work probability nonsystematic oddi transactions creative authors inference retain gorithms bands representations commons vehicle costly multistart wherever porting gendreau vegas noteworthy speedup lahaye alessio framework skewed constraint choice instance mature eliminating autonomous cloud optimize morgan accelerate modified streamline workshop intimately profiles runtime archive effects gabriela countless focused principles survey tenth instances multithreaded simpler tune running general tive operations satisfiability value tied threads automatic control intelligent industrial boolean stockton lengths attribution stages online", "type": "pdf", "text": "Chips-n-Salsa: A Java Library of Customizable, Hybridizable, Iterative, Parallel, Stochastic, and Self-Adaptive Local Search Algorithms Vincent A. Cicirello Journal of Open Source Software, 5(52), Article 2448, August 2020. doi:10.21105/joss.02448 Abstract Discrete optimization problems are often of practical real-world importance as well as computationally intractable. For example, the traveling salesperson, bin packing, and longest common subsequence problems are NP-Hard, as is resource constrained scheduling, and many single-machine scheduling problems. Polynomial time algorithms for such problems are unlikely to exist, and the best known algorithms that guarantee optimal solutions have a worst-case exponential runtime. It is thus common to use stochastic local search and other metaheuristics. Stochastic local search algorithms begin at a random search state, and apply a sequence of neighbor transitions to nearby search states. This includes perturbative algorithms like simulated annealing and hill climbers, where each search state is a complete candidate feasible solution, and a mutation operator makes a small random modification to move to another local candidate solution; and also includes constructive algorithms like stochastic samplers, where each search state is a partial solution that is iteratively transformed into a complete solution. Stochastic local search algorithms do not guarantee optimal solutions. However, they often find near-optimal solutions in much less time than systematic search. They also offer an anytime property, where solution quality improves with runtime. Chips-n-Salsa is a Java library of customizable, hybridizable, iterative, parallel, stochastic, and self-adaptive local search algorithms. Its focus is discrete optimization, but also supports continuous optimization. The library provides a variety of solution representations, including BitVector and IntegerVector classes, indexable vectors of bits and integers, respectively, along with corresponding mutation operators. The library utilizes our significant prior research on permutation optimization problems, providing an extensive set of mutation operators for permutations, including window-limited mutation. It uses the JavaPermutationTools (JPT) library for efficiently representing solutions to such problems. For continuous problems, Chips-n-Salsa provides a RealVector class, Gaussian mutation, Cauchy mutation, and uniform mutation. The library includes optimization problems useful for benchmarking metaheuristic implementations, such as the well-known OneMax problem, BoundMax (generalization of OneMax to integers), the Permutation in a Haystack problem, and polynomial root finding. The repository (https://github.com/cicirello/Chips-n-Salsa) contains the library source code, and programs with examples of key functionality. API and other documentation is hosted on the web (https://chips-n-salsa.cicirello.org/). The library can be integrated into projects using maven via GitHub Packages.", "url": "https://www.cicirello.org/publications/cicirello2020joss.pdf"},
	{"title": "Self-Tuning Lam Annealing: Learning Hyperparameters While Problem Solving - Applied Sciences - 2021", "tags": "", "type": "html", "text": "Self-Tuning Lam Annealing: Learning Hyperparameters While Problem Solving Vincent A. Cicirello Applied Sciences, 11(21), Article 9828, November 2021. doi:10.3390/app11219828 Abstract The runtime behavior of Simulated Annealing (SA), similar to other metaheuristics, is controlled by hyperparameters. For SA, hyperparameters affect how temperature varies over time, and temperature in turn affects SA’s decisions on whether or not to transition to neighboring states. It is typically necessary to tune the hyperparameters ahead of time. However, there are adaptive annealing schedules that use search feedback to evolve the temperature during the search. A classic and generally effective adaptive annealing schedule is the Modified Lam. Although effective, the Modified Lam can be sensitive to the scale of the cost function, and is sometimes slow to converge to its target behavior. In this paper, we present a novel variation of the Modified Lam that we call Self-Tuning Lam, which uses early search feedback to auto-adjust its self-adaptive behavior. Using a variety of discrete and continuous optimization problems, we demonstrate the ability of the Self-Tuning Lam to nearly instantaneously converge to its target behavior independent of the scale of the cost function, as well as its run length. Our implementation is integrated into Chips-n-Salsa, an open-source Java library for parallel and self-adaptive local search.", "url": "https://www.cicirello.org/publications/cicirello2021applsci.html"},
	{"title": "Self-Tuning Lam Annealing: Learning Hyperparameters While Problem Solving - Applied Sciences - 2021", "tags": "acceptance rate length iteration percent solution tuning average runs million function figure algorithm significant time statistically rates neighbor table random solutions minimum difference section global algorithms iterations minimizing initial case else value minimize proceedings found neighbors short current figures first original problems define phase optimal upon results lower international equation quality seen onemax much number change several since conference single throughout optimally constants costs compute defined genetic extremely estimate consistently cases source longer show three differences increase rather optimized accepts experiments solve higher samples data distributed optimum leads neighborhood effectively matches requires impact relative later return cities many available terms exponential accepted match near shortest version order earlier idealized probability shown vectors values september equivalent accepting significantly longest constant code accept long superior cooling instances functions sufficiently achieves previously stochastic unit scales october solves start equal quickly trap explore optima maximum prior test just tables four different boltzmann recall like moving planning selection information generates need adjustment traveling comparison less running lengths ieee research worse applications experimental twomax utilize computed portion computer levels mean path assumption strict compare pseudocode attempt easily known exploring instance faster magnitude declines control vary maintains hill increasing open details treated lamrate common definition derive note computing instead performance fluctuate exponentiations size example sets respect achieved mutation even reproducibility hyperparameter incurs times design specific monotonically walk benchmarking discussion optimizing expected increased summarizes solved actual might adapt decrease parameters generating acceptrate required specifically tion depends provide openjdk randomly small simple shows potential described effects colony part point process build depending swartz utilizing june commonly parts additional related practical trajectory existing approximately likely large afford december characterized exponentially computation machine chosen transform allows observed objective vector adjusting generate ensure calculating enable still work versions distribution uniform expect operations observations combinatorial thus require squared ture achieve least variations rationale initialize controls predefined generated others provided prevent compiled lines significance salesperson gaussian slightly shorter fiber testing impacts academies illustrated climber future scaled equally automation academic oscillations guaranteed hybrid heated rarely converging artificially industrial tuned remainder forms caught defines maximize sampling comparisons reside matching varying tour scheduling attractive last insufficient weight engineering institutional hidden central factor cooled windows markov measured broad savings settle boyan efficient anytime encountered percentage otherwise timing workshop refers tabu effect produces limitation necessarily reject visually wildly alternative eighth encounter enough converges listed various evolutionary simply inflexion examining ters isolate assembly national term enabling possible procedure deterministically graph final little symposium oscillates specification strictly form avoid showing explain lunch discount inspection made inference together delosme likewise complete second morgan sufficient directly waste level true tenth appears algorithmic make determine decreasing exactly rapidly depend empirical adaptation github except examine supports free decision closer confirm definitely associated showed adapts extract drop changes graphs every characteristics previous artificial software repository seconds simulate method theory logarithmic observation cool lead theoretical fewer space exploration maven restarts estimation sequence purpose line error parameter abbreviations edges currently variable exception references leading explanation theorems slower setting equations saves visual springer energy internally dealing behaving neutral inspired rewrite endorsed stop perature science returns arrives providing suffice subsequently balances particle close estimating computers website redefining licensee learn component decreases readers flips accelerates wrap standard instructions couple official good reproduce transmission excluding contributed making predetermined originally list consent escaped external spending outperformed claims choose accomplish arranged provides hard perform mobile evolution ments taking called release outperforming overlooked focus arithmetic changing entire experiment flow went foundations adjusts metaheuristics slowly relevance intelligence forrester strongly analyze farris integrating city matter cell valid electronic redundancy multistart linear robust produce alternates regard unreasonable constraint removes movement nugget minor autonomous declares optimize implemented quite representative counting already acoustic applicable basin real affected intervals improve sensor curacy jurisdictional direction tunes mdpi performing automatic maximal chooses analogy suggested cancels application interested strategy accurate farther compiling concern locally builds formulation state contrasted models separately pace completed vations theorem eliminates choices randomized simulink another deterministic guarantee availability networks anyway increases default sumofdifferences scenario attribute distribute popular escape validate generaterandominitialstate vice scaling biomedical describe optical spaced operator sciences features openly white rewriting things instantiation estimates whatever practicality measure yale worst fixed updated shop import distance description drops minimal surrogate derived enhance overcompensates ence estimated kaufmann pair detailed refer typical initially finance modeling extracting kluwer excluded identified confirming stuck truly utilized double dynamically lowest creative analog mellon determined refined reset matched completely approximates primary dividing study methods direct pattern consume commons smart plateau enables decomposed consistent electricity continuously freeman permanent organized summarize board statistics replace assumptions cloud detailing theoretically robots combination king done produced stays formal square creates salesman largest veloped handbook convergence numeric lation declining sigspatial induced ackley designed rest amount heavily outperforms favor prohibitively interaction wireless latter reduction extracted offer evaluation record manufacturing knowledge synchronize posit july easy domain oceans makespan robotics accelerating investments choosing spacing systems unlike subsequent empirically paired slicing replicate incorrect carlos performs putting added fied observe accounted garment programming computational train finally count turing wiley vision take celebration adjust however derivations importance parallelism averages explained redefine perhaps incrementally minimums digital outperform obviously decades straightforward practice advanced simulation improves tially variants rerun balance itemized spatial metallurgic issue researchers topology metal vera bell resulting practitioners qualifies siam john fewest escaping server proportion drawbacks eight defining deriving report connectionist networking main integer communication regardless author adjusted logarithms heart plus wanders license principles mixed switch total positioning repeat ature mutated attempting chance intelligent processed attraction attribution online contribution ongoing meaningfully released closely substantial vastly underwater processing programs conditions starting access superiority overcome association industry executed eliminate unusually collecting manages incurred exploiting releases transportation appear fish creases iteratively operation calculation joint downlink approximate pairs presentation subsections iglesias maps replacing modification look sections multiplying achieving failure coefficient internet conflict allow basics imparting sequential needed speed tunable settles conflicts coverage allocation slight wide inferior euclidean technology indeed layout step location passing mark maximization type april relation scalings review connection controlling guide attempts proach exhibited goal noma fail exact internal regions classical range foundation carnegie foreign replicability pared course initialized place event regular", "type": "pdf", "text": "Self-Tuning Lam Annealing: Learning Hyperparameters While Problem Solving Vincent A. Cicirello Applied Sciences, 11(21), Article 9828, November 2021. doi:10.3390/app11219828 Abstract The runtime behavior of Simulated Annealing (SA), similar to other metaheuristics, is controlled by hyperparameters. For SA, hyperparameters affect how temperature varies over time, and temperature in turn affects SA’s decisions on whether or not to transition to neighboring states. It is typically necessary to tune the hyperparameters ahead of time. However, there are adaptive annealing schedules that use search feedback to evolve the temperature during the search. A classic and generally effective adaptive annealing schedule is the Modified Lam. Although effective, the Modified Lam can be sensitive to the scale of the cost function, and is sometimes slow to converge to its target behavior. In this paper, we present a novel variation of the Modified Lam that we call Self-Tuning Lam, which uses early search feedback to auto-adjust its self-adaptive behavior. Using a variety of discrete and continuous optimization problems, we demonstrate the ability of the Self-Tuning Lam to nearly instantaneously converge to its target behavior independent of the scale of the cost function, as well as its run length. Our implementation is integrated into Chips-n-Salsa, an open-source Java library for parallel and self-adaptive local search.", "url": "https://www.cicirello.org/publications/applsci-11-09828.pdf"},
	{"title": "Software Articles and Open Source Research Software: The Why, the What, and the How - Cognitive Communications - 2021", "tags": "", "type": "html", "text": "Software Articles and Open Source Research Software: The Why, the What, and the How Vincent A. Cicirello EAI Endorsed Transactions on Cognitive Communications, January 2021. doi:10.4108/eai.28-1-2021.168507 Editorial from Co-Editor-in-Chief. Online First. Abstract In this editorial, I make the case for why you should write and publish software articles about your open source research software. I begin by discussing some of the benefits of releasing your research software as an open source project. Then, I explain what a software article is in general, as well as why you should consider writing one about your research software, such as increased reproducibility, increased software reuse, the potential to increase the impact that your research has on the work of others, the potential to gain new collaborators, among other advantages. Open source enables these things, and software articles enhance the process by increasing discoverability, as well as by placing the software within a broader research context. I then discuss how to proceed to write a software article more specifically for submission to the EAI Transactions on Cognitive Communications, using either the \"research article\" or \"short communications\" article types.", "url": "https://www.cicirello.org/publications/cicirello2021cogcom.html"},
	{"title": "Software Articles and Open Source Research Software: The Why, the What, and the How - Cognitive Communications - 2021", "tags": "communications code journal paper papers simulation short others link novel perhaps related scope existing radio specific discussion experiments types time type primary first implement release model text likely system implementations several relevant design contribution publishing available details problem enable regular reusable implementation depending gaining science archiving integral compares integrate reproduce repositories focus algorithm researchers journals relevance traditional million algorithms functionality reproducibility topics framework cite upon discusses directly license focused consumer productive github devoted expected components zenodo another serving validate describe sion results might show experimental repository researcher utilize reusability computer ways small data major reproducible producer part network computing reuse projects references sufficiently evaluates building properly analyzing evaluation contributions strict addition limitations adequately thus active community packages easy version submitted permits domain innovating much relative statistical role hosting example bugs citations embedded develops enabling website licensed learn unlimited rationale meet readers thank haider reader developed recommendations analytics generalist programming possibly needs making test need list graph users beneficial helps little technical rather roles choose medium primarily provides reimplement reporting covers length multiple mobile strictly versus form service significantly reproduction copyright entire number peerj experiment context easily reproduces validation shorter large understand vera distributed underlying alludes jointly even integration foreseeable snapshot farris authors confident literature library together amidst question discussed vetted machine future presumably scaled subject feel solution earlier academic sufficient publication host implemented reviewed links credit maintained international guarantees read differs sustainability ulation principles present since effective ties plays nature contributing bioinspired opening activities attribution vary maximize supplementing substantial benefit quality concepts figshare access conference activity maybe probably executed ware recommend long seem increases archived found joss unless reported actively operating mechanism discovering many describes jors associated vast technological smith project features openly written generate ensure develop collection engineering whatever improving leads fields parameters suggesting support idea needed privacy description common daunting effectively artificial modeling excludes terms greater creative examples exact theory stated requires methods distribution commons theme consult explains lead additionally summarize cloud growing outlined assessing described king suitability like accepted refereed archive published important absolutely publishes note purpose values scientific contribute founders integrated general alone ready discoverability requirements original clear instead performance stockton mean wireless normally", "type": "pdf", "text": "Software Articles and Open Source Research Software: The Why, the What, and the How Vincent A. Cicirello EAI Endorsed Transactions on Cognitive Communications, January 2021. doi:10.4108/eai.28-1-2021.168507 Editorial from Co-Editor-in-Chief. Online First. Abstract In this editorial, I make the case for why you should write and publish software articles about your open source research software. I begin by discussing some of the benefits of releasing your research software as an open source project. Then, I explain what a software article is in general, as well as why you should consider writing one about your research software, such as increased reproducibility, increased software reuse, the potential to increase the impact that your research has on the work of others, the potential to gain new collaborators, among other advantages. Open source enables these things, and software articles enhance the process by increasing discoverability, as well as by placing the software within a broader research context. I then discuss how to proceed to write a software article more specifically for submission to the EAI Transactions on Cognitive Communications, using either the \"research article\" or \"short communications\" article types.", "url": "https://www.cicirello.org/publications/eai.28-1-2021.168507.pdf"},
	{"title": "Cycle Mutation: Evolving Permutations via Cycle Induction - Applied Sciences - 2022", "tags": "", "type": "html", "text": "Cycle Mutation: Evolving Permutations via Cycle Induction Vincent A. Cicirello Applied Sciences, 12(11), Article 5506, June 2022. doi:10.3390/app12115506 Abstract Evolutionary algorithms solve problems by simulating the evolution of a population of candidate solutions. We focus on evolving permutations for ordering problems such as the traveling salesperson problem (TSP), as well as assignment problems such as the quadratic assignment problem (QAP) and largest common subgraph (LCS). We propose cycle mutation, a new mutation operator whose inspiration is the well-known cycle crossover operator, and the concept of a permutation cycle. We use fitness landscape analysis to explore the problem characteristics for which cycle mutation works best. As a prerequisite, we develop new permutation distance measures: cycle distance, k-cycle distance, and cycle edit distance. The fitness landscape analysis predicts that cycle mutation is better suited for assignment and mapping problems than it is for ordering problems. We experimentally validate these findings showing cycle mutation’s strengths on problems such as QAP and LCS, and its limitations on problems such as the TSP, while also showing that it is less prone to local optima than commonly used alternatives. We integrate cycle mutation into the open source Chips-n-Salsa library, and the new distance metrics into the open source JavaPermutationTools library.", "url": "https://www.cicirello.org/publications/cicirello2022applsci.html"},
	{"title": "Cycle Mutation: Evolving Permutations via Cycle Induction - Applied Sciences - 2022", "tags": "length swap insertion since proceedings number algorithm elements genetic random fixed reversal average scramble cycles runtime graph conference element section search international operators cost diameter positions results edge optimization sampling absolute three solution kmax points case salesman single optimal compute larger neighborhood small solutions time relative july large transform figure upon evaluations pair maximum computation instance calculus uniformly graphs first strongly indexes measures probability convergence induced satisfies constant cases regular edges thus function define forms represented requires likely many vertex correlation perform triangle petersen vertexes table different cities children derive near example others smaller similar java tour ieee isomorphic significant measure depends simulated effect strong statistically library known change second position equation minimum runs instances operations matrix variations order worst computed values parallel equivalent impact rate topological chosen parents code properties landscapes integers fewer computing array leading size poorly sets list called linear comparison application lengths computer asymptotic integrated context lower longest relevant make necessary higher superior premature exist lead parameter combinatorial proportional version independent therefore multiple experiment earlier rates suggested generalized increases metric implies research engineering show applications greater means consistent january shows important point various depending possible test rather exhibits directed existing form implementations return subject inducing directly focused present august except experiments available learning every singleton step natural theory uniform space argmin solving line performance functions planning science achieve behavior volume precedences child suitable gaussian metaheuristics reachable even analyze costly produce converging design adjacent industrial expected creating difference networks implied call summarizes generating negative experimental utilize travel cyclic combination tabu simply evaluation greatly compare utilizing assembly pseudocode language later computational count final little related merged subsequence significantly straightforward congress index resulting asks interval machine suggests transformed control objective extremely edits exhibit github asymmetric starting shared long variety vector decision heuristic operation trivially variant five generate annealing maximization loss enable exact identity expect exists data sequence note paper value mutate instead swarm understanding selection result minimize ordered information tation november good dominate generated need respect external handling reservoir adjacency accessed variation property proceed foundations indiscernibles academies prematurely valid reproducibility constraint removes automation academic implemented hybrid improve sensor represents effective times performing automatic chooses formally tations discussion defines locally notation protein annual lawrence state defined interchange picks comparisons alternatives randomized characterizing limits classic strength challenging summation neighbors scheduling retaining weight longer institutional leads nearly sorting wilcoxon delivery identified specifically generation tion utilizes provide determined matched methods openjdk computes suffers efficient choice randomly levels offspring transforms simple influence shown presented configured workshop creates induces handbook general september rest original third wireless parent evolves complex rank soft route formed implying choosing adaptive systems national pearson performs observe prior diameters parts virtual relates symposium disruptive approximately cycling else bits invalid focuses relabeling likewise efficiently sign integer mutations morgan approximation maximized difficult true total mutates allows determine exactly structure easier composite receives interpreted association expression strategies associated showed partially pairs trivial ensure demonstrate changed needed tunable summary types inferior apply artificial software april selects review inequality naturally transformation clearly erlbaum createcycle proposed abbreviations distances costs satisfy match variable independently illustrating obfuscating references sufficiently machined slower poor springer shortest unlikely solid pool neutral require inspired sorted left placement much arrives providing least pevzner interprets hybridized subsequently exchanging haystack heuristics particle computers address licensed overtaking licensee density aaai probabilistic representing union predictions fast wrap inserts novel standard addressing instructions achieves analyses reproduce weighted predetermined finite consent contributes outperformed claims exchange preserving smallest provided choose representation compiled society producing arranged previously provides behavioral scope molecular hard reinforcement tutorial lines sampled furthest sidekick mobile improvement noted significance undertaking moves referred outperforming adaptively bottleneck distributed adjusts isolation impacts intelligence system binary toolbox farris authors circuit matter restrict representations isolating equidistantly stochastic particularly robust dominant attributed intellectual genome mauri requiring regard strongest equally declares symmetry ized maximizing avoids differs applicable maintaining reinserts quantify reconcile violation mapped october nonconvex jurisdictional ensemble media running satisfiability convex construction explanations direction mdpi maximal requirement specific reverses despite consecutive ernvall conduct tuned partitioning inductive accurate compiling randomizes isomorphism maximize lesser merge discussing models tuning neighborhoods exchanges automorphisms correlations induce eliminates theorem offering molecule calculations circle dominates another students availability worth matching diversity demonstrating detection malware replaced florida solved align individuals sciences inherent travelling last widely relaxations worse drone difficulty technologies improving checks overall parameters away string central impose surrogate start spares kaufmann windows lution target equal refer guidance cauchy palo modeling infeasible consistency kluwer options circuits grows creative junior addison completely primary ants study differences reliability direct presentations commons smart gain vehicle ways inheriting minimizing enables masking survive reverse freeman rearrangements board synthesize precedence feasibly originated feasible king suitability created nearer tree stays formal twice elementary managing correction vertically colony deceptive contribute numeric behaves elsewhere east correcting overcomes applying temp move substituting enough differ surpass converges valued sigsoft mostly jumps executing completing advance analyzing path cyclecount violated visualized violates flexible domain intermediate simultaneously proven characteristic unlike term compared enabling borhood right compares march tait meet calls qaplib represent encode scalable developed nearest shifting meaningful rare radius programming simplifying possibly concave typically finally colorings confusion deep additional santa reconfigurable redefine perhaps maria respects naively bound obviously kept vergence strictly schedule avoid merges expert corridor placed advanced helping hope improved thetical advances alleles reduce issue dependency topology vera ordinary sense classification validating attracted siam fewest flipping tuples escaping server proportion progressively disseminate literature misses member december quadratically ability minimizes fect characterized positive generally exploring deriving equals complete shuffle codes several high faster maximizes limit communication regardless selected disruption author sort cybersecurity steps license lists legacy imization torial informs mutated immune interesting deviation intelligent processed attribution clustering increasingly interpreting depend insertions counts observed tered brand czech closely quality secondary processing shuffling reinsertion conditions access undirected examine fundamental examines current temperature supports operating giancarlo situations matheuristic maintains though bafna nostrand designing connected confirm increasing holds progress iteratively seeks calculation joint inside horizontal swapped preservative treated maps replacing look flying coefficient inspect suboptimal support rewards conflict necessitates basics changes vertical similarity conflicts funnels definition emphasize allocation wide previous euclidean", "type": "pdf", "text": "Cycle Mutation: Evolving Permutations via Cycle Induction Vincent A. Cicirello Applied Sciences, 12(11), Article 5506, June 2022. doi:10.3390/app12115506 Abstract Evolutionary algorithms solve problems by simulating the evolution of a population of candidate solutions. We focus on evolving permutations for ordering problems such as the traveling salesperson problem (TSP), as well as assignment problems such as the quadratic assignment problem (QAP) and largest common subgraph (LCS). We propose cycle mutation, a new mutation operator whose inspiration is the well-known cycle crossover operator, and the concept of a permutation cycle. We use fitness landscape analysis to explore the problem characteristics for which cycle mutation works best. As a prerequisite, we develop new permutation distance measures: cycle distance, k-cycle distance, and cycle edit distance. The fitness landscape analysis predicts that cycle mutation is better suited for assignment and mapping problems than it is for ordering problems. We experimentally validate these findings showing cycle mutation’s strengths on problems such as QAP and LCS, and its limitations on problems such as the TSP, while also showing that it is less prone to local optima than commonly used alternatives. We integrate cycle mutation into the open source Chips-n-Salsa library, and the new distance metrics into the open source JavaPermutationTools library.", "url": "https://www.cicirello.org/publications/applsci-12-05506.pdf"},
	{"title": "Interactive Bin Packing: A Java Application for Learning Constructive Heuristics for Combinatorial Optimization - Journal of Open Source Education - 2022", "tags": "", "type": "html", "text": "Interactive Bin Packing: A Java Application for Learning Constructive Heuristics for Combinatorial Optimization Vincent A. Cicirello Journal of Open Source Education, 5(49), Article 140, March 2022. doi:10.21105/jose.00140 Abstract Interactive Bin Packing provides a self-guided tutorial on combinatorial optimization, the bin packing problem, and constructive heuristics. It also enables users to interact with bin packing instances to explore their own problem solving strategies, or to test their knowledge of the constructive heuristics covered by the tutorial. The application is not a solver for bin packing, but rather it is a tool for learning about the bin packing problem, and for learning about heuristic techniques for solving instances of the problem. The repository (https://github.com/cicirello/InteractiveBinPacking) contains the source code, documentation, and example assignments suitable for courses on discrete mathematics, algorithms, or artificial intelligence (AI), or by self-directed learners. An executable jar of the application is available from GitHub Releases and Maven Central.", "url": "https://www.cicirello.org/publications/cicirello2022jose.html"},
	{"title": "Interactive Bin Packing: A Java Application for Learning Constructive Heuristics for Combinatorial Optimization - Journal of Open Source Education - 2022", "tags": "computer science symposium proceedings students technical algorithms course many applications provide collective sigcse tutorials online concepts activity sciences scheduling solutions practical environment software feedback theory upon unplugged pedagogical engaging computing wireless understanding gaining google analysis creating structures column iteratively prior programming need might common multiple existing time release channel algorithm local feature decisions mathematical data solution international license monthly problems mathematics effective designed assignment intelligent objectives user references optimal numerous completing objective cover exercises state gentle calculate unlikely expected july active version adapted interdisciplinary quality wang applies items conference utilizing utility recommend serving coding search behavior mization arts computers minimize bins lizing right practices hill automated assist liberal scalable approximate developed placing empty compute features assessment later school others area making correctness puzzles prerequisite engineering timization take solve varies relatively little memory origin show rule papers directory producing previously plains statement summary coverage ings blocks mobile target management initially called quickly turns number review enable price action preliminary guide tion item musical work lower metaheuristics traveling satisficing creative hardness system examples even utilize analyze authors requires engaged methods retain functionality thinking commons instant optimally file library gamified place television topics tutoring essays instruction requiring learners machine efficiently exists emerges complete first theoretical environments several tics shown sufficient visualize interactivity trucks different climbing novice individual indirect illustrate minutes archive guaranteed chosen formal instructor improve compilations files topic largest covering network general public parallel animations design working track algorithmic make says limited match automatic shipments despite balancing stockton swarm build response attribution interaction informal category", "type": "pdf", "text": "Interactive Bin Packing: A Java Application for Learning Constructive Heuristics for Combinatorial Optimization Vincent A. Cicirello Journal of Open Source Education, 5(49), Article 140, March 2022. doi:10.21105/jose.00140 Abstract Interactive Bin Packing provides a self-guided tutorial on combinatorial optimization, the bin packing problem, and constructive heuristics. It also enables users to interact with bin packing instances to explore their own problem solving strategies, or to test their knowledge of the constructive heuristics covered by the tutorial. The application is not a solver for bin packing, but rather it is a tool for learning about the bin packing problem, and for learning about heuristic techniques for solving instances of the problem. The repository (https://github.com/cicirello/InteractiveBinPacking) contains the source code, documentation, and example assignments suitable for courses on discrete mathematics, algorithms, or artificial intelligence (AI), or by self-directed learners. An executable jar of the application is available from GitHub Releases and Maven Central.", "url": "https://www.cicirello.org/publications/cicirello2022jose.pdf"},
	{"title": "ρμ: A Java library of randomization enhancements and other math utilities - Journal of Open Source Software - 2022", "tags": "", "type": "html", "text": "ρμ: A Java library of randomization enhancements and other math utilities Vincent A. Cicirello Journal of Open Source Software, 7(76), Article 4663, August 2022. doi:10.21105/joss.04663 Abstract The ρμ library is a Java library of Randomization enHancements and Other Math Utilities. It originated as a core dependency for our other open source research software libraries, such as JavaPermutationTools and Chips-n-Salsa, providing these libraries with efficient randomization related algorithms. For example, Chips-n-Salsa is a library of stochastic local search and evolutionary algorithms, which requires fast generation of random indexes into arrays and other structures, as well as fast generation of non-uniform random numbers to implement Gaussian mutation, Cauchy mutation, etc. The ρμ library includes implementations of efficient algorithms for randomly sampling indexes into arrays and other sequential structures, randomly sampling pairs and triples of distinct indexes, randomly sampling k indexes, among others, and also includes efficient random number generation from non-uniform distributions, such as Gaussian, Cauchy, and Binomial. It also includes math functions required by the randomization utilities. The documentation is hosted on the web (https://rho-mu.cicirello.org/), and source code on GitHub (https://github.com/cicirello/rho-mu), which includes a directory of example programs illustrating ρμ usage.", "url": "https://www.cicirello.org/publications/cicirello2022joss.html"},
	{"title": "ρμ: A Java library of randomization enhancements and other math utilities - Journal of Open Source Software - 2022", "tags": "apache simulation randomgenerator additional generating speed ziggurat international genetic sample prngs provides existing modeling integers algorithm method streams mutation methods commons computer architecture faster replacement hierarchy substantial domain average statistical conference diagram ieee adding computational need deep classes learning interface figure cases bound time applications program repository optimization proceedings transactions distributions intelligence provide prngine functionality cycle uncommons data uniformity less license transfer specialized lemire scientific times operations implementation intelligent developments references areas extremely engines optimizing strict pseudo petrowski impact biased pool require diehl comparisons generators randomized much independent achieve maths monte permutations networks offered variety systems mechanism demonstrating computers combinatorics enabling structures operational combining many face series showed supported florida rabe available school prior exclude replacements results five generate commonly significant bounded modelling discrete port support speeding distance neural applied needed provided motivation papers symposium transferring society common previously statement patrick reinforcement summary nextbiasedint enhancing types interfaces statistically windows special artificial unbiased comment reservoir copyright practice release zhang three review easily work probability simulated distributed marsaglia metaheuristics creative samples traditional even theory authors retain range uniform openjdk enables linear evolving choice first statistics mathematical subject several wrapper integer upon nested shows robots approximation demonstrates upgrading like archive binomial real rejection important vectors convenient overhaul insertion handbook nonconvex numeric subinterfaces alone parallel simheuristics designed permutation factory original advantage alternative heavily chooses stockton reliant methologies carlo attribution", "type": "pdf", "text": "ρμ: A Java library of randomization enhancements and other math utilities Vincent A. Cicirello Journal of Open Source Software, 7(76), Article 4663, August 2022. doi:10.21105/joss.04663 Abstract The ρμ library is a Java library of Randomization enHancements and Other Math Utilities. It originated as a core dependency for our other open source research software libraries, such as JavaPermutationTools and Chips-n-Salsa, providing these libraries with efficient randomization related algorithms. For example, Chips-n-Salsa is a library of stochastic local search and evolutionary algorithms, which requires fast generation of random indexes into arrays and other structures, as well as fast generation of non-uniform random numbers to implement Gaussian mutation, Cauchy mutation, etc. The ρμ library includes implementations of efficient algorithms for randomly sampling indexes into arrays and other sequential structures, randomly sampling pairs and triples of distinct indexes, randomly sampling k indexes, among others, and also includes efficient random number generation from non-uniform distributions, such as Gaussian, Cauchy, and Binomial. It also includes math functions required by the randomization utilities. The documentation is hosted on the web (https://rho-mu.cicirello.org/), and source code on GitHub (https://github.com/cicirello/rho-mu), which includes a directory of example programs illustrating ρμ usage.", "url": "https://www.cicirello.org/publications/cicirello2022joss.pdf"},
	{"title": "Machine and Deep Learning [Topic] - Applied Sciences, Big Data and Cognitive Computing, Mathematics, Electronics, Entropy - 2023", "tags": "", "type": "html", "text": "Machine and Deep Learning Andrea Prati, Luis Javier García Villalba, and Vincent A. Cicirello (Editors) Applied Sciences, Big Data and Cognitive Computing, Mathematics, Electronics, Entropy, 2023. Special topic spanned these five journals from June 2021 through May 2023. Abstract Our society is facing a new era of automation, not only in industry but also in our daily lives. Computers are everywhere, and their employment is no longer relegated to just industry or work but also to entertainment and leisure. Computing and artificial intelligence are not simply scientific lab experiments for publishing papers in major journals and conferences but opportunities to make our lives better. Among the different fields of artificial intelligence, machine learning is certainly one of the most studied in recent years. There has been a gigantic shift in the last few decades due to the birth of deep learning, which has opened unprecedented theoretic and application-based opportunities. In this context, advances in machine and deep learning are discovered on a daily basis, but still much has to be learned. For instance, the functioning of deep learning architectures is still partially obscure and explaining it will foster new applications, algorithms and architectures. While deep learning is considered the hottest topic of artificial intelligence nowadays, still much interest is raised by traditional machine learning, especially in (but not limited to) new learning paradigms, extendibility to big/huge data applications, and optimization. Even more diffused, then, are the (new) applications of machine and deep learning, to finance, healthcare, sustainability, climate science, neuroscience, to name a few. Continuing and improving the research in machine and deep learning will not only be a chance for new surprising discoveries, but also a way to contribute to our wellbeing and economical growth. The special topic covers the following non-exclusive list of topics: machine learning deep learning natural language processing text mining active learning clustering regression data mining web mining online learning ranking in machine learning reinforcement learning transfer learning semi-supervised learning zero- and few-shot learning time series analysis unsupervised learning deep learning architectures generative models deep reinforcement learning learning theory (bandits, game theory, statistical learning theory, etc.) optimization (convex and non-convex optimization, matrix/tensor methods, sparsity, etc.) probabilistic methods (e.g., variational inference, causal inference, Gaussian processes) probabilistic inference (Bayesian methods, graphical models, Monte Carlo methods, etc.) evolution-based methods explanation-based learning multi-agent learning neuroscience and cognitive science (e.g., neural coding, brain–computer interfaces) trustworthy machine learning (accountability, causality, fairness, privacy, robustness, etc.) applications (e.g., speech processing, computational biology, computer vision, NLP) Submissions opened June 2021 with a deadline of March 31, 2023.", "url": "https://www.cicirello.org/publications/cicirello2023applsci.html"},
	{"title": "A Survey and Analysis of Evolutionary Operators for Permutations - Proceedings of the 15th International Joint Conference on Computational Intelligence - 2023", "tags": "", "type": "html", "text": "A Survey and Analysis of Evolutionary Operators for Permutations Vincent A. Cicirello In Proceedings of the 15th International Joint Conference on Computational Intelligence, pages 288-299. November 2023. doi:10.5220/0012204900003595 Abstract There are many combinatorial optimization problems whose solutions are best represented by permutations. The classic traveling salesperson seeks an optimal ordering over a set of cities. Scheduling problems often seek optimal orderings of tasks or activities. Although some evolutionary approaches to such problems utilize the bit strings of a genetic algorithm, it is more common to directly represent solutions with permutations. Evolving permutations directly requires specialized evolutionary operators. Over the years, many crossover and mutation operators have been developed for solving permutation problems with evolutionary algorithms. In this paper, we survey the breadth of evolutionary operators for permutations. We implemented all of these in Chips-n-Salsa, an open source Java library for evolutionary computation. Finally, we empirically analyze the crossover operators on artificial fitness landscapes isolating different permutation features.", "url": "https://www.cicirello.org/publications/cicirello2023ecta.html"},
	{"title": "A Survey and Analysis of Evolutionary Operators for Permutations - Proceedings of the 15th International Joint Conference on Computational Intelligence - 2023", "tags": "elements edges runtime element child random swap positions cross index edge precedences order problem children adjacent region indexes undirected operator case number distance uniform uobx inherit cycle parents like average cyclic directed upmx parent first ordered effective tion probability original relatively likely nwox scramble landscape features worst search since represents section chosen heuristic figure swaps version left tation others ments uppx define inherited relative table rected cases enable insertion example algorithms reversal comparison pair inherits important journal assembly disruptive change relevant position generations uniformly feature much behavior discuss originally windowed similar mapping strongly tions optimizing ieee small salesman prior graph form solution initialized sequence implementation haystack variations information initialize block local upon points earlier function specific chooses tuning worth last fixed generalizes three inheriting enables means precedence parallel impact known likewise present numbers work array functions thus size metrics independent least standard good perform called focus pairwise algorithm distributed kmax linear produce removes optimize less similarly picks another found broken tour research results neighborhood derived breaks rotation equal randomly choice shows combination produced general designed equivalent pass population formed choosing unlike possible final rather approximately congress large lower minimizes constant several morgan strengths focused control recombination objective partially generate five preservative step copy data create insights computing paper parameter cost tends pick eling unlikely ceedings require applicability computers rearrange analyses wise wrapping list contiguous selecting lems gaussian retain tance discussed powerful future cite influenced tors chose consecutive tuned tations randomizes defined slow routing implied gion implies might name shop target refer time required depends utilizes matched study computer dowed efficient simple described otherwise created duced effects critical values tive process differ knowledge adaptive right constrained ppsn performs primarily transferring rate length schedule inally erage four transactions works dences focuses erator generalize computation places second fill true lutionary dered code memetic ering transform mutates algorithmic informs mutated sequencing github except scrambled seen single appear progress available dynamic replacing heurx every characteristics jority selects tionary dependent specified lead minimum resource purpose line operations studies value instead rearranged half references sufficiently poor springer excellent proportional inspired cellular ture turn balances formance heuristics reversing linked aaai union faced descent subtle component padimitriou generates rameter ginning generated rial skipping weighted need eiben european constructive inaries respect volume exchange preserving technical applied searching provided choose producing serpell fective provides definitively mobile rich label improvement populate suitable referred smaller catalog favorable entire years variation barecke nonbinary specify intelligence system likelihood binary spots farris larger tributed ping representations valid rithms particularly question acteristics climber ator brary breaker equally copies stagnated quence subsequences timed domains applicable lingle real izes reinserts improve jumping nagata unclear tional parameterized quencing direction rates reverses suggested objectives maintenance forms shift bierwirth anywhere defines maximize differently notation gins discussing motivating exchanges opposite input induce creating randomized populations cular maybe strains networks increases ference plementations attribute mechanism unaltered vice sitions replaces black combining terest kick absolute gorithm putation summarizes describe thing resulted margins florida guided placing view late school sentations tegrating preserves significant worse drone overlap measure dexes parameters string disrupted motivation show description augmented central arrive propriate green effectively start kaufmann windows mappings restricted initially window forming modeling preliminaries identified xiong plan utilized iting analog provide addison ited pasha portion differences sume confirmed vehicle openjdk computes cated transfers consult explore sider offspring transforms cycles assumptions sidered denote shown answering plex king transfer tabu veloped handbook insert ously correcting optima rest applying assignment heavily outperforms listed build various posited front simply completing facturing offer evolves rank jump addition posit planar unspecified preference ternational easy salsa extend fines trans populating proves ators isolate systems national serts compared tain operational cludes added solute commonly finally timization parts narrowing identifying tant origin additional javapermutationtools detyniecki ding related averaged tonomous just respects disrupts outperform vertexes wirth retained subset hypothesized formly mance context unaware action vera hood classification bell fewest netic tournament sequences literature inserted member everything together sents characterized prefers systematic ment geurtsen sponding machine complete rotate instance serve suggests proceeds mutations weaknesses dren limit communication regardless alter cities difficult sort task mizes steepest kendall ubiquitous displace syswerda petri positioned dive make certainly nature deviation exactly structure intelligent processed mize coming properties itated empirical periodically calculus released closely grouped distinguish elitism highest asymmetric examine ative association eliminate long variety origins iterate decision though associates makes nostrand transportation controlled evolve hill associated gether assist vast fourth ement dover frequency presentation umpx onemax ensure maps degree sections enhanced hypothetical inspect systematically higher figures changes tunable booleans singleton allocation types tempts mary euclidean ulated superior removal ones deeper erate type relation inexact loss lost review ements attempts still focusing versions exact substantially scape range volving derive scatter salesrep initializes puts goldberg span flipped reveal erlbaum tours reference publishers reversals development maven profiles accepted populated published iterating epistatic proposed erators potentially note stead tune cipal populates inverse lookup limited match stockton currently", "type": "pdf", "text": "A Survey and Analysis of Evolutionary Operators for Permutations Vincent A. Cicirello In Proceedings of the 15th International Joint Conference on Computational Intelligence, pages 288-299. November 2023. doi:10.5220/0012204900003595 Abstract There are many combinatorial optimization problems whose solutions are best represented by permutations. The classic traveling salesperson seeks an optimal ordering over a set of cities. Scheduling problems often seek optimal orderings of tasks or activities. Although some evolutionary approaches to such problems utilize the bit strings of a genetic algorithm, it is more common to directly represent solutions with permutations. Evolving permutations directly requires specialized evolutionary operators. Over the years, many crossover and mutation operators have been developed for solving permutation problems with evolutionary algorithms. In this paper, we survey the breadth of evolutionary operators for permutations. We implemented all of these in Chips-n-Salsa, an open source Java library for evolutionary computation. Finally, we empirically analyze the crossover operators on artificial fitness landscapes isolating different permutation features.", "url": "https://www.cicirello.org/publications/cicirello2023ecta.pdf"},
	{"title": "An Analysis of an Open Source Binomial Random Variate Generation Algorithm - Engineering Proceedings - 2023", "tags": "", "type": "html", "text": "An Analysis of an Open Source Binomial Random Variate Generation Algorithm Vincent A. Cicirello Engineering Proceedings, 56(1), Article 86, October 2023. doi:10.3390/ASEC2023-15349 Abstract The binomial distribution is the probability distribution of the number of successes for a sequence of n independent trials with success probability p. Efficiently generating binomial random variates is important in many modeling and simulation applications, such as in medicine, risk management, and fraud and anomaly detection, among others. A variety of algorithms exist for generating binomial random variates. This paper concerns the algorithm chosen for ρμ, an open source Java library for efficient randomization, which uses a hybrid of two existing binomial random variate algorithms: the BTPE Algorithm (Binomial, Triangle, Parallelogram, Exponential) and the inverse transform for cases that BTPE cannot handle. BTPE uses rejection sampling, and BTPE’s authors originally provided an analytical formula for the expected number of iterations in terms of n and p. That expression is complicated to interpret in practical contexts. I explore BTPE by instrumenting ρμ’s implementation to empirically analyze its acceptance/rejection behavior to gain further insights into its runtime performance. Although the number of iterations depends upon n and p, my experiments show that the average number of iterations is always under two, and that the average number of random uniform variates required to generate a single random binomial is under four (two per iteration). Thus, when analyzing the runtime of a simulation algorithm that includes steps generating random binomials, one can consider such steps to have a constant runtime.", "url": "https://www.cicirello.org/publications/cicirello2023engproc.html"},
	{"title": "An Analysis of an Open Source Binomial Random Variate Generation Algorithm - Engineering Proceedings - 2023", "tags": "sampling mean available less empirical august calls results predicted table grow generates data equation hierarchy conference maximum case large even computer section prediction code values generator functions discussion equations randomization github abbreviation fast instructions pseudorandom compute features details others computational enhanced longer needed provides interfaces bound approximately management tables proceedings order distributed interval methods functionality runs exponential international wrapped combination computing iteration value mdpi processed methodology interpreting references mitigating vary upper compiling remote represented injury chemosphere splitmix hazardous disclaim proceeding require splittable monitoring majorizing selection generators triangular difference reality conditions object complexity statistical access another availability result search systems responsibility attack perspective override limits estimating compared detection variables middle licensee though occurred languages analyzed medicine possible people confirm appear bernoulli bionomial handled publications november resolve reader historical research analyses generated uniformly rare programming treated bayesian bivariate test alessandro count significant consent fusion volume external institutional relatively overall worst conflict implements trust distance applied rather smallest optimized classes additional origin javapermutationtools back instrument explained primarily accomplish producing divides scope kachitvichyanukul conflicts human evolution windows edos versatile significance environment mial refer regression step showing applications referred explain focus experimental integers improved problem experiment review safety property guidelines model schmeiser grows efficiency ecological made understand conclude vera utilizes creative resulting insight provide million determined siam addison math bruno theory farris computed differences installations cycle commons local products openjdk fluctuates splittablerandom electronic december informed question health randomness expect framework future atop complete minimum board small codes measuring instance subject several resentative wrapper simple cloud faster declares answering enhancements academic presented function quite complement instrumented individual king level author poisson domains flooding history sustainability solely relevant license core gait present oriented since potentially limitation mathematics winter running seminumerical public patient predict algorithmic ratios universal adds permutation falling macro cost chance built confidence despite industrial stockton attribution investigation opinions strategy", "type": "pdf", "text": "An Analysis of an Open Source Binomial Random Variate Generation Algorithm Vincent A. Cicirello Engineering Proceedings, 56(1), Article 86, October 2023. doi:10.3390/ASEC2023-15349 Abstract The binomial distribution is the probability distribution of the number of successes for a sequence of n independent trials with success probability p. Efficiently generating binomial random variates is important in many modeling and simulation applications, such as in medicine, risk management, and fraud and anomaly detection, among others. A variety of algorithms exist for generating binomial random variates. This paper concerns the algorithm chosen for ρμ, an open source Java library for efficient randomization, which uses a hybrid of two existing binomial random variate algorithms: the BTPE Algorithm (Binomial, Triangle, Parallelogram, Exponential) and the inverse transform for cases that BTPE cannot handle. BTPE uses rejection sampling, and BTPE’s authors originally provided an analytical formula for the expected number of iterations in terms of n and p. That expression is complicated to interpret in practical contexts. I explore BTPE by instrumenting ρμ’s implementation to empirically analyze its acceptance/rejection behavior to gain further insights into its runtime performance. Although the number of iterations depends upon n and p, my experiments show that the average number of iterations is always under two, and that the average number of random uniform variates required to generate a single random binomial is under four (two per iteration). Thus, when analyzing the runtime of a simulation algorithm that includes steps generating random binomials, one can consider such steps to have a constant runtime.", "url": "https://www.cicirello.org/publications/engproc-56-00086.pdf"},
	{"title": "On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection - Mobile Networks and Applications - 2023", "tags": "", "type": "html", "text": "On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection Vincent A. Cicirello Mobile Networks and Applications, 28(2): 507-517, April 2023. doi:10.1007/s11036-022-02060-z Abstract In this paper, we explore the theory and expand upon the practice of fitness landscape analysis for optimization problems over the space of permutations. Many of the computational and analytical tools for fitness landscape analysis, such as fitness distance correlation, require identifying a distance metric for measuring the similarity of different solutions to the problem. We begin with a survey of the available distance metrics for permutations, and then use principal component analysis to classify these metrics. The result of this analysis aligns with existing classifications of permutation problem types produced through less formal means, including the A-permutation, R-permutation, and P-permutation types, which classifies problems by whether absolute position of permutation elements, relative positions of elements, or general precedence of pairs of elements, is the dominant influence over solution fitness. Additionally, the formal analysis identifies subtypes within these problem categories. We see that the classification can assist in identifying appropriate metrics based on optimization problem feature for use in fitness landscape analysis. Using optimization problems of each class, we also demonstrate how the classification scheme can subsequently inform the choice of mutation operator within an evolutionary algorithm. From this, we present a classification of a variety of mutation operators as a counterpart to that of the metrics. Our implementations of the permutation metrics, permutation mutation operators, and associated evolutionary algorithm, are available in a pair of open source Java libraries. All of the code necessary to recreate our analysis and experimental results are also available as open source.", "url": "https://www.cicirello.org/publications/cicirello2023mone.html"},
	{"title": "On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection - Mobile Networks and Applications - 2023", "tags": "edge cyclic deviation table edit kendall acyclic reversal number first cycle reinsertion exact random element match correlation length swap permutations interchange nature distances springer search haystack forms undirected squared latex template five three strongly tance optimal scramble uniform section insertion tion blockswap compute blockmove generations classes edges directed library adjswap cities measure comput common ronald time computed cost prior identify algorithm index positional comparison relevant eigenvalues adjacent highest landscapes genetic elements minimum swaps combinatorial version trans matrix example represent implement others rtype related form four mapping known noisy since transform define correlates measures identified randomly shows runtime eigenvectors normalized costs implementation functions rank pseudo impact population strong variations sets performs enumeration counterclockwise provides wagner adjacency focus variation eigenvalue shorter longest tions removes points high earlier directly reinserts subtype sevaux formally defined runtimes campos evol vertex ieee features string tunable conf type greater invariant scape derive proc subgraph replace schiavinotto reference refers instances computing original equivalent equations deviations thus summing possible nearest radius programming need precedences arranged divide class selecting vertexes perform correlating modify slightly pairwise model order likely lower traveling kmax binary siam interval algorithms proportion city local strings change cumulative ment efficiently cent puted suggests counting chosen mixed represents effective design direction performing atsp properties randomizes defines extremely contribution closely sampling correlations consistently except circle experiments extended long reidys ness replaces tour single summarizes szymanski fischer segment scheduling dynamic last sections longer fixed parameters higher conflict derived summary figure apply euclidean applications softw terms generation requires triangle consistent lead ation small data simple clearly combination reversals otherwise hunt important effects rotational levenshtein largest weakly paper parameter correcting greatest lookup groups instead third extent references resent tionally analyzing offer depending record near pass squares possess baker adapted size profiling left much jones poorly average compare independent ordering essence infinite interprets imize choosing ization ators heuristics reversing behavior mization flip spond replicate aaai jobs right biometrika sample faced soviet pearson fast flips fifth maximum information initialize wrap tation discuss added achieves displaced ethics analyses lates later generated predetermined test count originally article graph contributes volume bility alignment contiguous relates applied provided divided averages javapermutationtools choose lent representation producing previously rate sampled mergesort tures multiple subsequence erated salesperson moves ments fagin inconsistency comprehensive smaller called catalog delayed jacobi normalize spatial similar nonbinary made testing vera sense classified schemes confirmation bell reachable classifying even sertion explored farris authors ping categorized equidistantly satisfies member stochastic continuum linear discussed cacm defining removed future cite strongest codes instance constant subscripts connectionist several lozano second arrangement mutations declares function sufficient narrows stagnated modified communication selected combine author hamming cernera kumar mendiburu directions lists mented parents sible structurally memetic times total tional repeat transformed universal informs clockwise interesting marized bioinspired exactly specific reverses structure declarations processed suggested application ysis tations moderately interpreting insertions discussion anywhere calculus cation character lesser stick optimizing state press portions inefficiency exchanges mitchell atomic jmlr difference asymmetric starting components conference vide dominates ative examines availability worth increases current desired initialization relationship limits though makes entirely designing radix kick oper fourth implies marti seeks imum sciences isomorphic neighbors uniformly bias exhaustive onemax tech widely adapt insufficient look fits discrete difficulty scapes extends leads solve coefficient neighborhood tantly support needed changes symmetric vides interest sorting lier throughout factor characteristics wide rotation target mappings refer ones short sification observing reducing configurable employ forming pute excludes approximations desirable sivakumar paring nearby relation excluded children review aligned case phase competing work analog saving utilize math primary cussion variability optimally computer computes scatter physics believed explains undergo enables cate indexing decomposed doklady suggest quadratic syst located exists travel runs exponential cycles originated surprisingly create invariance feasible caprara king profiles capture mining sent pled stadler vectors reinserted correlate techniques puting tabu effect topic creates salesman forrest correction sums induces laguna distinct generator elsewhere necessarily point jacm lation visits operations ponents observations matrices ackley applying inverse process move hernando bitstring amortized treats performance stockton inversions treating account", "type": "pdf", "text": "On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection Vincent A. Cicirello Mobile Networks and Applications, 28(2): 507-517, April 2023. doi:10.1007/s11036-022-02060-z Abstract In this paper, we explore the theory and expand upon the practice of fitness landscape analysis for optimization problems over the space of permutations. Many of the computational and analytical tools for fitness landscape analysis, such as fitness distance correlation, require identifying a distance metric for measuring the similarity of different solutions to the problem. We begin with a survey of the available distance metrics for permutations, and then use principal component analysis to classify these metrics. The result of this analysis aligns with existing classifications of permutation problem types produced through less formal means, including the A-permutation, R-permutation, and P-permutation types, which classifies problems by whether absolute position of permutation elements, relative positions of elements, or general precedence of pairs of elements, is the dominant influence over solution fitness. Additionally, the formal analysis identifies subtypes within these problem categories. We see that the classification can assist in identifying appropriate metrics based on optimization problem feature for use in fitness landscape analysis. Using optimization problems of each class, we also demonstrate how the classification scheme can subsequently inform the choice of mutation operator within an evolutionary algorithm. From this, we present a classification of a variety of mutation operators as a counterpart to that of the metrics. Our implementations of the permutation metrics, permutation mutation operators, and associated evolutionary algorithm, are available in a pair of open source Java libraries. All of the code necessary to recreate our analysis and experimental results are also available as open source.", "url": "https://www.cicirello.org/publications/Cicirello-MONE-2022.pdf"},
	{"title": "Evolutionary Computation: Theories, Techniques, and Applications - Applied Sciences - 2024", "tags": "", "type": "html", "text": "Evolutionary Computation: Theories, Techniques, and Applications Vincent A. Cicirello Applied Sciences, 14(6), Article 2542, March 2024. doi:10.3390/app14062542 Graphical Abstract", "url": "https://www.cicirello.org/publications/cicirello2024applsci.html"},
	{"title": "Evolutionary Computation: Theories, Techniques, and Applications - Applied Sciences - 2024", "tags": "genetic optimization ieee algorithms computation problem differential swarm algorithm survey open evolution articles search particle fitness variety source analysis programming proceedings machine learning problems many mutation cycle hybrid artificial vehicle landscape developed others multiobjective system optimize international application conference interactive soft neural foundations binary local function design forms optimizing global common target utilize computer feature explore data parallel station charging energy july selection average linkage random special comprehensive advances model made classification propose matter deployment several members different sensor permutation control automated solutions collection review generation dark estimation solving colony convergence part electric wireless contributions cooperative correlation utilizing adaptive editorial mini hydropower combines constrained deploying represent making test take vision rather optimized related form regression number reduce mapping issue traveling intelligence angular authors stigmergy tions library directional predicting powerful solution morgan continuous memetic magnitude immune mdpi maximal hermite calculus cover represented symbolic quality access experiments strategies splines classic available operator dynamic engineering discrete fields distance conflicts surrogate coverage overview figure cubic reach terms hardware natural simulated creative theory enterprise distribution tools personalized orthogonal operators architecture quadratic theoretical cloud resource published covered network general candidate parameter recommender costs implementation interaction functions references interacting areas evaluation evolves diverse combinatorial terrain springer knowledge preference impact disclaim active inspired population science evaluating applicability metrics ordering successors accelerating multicore originating haystack heuristics systems responsibility behavior mization enabling licensee stigmergic sets michigan aaai hybrids fast combined publications november instructions eration rural ning acceleration exploratory brings toolkits computational area image european list users volume candidates tackle deep analytical searching differentiable representation primarily society reinforcement lend human spans directed custom multiple rich augmenting environment service decades presents referred breadth congress focus years variation experiment four context classifier property validation manipulate liang order distributed vera metaheuristics aimed distributions resulting cooperating illustrated analyze john farris targets products literature world encourage known tial rithms december stochastic together modifications synthesis particularly robust linear systematic ment exploring polynomial future improvements measuring subject unimodal detectors exploitation high declares weaknesses links communication directly separable read maximizing author domains real canonical parameterless institutions license strengths improve wipers university effective reffad convex define louis ruggedness automatic evocop specific neuroevolution super attribution opinions remainder properties inform benchmarking baressi adaptation java injury trends drift czech models methodologies elitist demand triangular conditions complexity fact networks permutations diversity plants free demonstrating languages coordinates makes heuristic people describes call controlled single reflective collaboration gorithm joint florida research sciences features scheduling estimates holland wong genotype difficulty measure demonstrate reina shop nearly concept detect pure cartesian manycore evolvable overweight chassiakos early characteristics types evaluations wide libraries steadiness layout risk time software held program april required cryogenic specifically tionary seminal encompasses tion efficiency method briefly work benchmark exist lazari commons julia pheromone minimizing informed multifactorial performed lead massive evolving january organized travel span originated potential obesity demonstrates package indirect individual king like island solely vectors evostar transfer refers wiper techniques bioinformatics topic salesman largest scientific weakly inspiration alti alone dubey tive designed cluding cost motion chromosome outperforms performance stockton menlo locations user multidimensional integrates", "type": "pdf", "text": "Evolutionary Computation: Theories, Techniques, and Applications Vincent A. Cicirello Applied Sciences, 14(6), Article 2542, March 2024. doi:10.3390/app14062542 Graphical Abstract", "url": "https://www.cicirello.org/publications/applsci-14-02542.pdf"},
	{"title": "Algorithms for Generating Small Random Samples - Software: Practice and Experience - 2024", "tags": "", "type": "html", "text": "Algorithms for Generating Small Random Samples Vincent A. Cicirello Software: Practice and Experience, Early view: 1-9, September 2024. doi:10.1002/spe.3379 Abstract We present algorithms for generating small random samples without replacement. We consider two cases. We present an algorithm for sampling a pair of distinct integers, and an algorithm for sampling a triple of distinct integers. The worst-case runtime of both algorithms is constant, while the worst-case runtimes of common algorithms for the general case of sampling k elements from a set of n increase with n. Java implementations of both algorithms are included in the open source library ρμ.", "url": "https://www.cicirello.org/publications/cicirello2024spe.html"},
	{"title": "Algorithms for Generating Small Random Samples - Software: Practice and Experience - 2024", "tags": "reservoir integers pool time sample array insertion pairs average interval return triples returning three first section record class uniformly results computer parallel generates special number table constant faster experiments increases numbers requires purpose line preallocated version much lines significantly proceedings transactions integer intervals since implementation enhancedrandomgenerator returns weighted length distributed iterations fixed method efficient confidence require pseudocode generated experiment similar index larger code specific shuffling bounded higher sorting cases mathematical data lemire network various slower size relative added pseudorandom production provided additional provides microbenchmark multiple randompair versus existing sanders likewise requiring linearly randomtriple times harness forms benchmarking nanosecond expected preprint conference variety operation available generate leads allocating demonstrate type still provide vitter derive uniform operators explore choice randomly space shows presented important value instead performance stockton evolutionary methodology half analysis sorted unused independent turn skips communications arxiv ordered initializing possible fast good others programming duplicates originally virtual averages symposium urls sampled karras form family referred order likely vera system farris circuit cycle known improvements international steps true storage simpler elapsed extra processes ernvall handles nextinttriple element github benefit difference blackhole reported maintains languages replaces single joint school five widely conflict benefits implements records ting nextintpair applications modeling experimental repository excluded problem grows generation bounds methods pattern consume specified unknown splittablerandom evolving warmup simple reference potential king like maven potentially values paper iteration designed references optimal leading properly poor springer unlikely pass opportunity whichever splittable adapted extend reservoirl mylonas millions optimizations object compare utilizing achieve least choosing example samplepool journal systems unlike empirically develops minimize website address fastest probabilistic series initialize exploit wrap discuss achieves randomgenerator developed nearest reproduce spring later prior adding layers implement possibly computational needs test wrapping list brown volume adjust adjustment little however rather applied optimized parallelism interface prevent accomplish passes related rate passed thousandths just generically sampleinsertion practical bound false improvement noted approximately handling decades hellenic straightforward copyright simulation division context property easily reduce mapping large adjusts propose mutation even steele explored hash authors server schrade iterates indexpair goualard explores skip functionality invocations streaming inserted stream quadratically costly batcher batched consequence linear discussed draw produce names framework machine efficiently report cite warmed constrains shuffle instance duke subject precision several second suggests declares optimize enhancements function implemented limit benchmarks directly calculated level dachsbacher author applicable conducted positions less affected condition improve lists principles survey position oriented tenth technique appears nevalainen allocates seminumerical design define algorithmic make diminishes execution lamm requirement decreasing calculates slowest structure lengths compilation remainder vary randomization drawing draws hundreds state samplereservoir processor flood slow comparisons alternatives boost reminiscent immutability complexity crossover dominates deterministic permutations networks disabled broader executes preferred validate tsakalidis necessary though correspondence leiserson holder drakopoulos team many assist fourth iteratively conditional project align loop details bellhouse treated ensure maps last eddelbuettel replacing significant exponentiation warm immutable measure hypothetical name updated speeding nearly motivation show speed bauer schardl central interest ranged examination nanoseconds ensures previous experimentally windows superior artificial unbiased initially step forming assignments sigplan software desirable competition loss identified terms enable options overtakes simulate utilized hardware hedetniemi lending probability goodman tangwongsan benchmark combinations durstenfeld versions utilize reset substantially math explicitly classical tirthapura kulperger openjdk ways event enables computationally initial suggest knuth statistics shut theoretical sioutas sukha clearly experience describing avoiding described resolves otherwise repeatedly cleaner comparing wraps sequence effects iterating refers proposed note reveals generator process original studied assignment clear groups arbitrary differ surpass expensive converges currently round derivation", "type": "pdf", "text": "Algorithms for Generating Small Random Samples Vincent A. Cicirello Software: Practice and Experience, Early view: 1-9, September 2024. doi:10.1002/spe.3379 Abstract We present algorithms for generating small random samples without replacement. We consider two cases. We present an algorithm for sampling a pair of distinct integers, and an algorithm for sampling a triple of distinct integers. The worst-case runtime of both algorithms is constant, while the worst-case runtimes of common algorithms for the general case of sampling k elements from a set of n increase with n. Java implementations of both algorithms are included in the open source library ρμ.", "url": "https://www.cicirello.org/publications/cicirello2024spe.pdf"},
	{"title": "Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Research My research interests are primarily within evolutionary computation, swarm intelligence, biologically-inspired multiagent systems, and applied artificial intelligence. I explore both theoretical and applied topics in these areas, with a particular interest in how theory impacts practice. Current and past application domains for my research include scheduling and planning, coordination and logistics, computer-aided engineering, and manufacturing. I also, on occasion, conduct research on computer science education topics. Search Landscape Analysis Recently, I have been exploring the fitness landscapes of permutation optimization problems, problems where one must find an optimal ordering of some discrete set (e.g., scheduling problems). Such permutation problems fall into one of three broad categories, depending upon the structural characteristics of greatest influence on solution fitness (absolute positioning of elements, relative positioning of elements, or element precedences), although some problems may span more than one of these categories. Among other things, my research on permutation fitness landscapes has introduced a theoretical framework enabling exploring the effects of these structural properties on search performance. This includes the \"Permutation in a Haystack\" problem which enables specifying permutation fitness landscapes; as well as the \"Calculus of Search Landscapes\", a new tool for search landscape analysis that focuses on rates of change of fitness landscape topology, complementing other search landscape analysis tools such as fitness-distance correlation. More info, including selected relevant publications.... Self-Adaptive / Self-Tuning Metaheuristics Genetic algorithms, and more generally, evolutionary computation, along with other metaheuristics such as simulated annealing, ant colony optimization, etc, often involve a large number of so-called control parameters (e.g., mutation and crossover rates in genetic algorithms, parameters to control the cooling schedule in simulated annealing, and so forth). Getting these control parameters \"right\" is often critical to search performance. My research in this area includes both automated parameter tuning, as well as self-adaptive metahueristics or automated parameter control. My research in this area also includes multi-heuristic search. Some forms of search require the guidance of a heuristic, and the \"best\" heuristic for a problem may vary widely from that of another problem, or may even vary across instances of a problem. Some of my research has applied machine learning to enabling metaheuristics to adapt their choice of heuristic. More info, including selected relevant publications.... Genetic Operators for Permutation Representation The permutation representation for genetic algorithms requires specialized operators. A wide variety of crossover and mutation operators for permutations exist in the research literature. In my research on evolutionary computation for optimizing permutation structures, I have developed several crossover and mutation operators, including Non-Wrapping Order Crossover (NWOX), Uniform Partially Matched Crossover (UPMX), Heuristic Sequencing Crossover (HeurX), and window-limited variations of common permutation mutation operators. More info, including selected relevant publications.... Metaheuristic Development My research has lead to the development of new metaheuristics, including Value-Biased Stochastic Sampling (VBSS), and Wasp Behavior Inspired Stochastic Sampling (WHISTLING). More info, including selected relevant publications.... Swarm Intelligence Swarm intelligence refers to multiagent systems whose behavior is motivated by models of naturally occurring swarming systems, such as social insect swarms (e.g., ants, wasps, etc). My past research in this area includes applications of models of wasp task allocation and wasp social hierarchy formation to industrial scheduling and coordination problems, as well as multirobot coordination in space exploration. I have also explored applications of swarming agents to data management and network monitoring on mobile ad hoc networks. More info, including selected relevant publications.... Multi-Agent Systems / Multi-Robot Systems Although much of my research on multiagent / multirobot systems is specifically related to swarm intelligence, I have additionally conducted research related to other aspects of these systems, including market-based coordination, security engineering of multiagent systems, issues related to mobile agents on ad hoc wireless networks, power aware agents, and multiagent collaboration tools. More info, including selected relevant publications.... Applications of AI to Computer-Aided Engineering My research also includes applications of artificial intelligence to problems within the broad domain of Computer-Aided Engineering (CAE). These problems are mostly related to data management in large engineering digital libraries, such as automated engineering format classification, and search and retrieval of engineering artifacts, such as Computer-Aided Design (CAD) models based upon structural similarity. More info, including selected relevant publications.... Computer Science Education My computer science education research includes studies of effective pedagogical techniques in a variety of undergraduate computer science courses, including software engineering, AI, CS 1/2, discrete math, and non-major courses. More info, including selected relevant publications....", "url": "https://www.cicirello.org/research/"},
	{"title": "Site Search - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Site Search", "url": "https://www.cicirello.org/search/"},
	{"title": "Open Source Software - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Open Source Software Details on my various open source projects is organized on the following pages: Research Software Computer Science Educational Software Open Source Tools I may have additional open source projects not included on my website. See my GitHub profile for a complete list of my open source repositories. Where You Can Find My Software My open source software is available at the following sites: GitHub My GitHub profile, with source-code repositories, etc GitHub gists Maven Central artifacts Python packages on PyPI Containers on Docker Hub Top of the page The above summary of my activity on GitHub is updated nightly by the user-statistician GitHub Action. Top of the page", "url": "https://www.cicirello.org/software/"},
	{"title": "Teaching - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Teaching Teaching Schedule My teaching schedule at Stockton University for the next couple semesters includes: Fall 2023: CSCI 4104: Data Structures and Algorithms II (2 course sections) CSCI 4600: Senior Seminar Spring 2024: CSCI 4104: Data Structures and Algorithms II CSCI 4463: Artificial Intelligence CSCI 4600: Senior Seminar Courses Recently Taught CSCI 4600: Senior Seminar (Last taught: Spring 2023, Syllabus): In this seminar, computer science majors learn to evaluate the impact of current computing practice and trends; and gain an understanding of professional, ethical, and legal responsibilities. Students read and report on articles from the computing literature, and also develop a professional resume. Fulfills university's Values/Ethics (V) requirement. CSCI 4463: Artificial Intelligence (Last taught: Spring 2023, Syllabus): A study of tools, techniques, and applications associated with intelligent computer systems. The course will include topics from classical symbolic AI as well as topics from computational intelligence. Topics will include intelligent problem-solving methods, knowledge representation, heuristics, genetic algorithms, and selected topics from machine learning. Counts as an elective for the Minor in Behavioral Neuroscience. CSCI 4104: Data Structures and Algorithms II (Last taught: Spring 2023, Syllabus): In this course, students deepen their knowledge of the design and analysis of computer algorithms. Advanced topics in algorithms and algorithm analysis covered in the course include graphs and graph algorithms, string matching, multi-threaded algorithms, and NP-completeness. Taught using Python. GNM 2248: Artificial Intelligence in Society (Last taught: Summer 2023, Syllabus): This course will provide a broad overview and introduction to the field of artificial intelligence (AI) focusing on the impacts it has made on society during the past 50 years. The intended audience for this course is that of the general student. No mathematical background is required. The course will begin by providing a broad overview of what AI is, and what it is not, including a discussion of the notions of Strong and Weak AI. Strong AI hypothesizes that the human mind is nothing more than a computational device and thus that computers can in principle be programmed with the capability of thought (i.e., to truly reason and solve problems). Contrast this with Weak AI which does not focus on whether machines can be made to actually think, but rather whether machines can be made to act intelligently. We will read and discuss articles by the pioneering scientists and philosophers that explore these notions. Next, the course will focus on introducing the student to applications of AI that have been making their ways into our everyday lives. Attention will be placed on the ethical issues and the impacts AI technology will continue to make on society. The course will include a combination of lectures, class discussion of films (both fiction and non-fiction) and assigned readings (both non-fiction and fiction), as well as current day news articles. Serves as an elective for the Minor in Behavioral Neuroscience. Fulfills university's Historically Conscious (H) requirement. Other Courses Taught Courses in this section are those that I haven't taught for a while. CSCI 4510: Topics in Computer Science: Human Performance Modeling (Last taught: Spring 2010): In this course, students synthesize their computer science coursework experience to explore real world problems of interest to local governmental agencies and industry. Working as a small group, in close collaboration with the instructor, students explore research questions related to human performance in aviation-related tasks (e.g., air traffic control). The course includes a study of topics related to statistical data mining with an application to human performance modeling. CSCI 4510: Topics in Computer Science: Real World Applications of Intelligent Systems (Last taught: Fall 2009): In this course, students synthesize their computer science coursework experience to explore real world problems of interest to local governmental agencies and industry. Working as a small group, in close collaboration with the instructor, students undertake research on air traffic management. CSCI 4485: Software Engineering (Last taught: Fall 2017, Syllabus): This course covers software engineering fundamentals, including software life cycle, process models, requirements engineering, software design, coding, testing, team software development, and application of engineering tools. Central to the course, student teams develop projects to practice engineering knowledge and skills in a realistic development setting. CSCI 4481: Cryptography and Data Security (Last taught: Fall 2018, Syllabus): Cryptography has become an essential tool for data security. It is used to provide data confidentiality, integrity, and availability. It supports the authentication of data and protection of privacy. However, cryptography is only one component of a security system. There are hardware, software engineering, social and political issues that also must be considered. This course provides a broad view of security with practical applications of cryptography to data security. Specific topics include classical and modern encryption techniques, steganography, and human factors. CSIS 4466: Computer Graphics (Last taught: Fall 2015, Syllabus): This course provides an introduction to 2D and 3D computer graphics including the study of hardware, software, algorithms, modeling, rendering, and applications. Topics will be introduced using the Java 2D and 3D APIs. CSCI 3103: Data Structures and Algorithms I (Last taught: Spring 2017, Syllabus): Advanced topics in the specification, implementation, and use of important data structures and associated algorithms. Data structures to be studied include stacks, queues, lists, trees, heaps, priority queues, sets/maps, and hash tables. Algorithm analysis is also studied, with emphasis on searching and sorting. Programming projects provide experience using the concepts covered in the course. Taught using Java. GNM 2358: Introduction to Game Theory (Last taught: Fall 2007, Syllabus): This course will introduce the student to topics in Game Theory. Game Theory is a high level mathematical field that governs conflict resolution and decision making skills. This course is an interesting blend of deep mathematical theory and real-world practicality. Due to the rich applications associated with this field, this is a perfect course for Math, Science, Business, Economic, and Psychology majors. The students will be introduced to theoretical mathematical tools including matrices, vectors, and graph theory. In addition, students will be taught applications associated with Biology, Politics, and Computer Science. Topics for the course include Two-player Zero-Sum (as well as Non-Zero-Sum) games of perfect information, Pure and Mixed Strategies, Dominance, and Rationality. CSCI 2226: Foundations of Computer Science (\"Discrete Math 2\") (Last taught: Spring 2014, Syllabus): This course will review and build upon the major concepts introduced in MATH 2225 and examine additional mathematical topics needed for the study of computer and information science. A principal goal is the development of the ability to think mathematically about computer science problems and their solutions. Computer-based exercises using the Python language will provide students with additional experience with logic, induction and other methods of mathematical proof, and algorithms. Students will also learn to formulate conjectures and investigate possible answers through computational experiments in Python. Applications studied may include the verification of algorithms, the formal specification of software systems, semantics of programming languages, automata, circuit design, and parallel computing. CSCI 2102: Programming and Problem Solving II (Last taught: Spring 2008, Syllabus): This course continues the development of problem solving and programming techniques. Emphasis is placed on data abstraction and implementation techniques such as recursion and dynamic data structures; and more advanced object oriented design concepts such as inheritance, exception handling, and GUI. Assignments involve writing programs using these techniques in an integrated development environment. Taught using Java. CSCI 2101: Programming and Problem Solving I (Last taught: Spring 2011, Syllabus): An introduction to the fundamentals of software development, including logic, control structures, subprograms, classes, objects, documentation techniques, testing, and debugging. Assignments give hands-on experience writing, debugging, and running programs using an integrated development environment. This course is a serious introduction to computer science and preparation for more advanced courses in computing. Taught using Java. CSIS 1180: Computing Concepts and Applications (Last taught: Fall 2005): This course is a survey of the history of computers, hardware components, operating systems, programming languages, program development environment, major application packages, data communication, networking, and the social impacts of computers. Major application software includes hands-on experience on wordprocessor, spreadsheet, database, presentation and communication programs. Courses Taught at Drexel University Courses in this section are those that I taught in the distant past. CS 485 / CS 680: Knowledge-Based Agents (Last taught: Winter 2005): This is an advanced level undergraduate course / graduate level course that introduces the basic concepts of agent-based computing and exposes students to a wide set of topics ranging from mathematical logic to game theory to emergent behavior to distributed systems. CS 680 is the graduate course number. CS 481: Advanced Artificial Intelligence (Last taught: Summer 2005): This course covers advanced topics in artificial intelligence. The course particularly empasizes representation, reasoning, and decision-making under uncertainty, dealing with large real-world data sets, learning, and solving problems with time-varying properties. You will learn how to represent and reason about decision-making under uncertainty with methods such as Bayesian Networks and Decision Networks; how to represent and solve problems with time-varying properties using methods such as Markov Decision Processes; how to learn representations of poorly understood problems with machine learning (ML) methods such as reinforcement learning, neural networks, and other ML methods as time permits. CS 380: Introduction to Artificial Intelligence (Last taught: Spring 2005): This course will provide a foundational introduction to topics in Artificial Intelligence, emphasizing search, knowledge representation, and planning.", "url": "https://www.cicirello.org/teaching/"},
	{"title": "Weighted Tardiness Scheduling with Sequence-Dependent Setups", "tags": "", "type": "html", "text": "Weighted Tardiness Scheduling with Sequence-Dependent Setups This set of benchmark instances for the problem known as Weighted Tardiness Scheduling with Sequence Dependent Setups originated in 2003 as part of the Ph.D. Dissertation research of Vincent A. Cicirello from Carnegie Mellon University's Robotics Institute. Weighted Tardiness Scheduling with Sequence-Dependent Setups is an NP-Hard single machine scheduling problem. The problem instances in this benchmark set have varying levels of duedate tightness, duedate range, and setup time severity. This benchmark set includes the instances, the current best known solutions, a problem generator, and links to relevant publications. The benchmark set is licensed under the MIT license. There are multiple ways of downloading the benchmark instances: You can download the benchmark instances here as a zip file (wtsds-instances.zip), containing the instances in plain text files. The benchmark set is also available in a GitHub repository, which contains the instances in plain text files. Alternatively, the benchmark set is available from: Harvard Dataverse. For Java source code to generate instances of the problem, see the Open Source Software tab. How to Cite To cite this benchmark problem set in your research, cite the following technical report: Cicirello, V.A. (2003). Weighted tardiness scheduling with sequence-dependent setups: A benchmark library [Technical Report]. Intelligent Coordination and Logistics Laboratory, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA. Publications Associated with this Benchmark Set: Original appearance, description of the benchmark set: Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance. Vincent A. Cicirello. PhD thesis, The Robotics Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, July 2003. Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Library. Vincent A. Cicirello. Technical Report, Intelligent Coordination and Logistics Laboratory, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, February 2003. The Java implementation of the problem set generator was first available in conjunction with the following publication: The Challenge of Sequence-Dependent Setups: Proposal for a Scheduling Competition Track on One Machine Sequencing Problems. Vincent A. Cicirello. In Proceedings of the International Conference on Automated Planning and Scheduling (ICAPS) Workshop on Scheduling a Scheduling Competition. AAAI Press, September 2007. Various updates of the best known solutions: Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm. Vincent A. Cicirello. In Proceedings of the Twenty-Third International Florida Artificial Intelligence Research Society Conference, FLAIRS-23, pages 14-19. AAAI Press, May 2010. Weighted Tardiness Scheduling with Sequence-Dependent Setups: A Benchmark Problem for Soft Computing. Vincent A. Cicirello. In Applications of Soft Computing: Updating the State of the Art, volume 52 of Advances in Soft Computing, pages 189-198. Springer, 2009. doi:10.1007/978-3-540-88079-0_19 On the Design of an Adaptive Simulated Annealing Algorithm. Vincent A. Cicirello. In Proceedings of the International Conference on Principles and Practice of Constraint Programming First Workshop on Autonomous Search. AAAI Press, September 2007. Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position. Vincent A. Cicirello. In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO'06), volume 2, pages 1125-1131. ACM Press, July 2006. doi:10.1145/1143997.1144177 Nominated for the Genetic Algorithms Track Best Paper Award. The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection. Vincent A. Cicirello and Stephen F. Smith. In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 3, pages 1355-1361. AAAI Press, July 2005. Winner of the AAAI 2005 Outstanding Paper Award. Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics. Vincent A. Cicirello and Stephen F. Smith. Journal of Heuristics, 11(1): 5-34, January 2005. doi:10.1007/s10732-005-6997-8", "url": "https://www.cicirello.org/datasets/wtsds/"},
	{"title": "Privacy Policy", "tags": "", "type": "html", "text": "Privacy Policy Last updated: May 7, 2018. Our privacy policy is simple. We do not collect any personally identifiable information. In fact, we don't collect any information from the visitors of our website.", "url": "https://www.cicirello.org/policy/privacy/"},
	{"title": "Self-Adaptive / Self-Tuning Metaheuristics - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Self-Adaptive / Self-Tuning Metaheuristics Genetic algorithms, and more generally, evolutionary computation, along with other metaheuristics such as simulated annealing, ant colony optimization, etc, often involve a large number of so-called control parameters (e.g., mutation and crossover rates in genetic algorithms, parameters to control the cooling schedule in simulated annealing, and so forth). Getting these control parameters \"right\" is often critical to search performance. My research in this area includes both automated parameter tuning, as well as self-adaptive metaheuristics or automated parameter control. Automated parameter tuning involves applying optimization (such as through another genetic algorithm or other optimizer) or machine learning during the algorithm design phase to automate setting control parameter values. On the other hand, parameter control provides the metaheuristic with self-adaptation ability. For example, one approach to self-adaptive genetic algorithms is to include an encoding of the control parameters within the population and to evolve control parameters during the search. My research in this area also includes multi-heuristic search. Some forms of search require the guidance of a heuristic, and the \"best\" heuristic for a problem may vary widely from that of another problem, or may even vary across instances of a problem. Some of my research has applied machine learning enabling metaheuristics to adapt their choice of heuristic. Selected Publications Self-Tuning Lam Annealing: Learning Hyperparameters While Problem Solving. Vincent A. Cicirello. Applied Sciences, 11(21), Article 9828, November 2021. doi:10.3390/app11219828 Optimizing the Modified Lam Annealing Schedule. Vincent A. Cicirello. Industrial Networks and Intelligent Systems, 7(25), Article e1, December 2020. doi:10.4108/eai.16-12-2020.167653 Chips-n-Salsa: A Java Library of Customizable, Hybridizable, Iterative, Parallel, Stochastic, and Self-Adaptive Local Search Algorithms. Vincent A. Cicirello. Journal of Open Source Software, 5(52), Article 2448, August 2020. doi:10.21105/joss.02448 Impact of Random Number Generation on Parallel Genetic Algorithms. Vincent A. Cicirello. In Proceedings of the Thirty-First International Florida Artificial Intelligence Research Society Conference, pages 2-7. AAAI Press, May 2018. Variable Annealing Length and Parallelism in Simulated Annealing. Vincent A. Cicirello. In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 2-10. AAAI Press, June 2017. doi:10.1609/socs.v8i1.18424 Genetic Algorithm Parameter Control: Application to Scheduling with Sequence-Dependent Setups. Vincent A. Cicirello. In Proceedings of the 9th International Conference on Bio-inspired Information and Communications Technologies, pages 136-143. EAI, December 2015. Multi-heuristic Stochastic Sampling Search: Extreme Value Theory and the Max K-Armed Bandit. Vincent A. Cicirello. Technical Report AI-09-003, Cicirello.org, March 2009. Statistical Models of Multistart Randomized Heuristic Search Performance. Vincent A. Cicirello. Technical Report AI-08-001, Cicirello.org, May 2008. Presented at the 40th Symposium on the Interface: Computing Science and Statistics (conference without proceedings), in Durham, NC, sponsored by the National Institute of Statistical Sciences. Full paper here as Technical Report. On the Design of an Adaptive Simulated Annealing Algorithm. Vincent A. Cicirello. In Proceedings of the International Conference on Principles and Practice of Constraint Programming First Workshop on Autonomous Search. AAAI Press, September 2007. The Max K-Armed Bandit: A New Model of Exploration Applied to Search Heuristic Selection. Vincent A. Cicirello and Stephen F. Smith. In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 3, pages 1355-1361. AAAI Press, July 2005. Winner of the AAAI 2005 Outstanding Paper Award. Heuristic Selection for Stochastic Search Optimization: Modeling Solution Quality by Extreme Value Theory. Vincent A. Cicirello and Stephen F. Smith. In Principles and Practice of Constraint Programming - CP 2004: 10th International Conference, Proceedings, volume LNCS 3258 of Lecture Notes in Computer Science, pages 197-211. Springer-Verlag, September/October 2004. doi:10.1007/978-3-540-30201-8_17 Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance. Vincent A. Cicirello. PhD thesis, The Robotics Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, July 2003. Modeling GA Performance for Control Parameter Optimization. Vincent A. Cicirello and Stephen F. Smith. In GECCO-2000: Proceedings of the Genetic and Evolutionary Computation Conference, pages 235-242. Morgan Kaufmann Publishers, July 2000.", "url": "https://www.cicirello.org/research/adaptive/"},
	{"title": "Applications of AI to Computer-Aided Engineering - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Applications of AI to Computer-Aided Engineering My research also includes applications of artificial intelligence to problems within the broad domain of Computer-Aided Engineering (CAE). These problems are mostly related to data management in large engineering digital libraries, such as automated engineering format classification, and search and retrieval of engineering artifacts, such as Computer-Aided Design (CAD) models based upon structural similarity. Selected Publications A Flexible and Extensible Approach to Automated CAD/CAM Format Classification. Vincent A. Cicirello and William C. Regli. Computers & Graphics, 37(5): 484-495, August 2013. doi:10.1016/j.cag.2013.03.007 Special Section on 3D Object Retrieval. Method for Comparing Solid Models. William C. Regli and Vincent A. Cicirello. U.S. Patent #7,761,265 B2, July 2010. An Approach to a Feature-based Comparison of Solid Models of Machined Parts. Vincent A. Cicirello and William C. Regli. Artificial Intelligence for Engineering Design, Analysis and Manufacturing, 16(5): 385-399, November 2002. doi:10.1017/S0890060402165048 Machining Feature-Based Comparison of Mechanical Parts. Vincent A. Cicirello and William C. Regli. In Proceedings of the International Conference on Shape Modeling and Applications, pages 176-185. IEEE Computer Society Press, May 2001. doi:10.1109/SMA.2001.923388 Managing Digital Libraries for Computer-Aided Design. William C. Regli and Vincent A. Cicirello. Computer-Aided Design, 32(2): 119-132, February 2000. doi:10.1016/S0010-4485(99)00095-0 The Engineering Design Repositories Project. William C. Regli, Lisa Anthony, Vincent Cicirello, Jon John, Xiaoli Qin, Yuriy Shapirshteyn, and Vera Zaychik. In National Science Foundation Design and Manufacturing Grantees Meeting. January 2000. Resolving Non-Uniqueness in Design Feature Histories. Vincent A. Cicirello and William C. Regli. In Proceedings of the Fifth ACM/SIGGRAPH Symposium on Solid Modeling and Applications, pages 76-84. ACM Press, June 1999. doi:10.1145/304012.304020 Intelligent Retrieval of Solid Models. Vincent A. Cicirello. Master's thesis, Department of Mathematics and Computer Science, Drexel University, Philadelphia, PA, June 1999. Intelligent Retrieval of CAD Models. Vincent A. Cicirello. In The Eleventh Annual Sigma Xi Research Symposium, pages 125. Drexel University and MCP Hahnemann University, May 1999. Abstract and Poster Presentation. Representations and Algorithms for CAD/CAM Digital Libraries. William C. Regli and Vincent A. Cicirello. In SIAM Workshop on Mathematical Foundations for Features in Computer-Aided Design and Manufacturing, pages 34. October 1998.", "url": "https://www.cicirello.org/research/aicae/"},
	{"title": "Computer Science Education - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Computer Science Education My computer science education research includes studies of effective pedagogical techniques in a variety of undergraduate computer science courses, including software engineering, AI, CS 1/2, discrete math, and non-major courses. Selected Publications Interactive Bin Packing: A Java Application for Learning Constructive Heuristics for Combinatorial Optimization. Vincent A. Cicirello. Journal of Open Source Education, 5(49), Article 140, March 2022. doi:10.21105/jose.00140 Student Developed Computer Science Educational Tools as Software Engineering Course Projects. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 32(3): 55-61, January 2017. A CS Unplugged Activity for the Online Classroom. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 28(6): 162-168, June 2013. Experiences with a Real Projects for Real Clients Course on Software Engineering at a Liberal Arts Institution. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 28(6): 50-56, June 2013. Collective Bin Packing: An Active Learning Exercise. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 24(6): 117-123, June 2009. On Self-Selected Pairing in CS1: Who Pairs with Whom?. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 24(6): 43-49, June 2009. On the Role and Effectiveness of Pop Quizzes in CS1. Vincent A. Cicirello. In Proceedings of the 40th ACM Technical Symposium on Computer Science Education, SIGCSE'09, pages 286-290. ACM Press, March 2009. doi:10.1145/1539024.1508971 Also published in ACM SIGCSE Inroads, 41(1):286-290, March 2009. An Interdisciplinary Course on Artificial Intelligence Designed for a Liberal Arts Curriculum. Vincent A. Cicirello. Journal of Computing Sciences in Colleges, 23(3): 120-127, January 2008.", "url": "https://www.cicirello.org/research/csedu/"},
	{"title": "Genetic Operators for Permutation Representation - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Genetic Operators for Permutation Representation The permutation representation for genetic algorithms requires specialized operators. A wide variety of crossover and mutation operators for permutations exist in the research literature. In my research on evolutionary computation for optimizing permutation structures, I have developed several crossover and mutation operators, including Cycle Mutation, Non-Wrapping Order Crossover (NWOX), Uniform Partially Matched Crossover (UPMX), Heuristic Sequencing Crossover (HeurX), and window-limited variations of common permutation mutation operators. Selected Publications A Survey and Analysis of Evolutionary Operators for Permutations. Vincent A. Cicirello. In Proceedings of the 15th International Joint Conference on Computational Intelligence, pages 288-299. November 2023. doi:10.5220/0012204900003595 On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection. Vincent A. Cicirello. Mobile Networks and Applications, 28(2): 507-517, April 2023. doi:10.1007/s11036-022-02060-z Cycle Mutation: Evolving Permutations via Cycle Induction. Vincent A. Cicirello. Applied Sciences, 12(11), Article 5506, June 2022. doi:10.3390/app12115506 On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators. Vincent A. Cicirello. In Proceedings of the 8th International Conference on Bio-inspired Information and Communications Technologies, pages 28-35. EAI, December 2014. Heuristic Sequencing Crossover: Integrating Problem Dependent Heuristic Knowledge into a Genetic Algorithm. Vincent A. Cicirello. In Proceedings of the Twenty-Third International Florida Artificial Intelligence Research Society Conference, FLAIRS-23, pages 14-19. AAAI Press, May 2010. Non-Wrapping Order Crossover: An Order Preserving Crossover Operator that Respects Absolute Position. Vincent A. Cicirello. In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO'06), volume 2, pages 1125-1131. ACM Press, July 2006. doi:10.1145/1143997.1144177 Nominated for the Genetic Algorithms Track Best Paper Award. Modeling GA Performance for Control Parameter Optimization. Vincent A. Cicirello and Stephen F. Smith. In GECCO-2000: Proceedings of the Genetic and Evolutionary Computation Conference, pages 235-242. Morgan Kaufmann Publishers, July 2000.", "url": "https://www.cicirello.org/research/gaoperators/"},
	{"title": "Search Landscape Analysis - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Search Landscape Analysis Recently, I have been exploring the fitness landscapes of permutation optimization problems, problems where one must find an optimal ordering of some discrete set (e.g., scheduling problems, mapping problems, among others). Such permutation problems fall into one of three broad categories, depending upon the structural characteristics of greatest influence on solution fitness (absolute positioning of elements, relative positioning of elements, or element precedences), although some problems may span more than one of these categories. For example, the fitness of solutions to the traveling salesperson problem (TSP) is completely dependent upon the costs of the edges between cities, and not at all dependent upon where in the tour the edge appears. Thus, the TSP is an example of an R-Permutation problem, one where fitness depends upon the relative positions of elements. Mapping problems where one must find an optimal mapping between the elements of two sets, such as the largest common subgraph problem, are A-Permutation problems as fitness depends strictly upon the absolute locations of elements within the permutation. Many scheduling problems are P-Permutation problems with element precedences playing a substantial role in the fitness of solutions (e.g., perhaps it is important to fitness that task A occurs sometime prior to tasks B, C, and D, but that it otherwise doesn't matter what task immediately follows A). Among other things, my research on permutation fitness landscapes has introduced a theoretical framework enabling exploring the effects of these structural properties on search performance. This includes the \"Permutation in a Haystack\" problem which enables specifying permutation fitness landscapes; as well as the \"Calculus of Search Landscapes\", a new tool for search landscape analysis that focuses on rates of change of fitness landscape topology, complementing other search landscape analysis tools such as fitness-distance correlation. Selected Publications A Survey and Analysis of Evolutionary Operators for Permutations. Vincent A. Cicirello. In Proceedings of the 15th International Joint Conference on Computational Intelligence, pages 288-299. November 2023. doi:10.5220/0012204900003595 On Fitness Landscape Analysis of Permutation Problems: From Distance Metrics to Mutation Operator Selection. Vincent A. Cicirello. Mobile Networks and Applications, 28(2): 507-517, April 2023. doi:10.1007/s11036-022-02060-z Classification of Permutation Distance Metrics for Fitness Landscape Analysis. Vincent A. Cicirello. In Proceedings of the 11th International Conference on Bio-inspired Information and Communication Technologies, pages 81-97. Springer Nature, March 2019. doi:10.1007/978-3-030-24202-2_7 JavaPermutationTools: A Java Library of Permutation Distance Metrics. Vincent A. Cicirello. Journal of Open Source Software, 3(31), Article 950, November 2018. doi:10.21105/joss.00950 Searching for a Permutation in a Haystack. Vincent A. Cicirello. In Proceedings of the Tenth International Symposium on Combinatorial Search (SoCS 2017), pages 177. AAAI Press, June 2017. Previously Published Papers Track. The Permutation in a Haystack Problem and the Calculus of Search Landscapes. Vincent A. Cicirello. IEEE Transactions on Evolutionary Computation, 20(3): 434-446, June 2016. doi:10.1109/TEVC.2015.2477284 On the Effects of Window-Limits on the Distance Profiles of Permutation Neighborhood Operators. Vincent A. Cicirello. In Proceedings of the 8th International Conference on Bio-inspired Information and Communications Technologies, pages 28-35. EAI, December 2014. Profiling the Distance Characteristics of Mutation Operators for Permutation-Based Genetic Algorithms. Vincent A. Cicirello and Robert Cernera. In Proceedings of the Twenty-Sixth International Florida Artificial Intelligence Research Society Conference, pages 46-51. AAAI Press, May 2013.", "url": "https://www.cicirello.org/research/landscape/"},
	{"title": "Metaheuristic Development - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Metaheuristic Development My research has lead to the development of new metaheuristics, including Value-Biased Stochastic Sampling (VBSS), and Wasp Behavior Inspired Stochastic Sampling (WHISTLING). Selected Publications Enhancing Stochastic Search Performance by Value-Biased Randomization of Heuristics. Vincent A. Cicirello and Stephen F. Smith. Journal of Heuristics, 11(1): 5-34, January 2005. doi:10.1007/s10732-005-6997-8 Boosting Stochastic Problem Solvers Through Online Self-Analysis of Performance. Vincent A. Cicirello. PhD thesis, The Robotics Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, July 2003. Amplification of Search Performance through Randomization of Heuristics. Vincent A. Cicirello and Stephen F. Smith. In Principles and Practice of Constraint Programming - CP 2002: 8th International Conference, Proceedings, volume LNCS 2470 of Lecture Notes in Computer Science, pages 124-138. Springer-Verlag, September 2002. doi:10.1007/3-540-46135-3_9 WHISTLING: Wasp Behavior Inspired Stochastic Sampling. Vincent A. Cicirello and Stephen F. Smith. In The 2002 SIAM Annual Meeting and SIAM 50th Anniversary, Final Program and Abstracts, pages 228. SIAM, July 2002. Randomizing Dispatch Scheduling Policies. Vincent A. Cicirello and Stephen F. Smith. In Using Uncertainty Within Computation: Papers from the 2001 AAAI Fall Symposium, pages 30-37. AAAI Press, November 2001.", "url": "https://www.cicirello.org/research/metaheuristics/"},
	{"title": "Multi-Agent Systems / Multi-Robot Systems - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Multi-Agent Systems / Multi-Robot Systems Although much of my research on multiagent / multirobot systems is specifically related to swarm intelligence, I have additionally conducted research related to other aspects of these systems, including market-based coordination, security engineering of multiagent systems, issues related to mobile agents on ad hoc wireless networks, power aware agents, and multiagent collaboration tools. Selected Publications Service-Based Computing on MANETs: Enabling Dynamic Interoperability of First Responders. Joseph Kopena, Evan Sultanik, Gaurav Naik, Iris Howley, Maxim Peysakhov, Vincent A. Cicirello, Moshe Kam, and William Regli. IEEE Intelligent Systems, 20(5): 17-25, September/October 2005. doi:10.1109/MIS.2005.94 Special Issue on Artificial Intelligence for Homeland Security. Agent Survivability Through Power Awareness. Maxim Peysakhov, Andrew Mroczkowski, Leonardo Urbano, Jacob Warren, Vincent A. Cicirello, William Regli, and Moshe Kam. In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 31-38. August 2005. doi:10.1109/MASSUR.2005.1507045 The AI Technologies of the Philadelphia Area Urban Wireless Network Testbed. Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Chris Dugan, Iris Howley, Moshe Kam, Joseph Kopena, Rob Lass, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, Brian Pyles, William Regli, Evan Sultanik, James Thiel, Kyle Usbeck, Dan Venutolo, and Marc Winners. In The Proceedings of the Twentieth National Conference on Artificial Intelligence, volume 4, pages 1674-1675. AAAI Press, July 2005. Network Awareness and the Philadelphia Area Urban Wireless Network Testbed. Joseph B. Kopena, Vincent A. Cicirello, Maxim Peysakhov, Kris Malfettone, Andrew Mroczkowski, Gaurav Naik, Evan Sultanik, Moshe Kam, and William C. Regli. In AI Technologies for Homeland Security: Papers from the 2005 AAAI Spring Symposium, pages 70-75. AAAI Press, March 2005. Designing Dependable Agent Systems for Mobile Wireless Networks. Vincent A. Cicirello, Max Peysakhov, Gustave Anderson, Gaurav Naik, Kenneth Tsang, William C. Regli, and Moshe Kam. IEEE Intelligent Systems, 19(5): 39-45, September/October 2004. doi:10.1109/MIS.2004.41 Special Issue on Dependable Agent Systems. Engineering Multi-Agent Systems. Donovan Artz, Vincent A. Cicirello, William Regli, and Moshe Kam. In Proceedings of the 2004 IEEE First Symposium on Multi-Agent Security and Survivability, pages 100-107. August 2004. doi:10.1109/MASSUR.2004.1368423 Demonstration of the Secure Wireless Agent Testbed (SWAT). Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren. In Proceedings of the Third International Joint Conference on Autonomous Agents and Multi-Agent Systems (AAMAS-2004), volume 3, pages 1214-1215. IEEE Computer Society, July 2004. doi:10.1109/AAMAS.2004.10265 Intelligent Systems Demonstration: The Secure Wireless Agent Testbed (SWAT). Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren. In Proceedings of the Nineteenth National Conference on Artificial Intelligence and the Sixteenth Innovative Applications of Artificial Intelligence Conference, pages 1004-1005. AAAI Press, July 2004. Demonstration of the Secure Wireless Agent Testbed (SWAT). Gustave Anderson, Andrew Burnheimer, Vincent Cicirello, David Dorsey, Saturnino Garcia, Moshe Kam, Joseph Kopena, Kris Malfettone, Andy Mroczkowski, Gaurav Naik, Max Peysakhov, William Regli, Joshua Shaffer, Evan Sultanik, Kenneth Tsang, Leonardo Urbano, Kyle Usbeck, and Jacob Warren. In The 14th International Conference on Automated Planning and Scheduling. June 2004. The Secure Wireless Agent Testbed. Vincent Cicirello, Moshe Kam, William Regli, Rafael Alonso, and Jeffrey Bloom. In The DARPA Proposers Day Workshop: Defense Against Cyber Attacks on Mobile Ad Hoc Networks. February 2004. Invited Presentation. Task Allocation Using a Distributed Market-Based Planning Mechanism. Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz. In Proceedings of the Second International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS-2003), pages 996-997. ACM Press, July 2003. doi:10.1145/860575.860763 Market-Based Multi-Robot Planning in a Distributed Layered Architecture. Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, and Anthony Stentz. In Multi-Robot Systems: From Swarms to Intelligent Automata: Proceedings of the 2003 International Workshop on Multi-Robot Systems, volume 2, pages 27-38. Kluwer Academic Publishers, March 2003. A Distributed Layered Architecture for Mobile Robot Coordination: Application to Space Exploration. Dani Goldberg, Vincent Cicirello, M. Bernardine Dias, Reid Simmons, Stephen Smith, Trey Smith, and Anthony Stentz. In The 3rd International NASA Workshop on Planning and Scheduling for Space. October 2002.", "url": "https://www.cicirello.org/research/multiagent/"},
	{"title": "Swarm Intelligence - Research - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Swarm Intelligence Swarm intelligence refers to multiagent systems whose behavior is motivated by models of naturally occurring swarming systems, such as social insect swarms (e.g., ants, wasps, etc). My past research in this area includes applications of models of wasp task allocation and wasp social hierarchy formation to industrial scheduling and coordination problems, as well as multirobot coordination in space exploration. I have also explored applications of swarming agents to data management and network monitoring on mobile ad hoc networks. Selected Publications Using Game Theory to Analyze a Biologically-Inspired Agent Coordination Mechanism. Vincent A. Cicirello. Technical Report AGENTS-08-002, Cicirello.org, October 2008. Designing Decentralized Software for a Wireless Network Environment: Evaluating Patterns of Mobility for a Mobile Agent Swarm. Vincent A. Cicirello, Andrew Mroczkowski, and William Regli. In Proceedings of the 2005 IEEE Second Symposium on Multi-Agent Security and Survivability, pages 49-57. August 2005. doi:10.1109/MASSUR.2005.1507047 Designing Dependable Agent Systems for Mobile Wireless Networks. Vincent A. Cicirello, Max Peysakhov, Gustave Anderson, Gaurav Naik, Kenneth Tsang, William C. Regli, and Moshe Kam. IEEE Intelligent Systems, 19(5): 39-45, September/October 2004. doi:10.1109/MIS.2004.41 Special Issue on Dependable Agent Systems. Wasp-like Agents for Distributed Factory Coordination. Vincent A. Cicirello and Stephen F. Smith. Autonomous Agents and Multi-Agent Systems, 8(3): 237-266, May 2004. doi:10.1023/B:AGNT.0000018807.12771.60 Ecology Based Decentralized Agent Management System. Maxim D. Peysakhov, Vincent A. Cicirello, and William C. Regli. In Formal Approaches to Agent-Based Systems: Third International Workshop, FAABS 2004, Revised Selected Papers, volume LNCS 3228 of Lecture Notes in Computer Science, pages 1-11. Springer-Verlag, April 2004. doi:10.1007/978-3-540-30960-4_1 WHISTLING: Wasp Behavior Inspired Stochastic Sampling. Vincent A. Cicirello and Stephen F. Smith. In The 2002 SIAM Annual Meeting and SIAM 50th Anniversary, Final Program and Abstracts, pages 228. SIAM, July 2002. Distributed Coordination of Resources via Wasp-like Agents. Vincent A. Cicirello and Stephen F. Smith. In Innovative Concepts for Agent-Based Systems: First International Workshop on Radical Agent Concepts, WRAC-2002, volume LNAI 2564 of Lecture Notes in Artificial Intelligence, pages 71-80. Springer-Verlag, January 2002. doi:10.1007/978-3-540-45173-0_5 Wasp-like Agents for Distributed Factory Coordination. Vincent A. Cicirello and Stephen F. Smith. Technical Report CMU-RI-TR-01-39, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, December 2001. Randomizing Dispatch Scheduling Policies. Vincent A. Cicirello and Stephen F. Smith. In Using Uncertainty Within Computation: Papers from the 2001 AAAI Fall Symposium, pages 30-37. AAAI Press, November 2001. A Game-Theoretic Analysis of Multi-Agent Systems for Shop Floor Routing. Vincent A. Cicirello. Technical Report CMU-RI-TR-01-28, Robotics Institute, Carnegie Mellon University, Pittsburgh, PA, September 2001. Improved Routing Wasps for Distributed Factory Control. Vincent A. Cicirello and Stephen F. Smith. In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 26-32. August 2001. Insect Societies and Manufacturing. Vincent A. Cicirello and Stephen F. Smith. In The IJCAI-01 Workshop on Artificial Intelligence and Manufacturing, Working Notes, pages 33-38. August 2001. Wasp Nests for Self-Configurable Factories. Vincent A. Cicirello and Stephen F. Smith. In Proceedings of the Fifth International Conference on Autonomous Agents, pages 473-480. ACM Press, May/June 2001. doi:10.1145/375735.376420 Ant Colony Control for Autonomous Decentralized Shop Floor Routing. Vincent A. Cicirello and Stephen F. Smith. In ISADS-2001: Proceedings of the Fifth International Symposium on Autonomous Decentralized Systems, pages 383-390. IEEE Computer Society Press, March 2001. doi:10.1109/ISADS.2001.917443", "url": "https://www.cicirello.org/research/swarms/"},
	{"title": "Open Source Computer Science Education - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Open Source Computer Science Education On this page, you will find information about open source educational software on topics of computer science, such as self-guided tutorial applications. You can find my computer science educational software at the following sites: GitHub Maven Central Repository Educational Software Here is a list of software I've implemented in support of computer science education. Interactive Bin Packing: This application provides a self-guided tutorial on combinatorial optimization, the bin packing problem, and constructive heuristics for bin packing. It also enables the user to interact with bin packing instances to explore their own problem solving strategies, or to test their knowledge of the various constructive heuristics covered by the tutorial. The application is not a solver for bin packing. Interactive Bin Packing is a tool for learning about the bin packing problem, as well as for learning about heuristic techniques for solving instances of the problem. Source code: GitHub Repository Latest release: Language: Java License: GNU General Public License Version 3 (GPLv3). Top of the page", "url": "https://www.cicirello.org/software/csedu/"},
	{"title": "Open Source Research Software - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Open Source Research Software On this page, you will find information about my open source research software. This includes software implemented as part of my research on evolutionary computation, artificial intelligence, machine learning, and algorithms, including Java libraries for evolutionary computation and other metaheuristics, and code to reproduce experimental results from my published papers. It is organized into the following sections: Research Software Libraries Reproducible Research Results You can find my research software at the following sites: GitHub Maven Central Repository Research Software Libraries The following is a list of my research software that I have released in the form of libraries and frameworks to enable ease of reuse by others. Chips-n-Salsa - A Java library of customizable, hybridizable, iterative, parallel, stochastic, and self-adaptive local search algorithms: The library includes implementations of several stochastic local search algorithms, including simulated annealing, hill climbers, as well as constructive search algorithms such as stochastic sampling. The library most extensively supports simulated annealing. It includes several classes for representing solutions to a variety of optimization problems. For example, the library includes a BitVector class that implements vectors of bits, as well as classes for representing solutions to problems where we are searching for an optimal vector of integers or reals. For each of the built-in representations, the library provides the most common mutation operators for generating random neighbors of candidate solutions. Additionally, the library provides extensive support for permutation optimization problems, including implementations of many different mutation operators for permutations, and utilizing the efficiently implemented Permutation class of the JavaPermutationTools (JPT) library. Project page, including API documentation. Source code: GitHub Repository Latest release: Repository of example programs illustrating usage of the library. Language: Java License: GNU General Public License Version 3 (GPLv3). JavaPermutationTools: A Java library for computation on permutations and sequences: The JavaPermutationTools (JPT) library provides Java classes that enable representing and generating permutations and sequences, as well as performing computation on permutations and sequences, such as implementations of a variety of permutation distance metrics as well as distance metrics on sequences (i.e., Strings, arrays, and other ordered data types). Project page, including API documentation. Source code: GitHub Repository Latest release: Repository of example programs illustrating usage of the library. Language: Java License: GNU General Public License Version 3 (GPLv3). ρμ: A Java library of Randomization enHancements and Other Math Utilities: ρμ includes implementations of various algorithms for efficiently randomly sampling combinations of indexes into arrays and other sequential structures. It also includes efficient implementations of random number generation from distributions other than uniform, such as Gaussian, Cauchy, etc. Additionally, it includes implementations of other math functions that are either needed by the randomization utilities, or which are needed by some of our other projects. Project page, including API documentation. Source code: GitHub Repository Latest release: Language: Java License: GNU General Public License Version 3 (GPLv3). org.cicirello.core: A Java library of utilities and data structures: This library provides some of the core utilities and data structures used in several of our other libraries and projects, including but not limited to Chips-n-Salsa and JavaPermutationTools, as well as various projects that use those libraries. Project page, including API documentation. Source code: GitHub Repository Latest release: Language: Java License: GNU General Public License Version 3 (GPLv3). Ziggurat Gaussian: Java implementation of the Ziggurat algorithm for generating Gaussian distributed random numbers. Source code: GitHub Repository Latest release: Language: Java License: GNU General Public License Version 3 (GPLv3). Performance Tests for Small Clusters: Code developed to test the performance of a small 8 node cluster of raspberry pis. Implementations of a few simple parallel algorithms for testing the performance of a small cluster. Uses Java RMI for communication between master node and the worker nodes. Also includes useful bash scripts such as for starting the RMI servers on the worker nodes, shutting down and rebooting worker nodes from the master node, etc. Source code: GitHub Repository Zip of Java source. License: GNU General Public License Version 3 (GPLv3). Top of the page Reproducible Research Results The following is a list of software that can be used to reproduce the experimental results from some of my published journal articles and conference papers. permutation-crossover-landscape-analysis: Experiments comparing the performance of many crossover operators for permutations on fitness landscapes that isolate different permutation features, exploring the different problem characteristics that impact when different crossover operators are expected to perform well. Code to reproduce the experiments of: Source code: GitHub Repository Latest release: Languages: Java (experiments) and Python (analysis of results) License: GNU General Public License Version 3 (GPLv3). btpe-iterations: Experiments exploring the acceptance-rejection sampling behavior of the binomial random variate generation algorithm implemented in the ρμ library. Code to reproduce the experiments of: Source code: GitHub Repository Latest release: Languages: Java (experiments) and Python (analysis of results) License: GNU General Public License Version 3 (GPLv3). mone-article-experiments: Experiments related to permutation metrics, permutation mutation operators, and fitness landscape analysis for permutation optimization. Code to reproduce the experiments of: and . Source code: GitHub Repository Latest release: Languages: Java (experiments) and Python (analysis of results) License: GNU General Public License Version 3 (GPLv3). cycle-mutation-experiments: Experiments with the new cycle mutation operator. Code to reproduce the experiments of: . Source code: GitHub Repository Latest release: Languages: Java (experiments) and Python (analysis of results) License: GNU General Public License Version 3 (GPLv3). self-tuning-lam-experiments: Experiments with simulated annealing using the Self-Tuning Lam annealing schedule, comparing its behavior and performance with that of the Modified Lam annealing schedule. Code to reproduce the experiments of: . Source code: GitHub Repository Latest release: Languages: Java (experiments) and Python (analysis of results) License: GNU General Public License Version 3 (GPLv3). modified-lam-experiments: Experiments with simulated annealing and an optimized version of the modified lam adaptive annealing schedule. Code to reproduce the experiments of: . Source code: GitHub Repository Latest release: Languages: Java (experiments) and Python (analysis of results) License: GNU General Public License Version 3 (GPLv3). Top of the page", "url": "https://www.cicirello.org/software/research/"},
	{"title": "Open Source Tools - Vincent A. Cicirello - Professor of Computer Science", "tags": "", "type": "html", "text": "Open Source Tools On this page, you will find information about a variety of utilities I've implemented for varying purposes and which I have released as open source software. It is organized on this page into the following sections: GitHub Actions for Workflow Automation Command-line Utilities Docker containers (coming soon) You can find these open source tools at the following sites: GitHub Python packages on PyPI Containers on Docker Hub GitHub Actions for Workflow Automation While developing software for my research, on occasion I implement tools to automate parts of my workflow. When these seem like they would be useful to others, I share them as open source. Since we use GitHub to develop our research software, our choice for CI/CD and other automation is GitHub Actions, which is GitHub's built in workflow automation framework. I've deployed a website, Open Source GitHub Actions for Workflow Automation, focused specifically on the GitHub Actions that I've implemented for this purpose. A few of these GitHub Actions are the following. jacoco-badge-generator: The jacoco-badge-generator parses a jacoco.csv file from a JaCoCo coverage report, computes C0 and C1 coverage percentages from JaCoCo's Instructions and Branches counters, and generates badges for one or both of these (user configurable) to provide an easy to read visual summary of the code coverage of your test cases. The jacoco-badge-generator provides two modes of operation: as a GitHub Action within GitHub's workflow automation framework, as well as a command-line utility that can be used as part of a local build script. The jacoco-badge-generator (as a GitHub Action) can also optionally be used as part of a pull-request check. Specifically, you can configure it to fail the workflow run if coverage decreased relative to prior run, and/or if coverage is below a target threshold. Info page Latest GitHub Action release: Latest command-line utility release: Source code: GitHub Repository Language: Python License: MIT. user-statistician: The user-statistician GitHub Action generates a detailed visual summary of your activity on GitHub in the form of an SVG, suitable to display on your GitHub Profile README. Info page Latest release: Source code: GitHub Repository Languages: Python and GraphQL License: MIT. generate-sitemap: The generate-sitemap GitHub Action generates an XML sitemap for a website hosted on GitHub Pages. Info page Latest release: Source code: GitHub Repository Language: Python License: MIT. javadoc-cleanup: The javadoc-cleanup GitHub Action enables creating mobile-friendly and SEO ready, documentation sites by post-processing javadocs in GitHub Actions. The javadoc-cleanup GitHub action is a utility to tidy up javadocs prior to deployment to an API documentation website, assumed hosted on (but not limited to) GitHub Pages. Info page Latest release: Source code: GitHub Repository Language: Python License: MIT. count-action-users: The count-action-users GitHub Action is a meta-action for use by maintainers of GitHub Actions to monitor and report the number of users of the GitHub Actions that they maintain. It generates a Shields endpoint for each Action that they maintain with the count of the number of workflows that use it. Info page Latest release: Source code: GitHub Repository Language: Python License: MIT. Top of the page Command-line Utilities Here are a few command-line utilities that I originally implemented for my own purpose, but have since released and maintain as open source. bibliometrics: The bibliometrics tool is a command-line utility that parses a researcher's Google Scholar profile, and summarizes various bibliometrics, generating an SVG that can be shared on a website or other online platform. The bibliometrics that it computes include h-index, g-index, i10-index, i100-index, e-index, as well as total number of citations and the five-year citation count. See my bibliometric summary for an example. Latest PyPI release: Source code: GitHub Repository Language: Python License: MIT. jacoco-badge-generator: See earlier on this page for details. This tool can be used as a command line tool, or within the GitHub Actions framework. Top of the page", "url": "https://www.cicirello.org/software/tools/"},
	{"title": "CSCI 4104 - Data Structures and Algorithms II - Spring 2023", "tags": "course python algorithms programming least problem students exam work late assignments data computing structures assignment analysis march party blackboard grades math computer allowed policy algorithm grade program april review february meet ability academic exams free available campus solutions overall apply required multithreaded paper shortest science completeness need adjust class csci masks even evaluate topics solution textbook relevant code calculus written last string learning time still phone range development like covered scale complex require sets emergency good graph take related environment form analyze library honesty upon points less principles problems student matching lecture many medical source incomplete video start january done rest alternative someone videos viewing path depending knowledge sure devices version posted spanning answer standard spring prior wrote labs identify approximately syntax bump write install matter produce complete several cheating plus since design working make semester clustering violations concepts access another found apps chart partially details discrete paths installed submit idea absence show penalized graphs hours center libraries disciplines plan worn fail word theory writing installation homework minimum first date deadlines asymptotic pycharm note penalty general idle lectures currently stockton exception bring scanned graduate scanner absent gaining unlikely documentation former submitted advising statistical utility example refuse computers business column familiar right violating cicirello days information freely syllabus communicate notes questions official language nearest faculty leave contact implement powerpoint image count list institutionally materials varies decimal scanners blank technical provided directory watching ignore passed recorded showing taking advanced output number context multiprocess text likely foundations podium strongly messages meetings fundamentals works representations holiday notify local scrap electronic camera missed implementing generally places websites covid adjustments constant orienting feel office professionally derivatives suggests earlier documented continuous implemented different credit comparison already permanently forget finals lists violation semesters university phones switch running reserve occupied highly assisting certainly familiarize performing editions objectives caught trees professional worked exercises meeting trends frozen monitoring critically processing complexity religious discovered probably document scan fundamental long seen incompatible current unless variety actively supports disabled limits latest grading single watch extensively theories assist thing slides importantly developing multiprocessing pairs instructors school things starts dust courses might please longer desk hypothetical name internet necessitates asking needed android wellness throughout mask overview cases previous effectively reading deepen restricted passing software reasoning decide whole experimental collected type consistency terms allotted case guide attempts raspberry meets dates examples provide submitting explicitly differences planned distribution multipage copy editor suggest lead encountered help preferably appointment simple intro totally tree format core effects personally topic solving line part vincent point aware holding parallel studies applying requirements amount limited edges resources amortized command performance round build attendance simply", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSCI4104.pdf"},
	{"title": "CSCI 4463 - Artificial Intelligence - Spring 2023", "tags": "course homework least search assignments computing students late exam portion artificial time computer assignment policy relevant overall video apply paper science march meet emergency adjust blackboard masks intelligence field ability outcome computation constraint points solution academic problems learning april work first done february lectures evolutionary allowed videos viewing robot complex programming additional related python evaluate algorithms grades local stochastic topics satisfaction complete plus principles code intelligent exams online sampling heuristic medical view uninformed software problem phone section game scale point motion someone devices require planning notes questions spring need take parts choose behavioral class identify form csci number order analyze honesty produce agents less cheating hybrid student java violations grade found unless lecture free associated theories chart partially available developing incomplete last campus solutions sections discrete submit needed absence edition penalized coverage hours disciplines required review specifically plan worn meets teams math word theory explicitly january date small data intro otherwise development covered note week solving penalty limited performance stockton exception equivalent half bring completing conducting outcomes scanned scanner understanding absent addition knowledge gaining unlikely neuroscience documentation former size detail much statistical posted example refuse offered computers business sets column right violating cicirello answer days information freely syllabus communicate nearest good faculty leave contact implement powerpoint computational asynchronously wrote list institutionally decimal blank technical provided directory watching ignore just reviewing recorded approximately taking sick output else context write underlying even strongly messages fundamentals skip representations holiday notify scrap russell electronic camera missed draw places covid adjustments constant minor subject several office suggests earlier documented continuous textbook forget finals lists violation university phones attending design reserve working highly assisting certainly familiarize specific application clustering objectives semester caught interpreting professional elective drawing meeting trends closely expected numbered completed benefit concepts processing religious access probably another document scan fundamental current variety supports apps think grading structures many diagram watch assist thing treat slides source instructors written please desk internet benefits necessitates asking idea android show update rule assistance anything minimal wellness throughout mask cases effectively center start restricted passing applications reasoning whole program type consistency preparation terms greater case guide dates focusing provide requires study methods range planned tools specified multipage modern writing means suggest encountered help preferably appointment emphasis format accepted particular effects personally person outside topic option professionals vincent numerical general studies requirements rewatch alternative resources round currently build attendance simply", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSCI4463.pdf"},
	{"title": "CSCI4600 - Senior Seminar - Spring 2023", "tags": "course least student computing professional exam students ethics class annotated points grades intellectual presenters overall grade policy march slides presentation articles case lose presentations computer writing ethical code point science current adjust blackboard submit center csci april property masks range first academic essay scale assignment february stockton allowed understanding documentation resume days closed medical emergency late technical miss hours assignments required work provide evaluate participation bibliography question date like topic note studies make resources attendance interacting bring impact violations analysis guest religious another majors expectations business answer chart attend available questions developing spring incomplete contact legal last campus please develop take idea absence learning wellness short practice career number bump write worn presenting portion honesty ability outcome january minimum subject read less cheating plus relevant university penalty part rest limited currently someone response clustering semester exception caught unforeseen inform discussion losing cover draft absent meeting gaining unlikely discussing sure excellent opportunity require recognize easy substantial version former senior critically shortly advising statistical providing conference weeks example journal refuse variety unless supports free quiz decision grading learn column right violating cicirello assist timeline information freely partially syllabus reports communicate orally expressing source nearest research faculty instructors leave powerpoint judgments wrote count degree institutionally desk hypothetical final demonstrate decimal support necessitates asking classes rule choose penalized directory papers society related skill ignore passed mask digital overview effectively multiple reading message form approximately detailed time avoid passing summaries seminar reasoning whole program type consistency output feedback enable lost review participating specifically majority period meets laws arise dates journals signup phone analyze utilize served messages math paragraph study planned holiday notify gain library peer graded licensing illness wherever informed explore reminder missed change suggest encountered help places report oral complete return covid adjustments constant prepared several appointment office suggests responsibilities copies earlier documented continuous create potential development absences circumstances already done license core forget finals lists speaker violation present week vincent general hour paper reserve highly assisting dilemmas familiarize exams conduct round objectives simply", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSCI4600.pdf"},
	{"title": "CSIS2101 - Programming and Problem Solving I - Spring 2011", "tags": "exam programming class assignment assignments course blackboard time quizzes half least quiz week java grade available late prior material work dates provide documentation medical emergency spring additional pair review explicitly computer tentative generally return subject office array exams stockton allowed skills cover understanding knowledge violations completed submitted science chapters unless variables thursday team single open notes incomplete loop test please regarding announced rule learning related common pilot taking software feedback number similar system fundamentals operators graded topics missed change first section experience nested academic documented limit textbook conducted less send errors problems solving point working sheet nature control tuesday user exception caught references lateness worked electronically refinement strict meeting gaining letterhead sure thus require accept delay processing programs flash advising object switching checking stepwise students mastery example result communications found reported lecture free situation policy situations validate discovering grading correspondence consulting makes black started services possible many sample cicirello march simulations watch returning closed syllabus attend numbers developing language developed research faculty school serious talk details others courses making ensure static last need weight engineering collection institutionally enhanced take constructors institutional overall fields conflict necessitates needed absence isbn roles changes proper choose penalized miss random declaring responsible statement apply multiple reading strictly schedule approximately timely short syntax relational advanced tested happy memo arithmetic accessed april years required preparation problem portal allotted likely depends researchers arise testing field phone strongly math arrays participation larger methods range grades planned cell alerting encourage strings writing member electronic regular together sentinel implementing help names january logic complete date instance mail sponsoring several feel appointment implicitly prevents high shown distributing continuous otherwise development already minutes accepted particular exceptions csis improve lists covered individually topic since note purpose student penalty professionals values vincent integrated running aware general times strive public parameter tuesdays enforced familiarize sports notified february boolean currently variable online independently objectives semester preceptorial account simply", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS2101.pdf"},
	{"title": "CSIS2102 - Programming and Problem Solving II - Spring 2008", "tags": "programming exam class assignment assignments course grade webct least prior material review exception medical spring edition time text provide solving week quiz closed emergency test please announced memo problem explicitly missed data section office documented exams half allowed skills cover java loki knowledge documentation submitted concepts object access team available incomplete regarding take conflict additional rule learning penalized related schedule advanced feedback similar work dates math computer graded event homework topics tentative quizzes return subject homeworks academic intro development inner csis techniques topic send problems point abstraction stockton account equivalent caught thought references lateness worked depending electronically understanding meeting recursion gaining letterhead sure thus frames violations require completed accept delay selection science programs drive flash advising checking chapter students turn extended result communications unless free policy situations grading though correspondence cicirello march single swing returning syllabus notes attend developing developed faculty mouse late boundaries talk dynamic aids details written quicksort beforehand ensure need engineering institutionally institutional materials piece removable final overall fields higher necessitates needed absence isbn changes proper miss prevent responsible customizing midnight interfaces previous apply layout approximately timely short taking placed software tested happy april required number specifically allotted greater order period depends researchers arise system field phone strongly stated fundamentals participation larger curve range planned grades cell file encourage writing recall inheriting monday change generally help names january subclass minimum first date mail sponsoring feel appointment implicitly shown continuous emphasis took textbook already conducted accepted particular exceptions transfer phrase instructor improve daily covered individually oriented present since note purpose student penalty professionals vincent storage integrated aware general timer times strive design working sheet harder allows familiarize sports nature notified implementation february control currently online objectives semester preceptorial simply", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS2102.pdf"},
	{"title": "CSIS2226 - Foundations of Computer Science - Spring 2014", "tags": "exam least class python course assignments homework review sets computer academic science grade language blackboard circuits math logic boolean trees combinatorial policy spring late programming discrete graphs time program optimization provide algorithms honesty week mathematics someone functions objective cover complexity chapters relations medical emergency details please graduates learning material problem slack work participation outcome first small date csis problems note computing assignment exams stockton growth allowed exercises electronically knowledge violations submitted another students possible closed information incomplete prior regarding announced overall conflict allow absence additional apply avoid applications helping calculator phone even induction violate ability topics missed tentative mathematical subject office experience documented cheating send penalty point general working limited exception caught worked depending understanding visual recursion gaining documentation portable concepts advising examine experiments fundamental posted result communications refuse systems free relationship situations hand think participate grading learn correspondence withdrawing violating cicirello march entering theories syllabus notes attend approximate faculty claiming copying talk implement written computational making correctness typically develop significant downloaded institutionally achieving institutional playing demonstrate mathematically installed necessitates submit applied asking needed changes rule penalized sleeping miss related terminology overview midnight identify specification strictly schedule form referred software happy reasoning answers semantics type april required number games specifically text greater guide period goal arise foundations dates examples field conjectures determined analyze classtime larger study circuit methods formulate portion range planned grades cell recursive modern member copy enables distracting cheat help waive january elements complete return noisily mail sponsoring feel prevents upon major answering continuous verification factual development quickstart resource pertaining accepted particular less formal covered principles topic option solving part phones vincent investigate principal aware times paper parallel define sheet requirements familiarize sports nature studied notified february contributing allowing performance currently build unauthorized objectives semester preceptorial", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS2226.pdf"},
	{"title": "CSIS3103 - Data Structures and Algorithms I - Spring 2017", "tags": "chapter exam class assignments review programming course java spring written learning data idea queues homework stockton grade structures work allowed objective sorting hours time priority hash participation less lists trees exercises recursion stacks concepts sets medical emergency late maps please overall required tables problem binary point exams skills documentation completed associated developing source incomplete conflict blackboard rule reading approximately collections allotted algorithm provide explicitly noisily date academic documented directly eclipse csis violation solving code penalty paper design assignment independently semester attendance exception caught projects sized vary offer worked contributions depending electronically absent understanding welcome appendix impact expected circular analysis critically submissions letter advising strengthening ringing chapters document fundamental extended result unless policy situations grading possible team cicirello march single automated classic discuss syllabus notes attend available questions arriving prior copying talk possibly courses widely list institutionally decrease announced institutional piece adjust solve parties leaving iterators necessitates away koffman ranges absence searching changes penalized anything miss prevent related wellness factor effectiveness midnight apply special schedule environment smaller software advanced happy reasoning april reliable positively specifically greater period efficiency method dates impacts examples field phone analyze math evaluate coach larger algorithms range grades cell peer occasionally share implementations efficient topics missed fieldtrip change tutoring tentative generally framework january organizing choice complete first return mail subject office experience upon continuous emphasis checked development absences textbook appropriateness done exceptions important covered files topic option note sponsor game week university vincent storage integrated aware effective general highlight times negatively working sheet designed amount familiarize studied notified implementation abstraction february alternative resources competencies increase industrial application currently various objectives latter", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS3103.pdf"},
	{"title": "CSIS4466 - Computer Graphics - Fall 2015", "tags": "exam least average overall course graphics computer problem java programming assignments students late grade idea learning stockton apply participation ability outcome topics development less design calculus objective systems sets class hours modeling software advanced work math academic csis mathematics student general allowed affine skills knowledge violations medical emergency things please transformations geometric blackboard penalized overview time reasoning program review calculator rendering dates theory linear missed first covered point exams professional scene electronically impact submitted science frequently algebra free necessary learn team meet developing arriving incomplete prior written others courses coordinate announced leaving conflict absence graphs disruptive environment construct required positively slack system examples phone strongly evaluate algorithms honesty homework tentative mathematical several office documented cheating plus apis week penalty part integrated computing paper assisting limited assignment someone quantitative online exception caught building cover equations firm path outcomes engines gaining sampling lowered documentation expected benefit concepts letter processing monitors advising sophisticated ringing independent texturing another fundamental matrix result current communications grasp refuse desired varying composition supports subsequent vector behavior computers policy situations participate grading possible violating cicirello calls assist geometry compositing font standard syllabus november notes attend questions occasional rules good research talk implement skipping area actual image making tradeoffs widely constructive develop significant institutionally graph discrete homogeneous institutional necessitates away asking classes changes rule choose sleeping prevent sheets related provides early strokes custom start pair schedule curves material form passing applications happy zhang number stuck context specifically text reduce similar likely meets arise foundations classroom underlying comprehension animation provide field even utilize transparency bounds coach fundamentals study portion range desks grades representations cell tools fall modern december hopefully implementing fieldtrip noisy generally help requiring additionally elements backgrounds thanksgiving complete choice return small date mail data subject feel simple upon reference answering continuous intro directly otherwise textbook absences demonstrates like done eclipse relevant effects purposes violation principles individually topic october note sponsor game solving vincent necessarily aware times alone september graphing negatively construction working algorithmic brief applying process familiarize notified alternative resources competencies structure industrial performance application currently independently semester preceptorial", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS4466.pdf"},
	{"title": "CSIS4481 - Cryptography and Data Security - Fall 2018", "tags": "exam least cryptography course assignments math data blackboard class calculator homework encryption topics csis cryptosystems standard learning hours security exams submitted sets late discrete overall idea number provide classical academic less public allowed calculus objective documentation grade supports medical emergency needed time advanced problem review slack foundations theory grades missed level covered problems point assignment someone functions cover electronically knowledge violations access algebra communications unless couple incomplete prior courses please announced adjust asking penalized digital signatures algorithm work underlying even hash smart modern honesty cryptographic tentative first mail points otherwise cheating logarithms plus principles send solving week penalty paper authentication stockton various exception caught periodically uncertain worked java depending welcome trends gaining unlikely pace completed former concepts handheld device advising checking providing probably achieve another fundamental found refuse actively free policy situations grading right accelerated violating cicirello component theories assist chart essential syllabus november notes attend available questions nearest instructors faculty presentation view post contact things details written weighted need significant institutionally regarding institutional materials piece decimal internet conflict allow necessitates absence changes rule related terminology provides responsible wellness human just overview practical apply center message advised schedule form management passing applications practice software reasoning optionally arithmetic memo whole type issues required broad text greater likely python meets arise programmer classroom dates explicit system examples field phone strongly participation algorithms portion range protection planned computer fall electronic december means linear abstract suggest encountered help places thanksgiving sides complete return mathematical date codes adjustments sponsoring equally subject several political prevents office mode copies documented continuous totally different pertaining accepted tool relevant daily violation individually topic october announcements since note covering code mathematics scale vincent network aware times september attending tuesdays reserve sheet highly assisting applying familiarize sports social nature limited notified requirement specific performance round currently objectives semester preceptorial", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS4481.pdf"},
	{"title": "CSIS4485 - Software and Security Engineering - Fall 2017", "tags": "team project software average exam least grade overall system members group engineering member point contract provide code course final details requirements allocation individual deliverables work participation chapter meet academic development agreement grades points document teamwork source required versions security someone version specify less allocated another submit idea prior need december csis essay semester objective open medical name learning consistent instructor note procedures deadline later designated provided additional roles perhaps related responsible class existing signed meetings honesty decisions complete upon license deduction make meeting penalties things results reflection significant failure time teams date penalty user allowed sure documentation address alternate possible questions emergency undersigned test disruptive form number majority tasks even topics missed prototype adjustments documented limit textbook adjusted design specific exams proposal actions expectations grading developing might develop support higher proper anything every greater agree specified fall copy certain data covered week general assignment simply reuse completing depending unanimous knowledge agrees impact opportunity submitted assigned agile role communications policy standard language developed skipping others programming count parts sheets schedule assign entire else action write likely testing forth noisy names return several earlier directly different cheating plus tool relevant principles individually since student working assisting structure borrowing skills models dependability violations letter starting activity frequently single call progress arriving incomplete late accountable whatever leaving absence needed penalized throughout wants early start assignments criteria interactive discussions feedback positively designate case meets allocate phone exact explicitly signature portion range means sides architectural minimum first small addresses section responsibilities consequences combination otherwise minutes techniques potentially part necessarily original limited tuesday stockton various approve exception prepare exceeding properly approved contributions scanned draft record near assigning addition gaining violated unlikely rubrics past engineers require former science evaluating detail providing strong ringing weeks chapters turn result arrived refuse systems behavior develops charge decreased column operational right procedure violating cicirello component calls days information discuss syllabus couple notes communicate evidence resolve faculty hold contact implement info making educational static list institutionally regarding take tackle blackboard blank rather interface title sleeping primarily desktop intentionally provides anticipation divide tutorial bullet just identify approval multiple checkpoints special material avoid taking placed memo focus text cooperation algorithm order reduce similar period programmer handle sense underlying finalized field evaluate fundamentals algorithms serves retain acquiring peer graded together table workload opportunities likewise thanksgiving report strongest rotate sponsoring certify certifying prevents office split fine continuous credit upward combine counting read everyone touch conducted experiences establish chosen unit apis dream strengths violation october comprised present demo juniors total allocations negatively convey tuesdays define photocopy universal console processes familiarize sports determine cross credited caught sized vary commit precepting constraints professional cover maximize firm state trends discussing expected night invent benefit specifying shared feels functional components access seniors fundamental recommend long worth current found secretary excuse unless attach free mechanism preferred situations think participate though languages manager structures makes ideally consensus evolve theories assist closed attend separate occasional reflecting individuals initiate unable features view written generate partway actual ensure coordinate last please sections enhanced institutional easiest allocating internet rewards conflict rotating necessitates asking records show aspects rule minimal common sorting missing normal figure apply resolving windows equal typed short passing fractions downward leader modeling graphical whole type issues problem stuck specifically enter plan identifies arise standalone dates explicit examples determined anyone primary requires submitting methods formulate planned distribution presentations tools computer writing event regular architecture reward entirety disagreement suggest great help elements choice checkpoint prefer prepared basing experience deadlines precedence outlined answering presented create described negotiate absences adapting dependable rejection exceptions important refers proposed topic send critical transpired vincent membership envision platform aware alone paper reject observations animations dated applying process amount cost advantage notified deviate implementation clear groups currently matters listed earn attendance", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/CSIS4485.pdf"},
	{"title": "GNM 2248 - Artificial Intelligence in Society - Summer 2023", "tags": "discussion quiz course least posts grade take response june days required first topic available later blackboard dates specific online chatgpt syllabus questions message three grades quizzes office read send third respond post learning artificial time discussions forums likely goal field date fiction academic student expected last turing miss forum approximately articles issue made readings place complete tool relevant substantive make listed vary weekday science strong automatically students current found mind grading rationale answer details test please overall demonstrate virtual rather scheduled society wellness throughout averaged early overview hours directed center start equal form focus rubric problem four broad work streams impacts intelligence provide examples even determined messages meetings requires summer weak asked together missed anytime cheat future upon space points links like pertaining ideas scientists violation note solving general original limited zoom stockton someone machines simply weekends thought reflected videos completing setting score character elective pick foundational knowledge gaining unlikely audience sure thus past preference violations active unintentionally critically requested steven cognitive alternatives rounded assigned device much providing another fundamental recommend example capability notions biasing takes deadline computers policy middle participate quicker started kubrick cicirello everyday call appear meet watch theories freely discuss principle clarify medical correct historical instructors regularly unable view leaves designated generated contact scheduling excuses five others computational needs treated films courses making need might volume incorrectly solve fields decimal conflict higher drop private asking session critique disappear fridays anything related common terminology behavioral missing memorial human class every responded covers digital answered identify length monitor technology material ones classmates risk window applications taking placed helping reasoning answers none issues hypothesizes movies number justify options truly nobody plan write similar viewpoint sense focusing philosophy philosophers lowest heavy system phone strongly contrast analyze utilize programmed legitimate presenting evaluate paragraph explicitly weekend direct range valid ways honesty electronic collective event regular table monday clarifying particularly explore question entirety topics suggest tentative ethical help multimedia elements retake fellow randomly mathematical span pioneering appointment simple clearly deadlines second earlier shown arrange intro claim create different combination factual discover spielberg individual everyone minutes created timing conducted history cheating literacy stays intervals outside person covered principles true present since penalty link contribute interact scale vincent point engaging times intended extra working direction familiarize nature assignment posting doctor suggested tuesday round attention objectives stanley reduction", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/GNM2248.pdf"},
	{"title": "GNM2358 - Introduction to Game Theory - Fall 2007", "tags": "exam game class course strategies grade least time list normal assignments problem games theory topics small concepts discuss test graph dominated conflict related form likely participation graded homework mathematical important covered elementary week exams properties assigned students extended rational sets associated partially open november available prior please learning pure material applications experimental required similar dates field examples computer december missed generally return perfect several office academic group level mixed operations matrices nature stockton discussion resolution lateness trees skills cover depending exercises assumption diverse meeting knowledge gaining letterhead solid thus devices violations documentation expected analysis interdisciplinary accept submitted delay advising vertices frequently fundamental utility matrix result communications notion grasp journal multiplication free situation policy situations decision grading many cicirello predictions component taught meet returning theories webct days governs information implies syllabus medical attend approximate developing late boundaries talk making institutional final higher deep sequential additional rule penalized miss prevent psychology terminology human practical apply rich strictly schedule disciplines timely short articles taking college modeling happy action specifically order calculator sessions arise probability insight provide phone stated curve methods cell tools fall writing reliance minimum first theoretical subject eliminating feel appointment roger high earlier documented maximizes read individual accepted particular exceptions relevant vectors phrase improve principles october problems since note solving student blend penalty weakly vincent necessarily aware general times strive working allows amount move familiarize assignment notified interesting match specific performance application quantitative objectives equilibrium simply", "type": "pdf", "text": "", "url": "https://www.cicirello.org/teaching/syllabi/GNM2358.pdf"}]};
